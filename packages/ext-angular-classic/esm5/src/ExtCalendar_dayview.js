import { __decorate, __extends, __param } from "tslib";
//import EWCCalendar_dayview from '../dist/ext-calendar-dayview.component.js';
//inputs: (new EWCCalendar_dayview()).properties,
//import EWCCalendar_dayview from '@sencha/ext-web-components-classic/dist/ext-calendar-dayview.component.js';
import { EWCCalendar_dayview } from '@sencha/ext-web-components-classic';
import { Host, Optional, SkipSelf, Component, ElementRef, forwardRef, ViewContainerRef } from '@angular/core';
import { EngBase } from './runtime/angularbase';
var ExtCalendar_dayviewComponent = /** @class */ (function (_super) {
    __extends(ExtCalendar_dayviewComponent, _super);
    function ExtCalendar_dayviewComponent(eRef, hostComponent, vc) {
        var _this = _super.call(this, eRef, hostComponent, ['aMe', 'header', 'renderer', 'label', 'fitToParent', 'tab', 'config', 'platformConfig', 'extname', 'viewport', 'align', 'plugins', 'responsiveConfig', 'responsiveFormulas', 'addForm', 'allowSelection', 'ariaAttributes', 'ariaDescribedBy', 'ariaLabel', 'ariaLabelledBy', 'bind', 'border', 'cls', 'compact', 'compactOptions', 'controller', 'controlStoreRange', 'defaultListenerScope', 'disabled', 'displayOverlap', 'draggable', 'droppable', 'editForm', 'endTime', 'eventDefaults', 'undefined', 'focusCls', 'gestureNavigation', 'header', 'height', 'hidden', 'hideMode', 'instanceCls', 'keyMap', 'keyMapEnabled', 'keyMapTarget', 'listeners', 'margin', 'name', 'nameable', 'plugins', 'publishes', 'reference', 'renderTo', 'resizeEvents', 'ripple', 'session', 'shareableName', 'showNowMarker', 'startTime', 'store', 'style', 'timeFormat', 'timeRenderer', 'timezoneOffset', 'touchAction', 'twoWayBindable', 'ui', 'userCls', 'value', 'viewModel', 'visibleDays', 'width',], (new EWCCalendar_dayview()).events, ['ready', 'created', 'beforedisabledchange', 'beforeeventadd', 'beforeeventdragstart', 'beforeeventedit', 'beforeeventresizestart', 'beforeheightchange', 'beforehiddenchange', 'beforewidthchange', 'blur', 'disabledchange', 'eventadd', 'eventdrop', 'eventedit', 'eventresize', 'eventtap', 'focus', 'focusenter', 'focusleave', 'heightchange', 'hiddenchange', 'validateeventadd', 'validateeventdrop', 'validateeventedit', 'validateeventresize', 'valuechange', 'widthchange',], vc) || this;
        _this.xtype = 'calendar-dayview';
        return _this;
    }
    ExtCalendar_dayviewComponent_1 = ExtCalendar_dayviewComponent;
    ExtCalendar_dayviewComponent.prototype.ngOnInit = function () {
        this.baseOnInit();
    };
    ExtCalendar_dayviewComponent.prototype.ngAfterViewInit = function () {
        this.baseAfterViewInit();
    };
    ExtCalendar_dayviewComponent.prototype.ngOnChanges = function (changes) {
        this.baseOnChanges(changes);
    };
    ExtCalendar_dayviewComponent.prototype.ngOnDestroy = function () {
        this.baseOnDestroy();
    };
    var ExtCalendar_dayviewComponent_1;
    ExtCalendar_dayviewComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: EngBase, decorators: [{ type: Host }, { type: Optional }, { type: SkipSelf }] },
        { type: ViewContainerRef }
    ]; };
    ExtCalendar_dayviewComponent = ExtCalendar_dayviewComponent_1 = __decorate([
        Component({
            selector: 'ExtCalendar_dayview',
            inputs: ['aMe', 'header', 'renderer', 'label', 'fitToParent', 'tab', 'config', 'platformConfig', 'extname', 'viewport', 'align', 'plugins', 'responsiveConfig', 'responsiveFormulas', 'addForm', 'allowSelection', 'ariaAttributes', 'ariaDescribedBy', 'ariaLabel', 'ariaLabelledBy', 'bind', 'border', 'cls', 'compact', 'compactOptions', 'controller', 'controlStoreRange', 'defaultListenerScope', 'disabled', 'displayOverlap', 'draggable', 'droppable', 'editForm', 'endTime', 'eventDefaults', 'undefined', 'focusCls', 'gestureNavigation', 'header', 'height', 'hidden', 'hideMode', 'instanceCls', 'keyMap', 'keyMapEnabled', 'keyMapTarget', 'listeners', 'margin', 'name', 'nameable', 'plugins', 'publishes', 'reference', 'renderTo', 'resizeEvents', 'ripple', 'session', 'shareableName', 'showNowMarker', 'startTime', 'store', 'style', 'timeFormat', 'timeRenderer', 'timezoneOffset', 'touchAction', 'twoWayBindable', 'ui', 'userCls', 'value', 'viewModel', 'visibleDays', 'width',],
            outputs: ['ready', 'created', 'beforedisabledchange', 'beforeeventadd', 'beforeeventdragstart', 'beforeeventedit', 'beforeeventresizestart', 'beforeheightchange', 'beforehiddenchange', 'beforewidthchange', 'blur', 'disabledchange', 'eventadd', 'eventdrop', 'eventedit', 'eventresize', 'eventtap', 'focus', 'focusenter', 'focusleave', 'heightchange', 'hiddenchange', 'validateeventadd', 'validateeventdrop', 'validateeventedit', 'validateeventresize', 'valuechange', 'widthchange',],
            providers: [{ provide: EngBase, useExisting: forwardRef(function () { return ExtCalendar_dayviewComponent_1; }) }],
            template: '<ng-content></ng-content>'
        }),
        __param(1, Host()), __param(1, Optional()), __param(1, SkipSelf())
    ], ExtCalendar_dayviewComponent);
    return ExtCalendar_dayviewComponent;
}(EngBase));
export { ExtCalendar_dayviewComponent };
// function toPascalCase(s) {
//     return s.match(/[a-z]+/gi)
//         .map(function (word) {
//             return word.charAt(0).toUpperCase() + word.substr(1).toLowerCase()
//         })
//         .join('')
// }
// var pascalName = toPascalCase(tagName)
//var events = (new EWCCalendar_dayview()).eventnames;
//var eventnamesall = [];
//events.forEach( (event: any, n: any) => {
//    eventnamesall.push(event.name)
//})
//const distinct = (value, index, self) => {
//    //return true
//    return self.indexOf(value) === index;
//}
//var eventnames = eventnamesall.filter(distinct);
//# sourceMappingURL=data:application/json;base64,