/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
var containerMetaData = /** @class */ (function () {
    function containerMetaData() {
    }
    containerMetaData.XTYPE = 'container';
    containerMetaData.PROPERTIESOBJECT = {
        "actions": "Object",
        "activeChildTabIndex": "Number",
        "activeCounter": "Number",
        "activeItem": "String/Number",
        "alignOnScroll": "Boolean",
        "alignTarget": "String",
        "allowFocusingDisabledChildren": "Boolean",
        "alwaysOnTop": "Boolean/Number",
        "anchor": "String",
        "anchorSize": "Number/Object",
        "animateShadow": "Boolean",
        "ariaAttributes": "Object",
        "ariaDescribedBy": "String",
        "ariaLabel": "String",
        "ariaLabelledBy": "String",
        "autoDestroy": "Boolean",
        "autoEl": "String/Object",
        "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
        "autoScroll": "Boolean",
        "autoShow": "Boolean",
        "baseCls": "String",
        "bind": "Object/String",
        "border": "Number/String/Boolean",
        "bubbleEvents": "String[]",
        "childEls": "Object/String[]/Object[]",
        "cls": "String/String[]",
        "columnWidth": "Number",
        "componentCls": "String",
        "componentLayout": "String/Object",
        "constrain": "Boolean",
        "constraintInsets": "Object/String",
        "constrainTo": "Ext.util.Region/Ext.dom.Element",
        "contentEl": "String",
        "controller": "String/Object/Ext.app.ViewController",
        "data": "Object",
        "defaultAlign": "String",
        "defaultFocus": "String",
        "defaultListenerScope": "Boolean",
        "defaults": "Object/Function",
        "defaultType": "String",
        "detachOnRemove": "Boolean",
        "disabled": "Boolean",
        "disabledCls": "String",
        "dock": "'top'/'bottom'/'left'/'right'",
        "draggable": "Boolean/Object",
        "fixed": "Boolean",
        "flex": "Number",
        "floating": "Boolean",
        "focusableContainer": "Boolean",
        "focusCls": "String",
        "focusOnToFront": "Boolean",
        "formBind": "Boolean",
        "frame": "Boolean",
        "height": "Number|String",
        "hidden": "Boolean",
        "hideMode": "String",
        "html": "String/Object",
        "id": "String",
        "inactiveChildTabIndex": "Number",
        "itemId": "String",
        "items": "Object/Object[]",
        "keyMap": "Object",
        "keyMapEnabled": "Boolean",
        "keyMapTarget": "String",
        "layout": "Ext.enums.Layout/Object",
        "liquidLayout": "Boolean",
        "listeners": "Object",
        "liveDrag": "Boolean",
        "loader": "Ext.ComponentLoader/Object",
        "margin": "Number/String",
        "maskDefaults": "Object",
        "maskElement": "String",
        "maxHeight": "Number",
        "maxWidth": "Number",
        "minHeight": "Number",
        "minWidth": "Number",
        "modal": "Boolean",
        "modelValidation": "Boolean",
        "nameable": "Boolean",
        "nameHolder": "Boolean",
        "overCls": "String",
        "overflowX": "String",
        "overflowY": "String",
        "padding": "Number/String",
        "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
        "publishes": "String/String[]/Object",
        "reference": "String",
        "referenceHolder": "Boolean",
        "region": "'north'/'south'/'east'/'west'/'center'",
        "renderConfig": "Object",
        "renderData": "Object",
        "renderSelectors": "Object",
        "renderTo": "String/HTMLElement/Ext.dom.Element",
        "renderTpl": "Ext.XTemplate/String/String[]",
        "resetFocusPosition": "Boolean",
        "resizable": "Boolean/Object",
        "resizeHandles": "String",
        "saveDelay": "Number",
        "scrollable": "Boolean/String/Object",
        "session": "Boolean/Object/Ext.data.Session",
        "shadow": "String/Boolean",
        "shadowOffset": "Number",
        "shareableName": "Boolean",
        "shim": "Boolean",
        "shrinkWrap": "Boolean/Number",
        "stateEvents": "String[]",
        "stateful": "Boolean/Object",
        "stateId": "String",
        "style": "String/Object",
        "suspendLayout": "Boolean",
        "tabGuard": "Boolean",
        "tabIndex": "Number",
        "toFrontOnShow": "Boolean",
        "touchAction": "Object",
        "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
        "tplWriteMode": "String",
        "twoWayBindable": "String/String[]/Object",
        "ui": "String",
        "uiCls": "String[]",
        "userCls": "String/String[]",
        "viewModel": "String/Object/Ext.app.ViewModel",
        "weight": "Number",
        "width": "Number|String",
        "xtype": "Ext.enums.Widget",
        "platformConfig": "Object",
        "fitToParent": "Boolean",
        "config": "Object",
    };
    containerMetaData.PROPERTIES = [
        'actions',
        'activeChildTabIndex',
        'activeCounter',
        'activeItem',
        'alignOnScroll',
        'alignTarget',
        'allowFocusingDisabledChildren',
        'alwaysOnTop',
        'anchor',
        'anchorSize',
        'animateShadow',
        'ariaAttributes',
        'ariaDescribedBy',
        'ariaLabel',
        'ariaLabelledBy',
        'autoDestroy',
        'autoEl',
        'autoRender',
        'autoScroll',
        'autoShow',
        'baseCls',
        'bind',
        'border',
        'bubbleEvents',
        'childEls',
        'cls',
        'columnWidth',
        'componentCls',
        'componentLayout',
        'constrain',
        'constraintInsets',
        'constrainTo',
        'contentEl',
        'controller',
        'data',
        'defaultAlign',
        'defaultFocus',
        'defaultListenerScope',
        'defaults',
        'defaultType',
        'detachOnRemove',
        'disabled',
        'disabledCls',
        'dock',
        'draggable',
        'fixed',
        'flex',
        'floating',
        'focusableContainer',
        'focusCls',
        'focusOnToFront',
        'formBind',
        'frame',
        'height',
        'hidden',
        'hideMode',
        'html',
        'id',
        'inactiveChildTabIndex',
        'itemId',
        'items',
        'keyMap',
        'keyMapEnabled',
        'keyMapTarget',
        'layout',
        'liquidLayout',
        'listeners',
        'liveDrag',
        'loader',
        'margin',
        'maskDefaults',
        'maskElement',
        'maxHeight',
        'maxWidth',
        'minHeight',
        'minWidth',
        'modal',
        'modelValidation',
        'nameable',
        'nameHolder',
        'overCls',
        'overflowX',
        'overflowY',
        'padding',
        'plugins',
        'publishes',
        'reference',
        'referenceHolder',
        'region',
        'renderConfig',
        'renderData',
        'renderSelectors',
        'renderTo',
        'renderTpl',
        'resetFocusPosition',
        'resizable',
        'resizeHandles',
        'saveDelay',
        'scrollable',
        'session',
        'shadow',
        'shadowOffset',
        'shareableName',
        'shim',
        'shrinkWrap',
        'stateEvents',
        'stateful',
        'stateId',
        'style',
        'suspendLayout',
        'tabGuard',
        'tabIndex',
        'toFrontOnShow',
        'touchAction',
        'tpl',
        'tplWriteMode',
        'twoWayBindable',
        'ui',
        'uiCls',
        'userCls',
        'viewModel',
        'weight',
        'width',
        'xtype',
        'platformConfig',
        'fitToParent',
        'config'
    ];
    containerMetaData.EVENTS = [
        { name: 'activate', parameters: 'container' },
        { name: 'add', parameters: 'container,component,index' },
        { name: 'added', parameters: 'container,container,pos' },
        { name: 'afterlayout', parameters: 'container,layout' },
        { name: 'afterlayoutanimation', parameters: 'container' },
        { name: 'afterrender', parameters: 'container' },
        { name: 'beforeactivate', parameters: 'container' },
        { name: 'beforeadd', parameters: 'container,component,index' },
        { name: 'beforedeactivate', parameters: 'container' },
        { name: 'beforedestroy', parameters: 'container' },
        { name: 'beforehide', parameters: 'container' },
        { name: 'beforeremove', parameters: 'container,component' },
        { name: 'beforerender', parameters: 'container' },
        { name: 'beforeshow', parameters: 'container' },
        { name: 'beforestaterestore', parameters: 'container,state' },
        { name: 'beforestatesave', parameters: 'container,state' },
        { name: 'blur', parameters: 'container,event' },
        { name: 'boxready', parameters: 'container,width,height' },
        { name: 'childmove', parameters: 'container,component,prevIndex,newIndex' },
        { name: 'deactivate', parameters: 'container' },
        { name: 'destroy', parameters: 'container' },
        { name: 'disable', parameters: 'container' },
        { name: 'enable', parameters: 'container' },
        { name: 'focus', parameters: 'container,event' },
        { name: 'focusenter', parameters: 'container,event' },
        { name: 'focusleave', parameters: 'container,event' },
        { name: 'hide', parameters: 'container' },
        { name: 'move', parameters: 'container,x,y' },
        { name: 'remove', parameters: 'container,component' },
        { name: 'removed', parameters: 'container,ownerCt' },
        { name: 'render', parameters: 'container' },
        { name: 'resize', parameters: 'container,width,height,oldWidth,oldHeight' },
        { name: 'show', parameters: 'container' },
        { name: 'staterestore', parameters: 'container,state' },
        { name: 'statesave', parameters: 'container,state' },
        { name: 'ready', parameters: '' }
    ];
    containerMetaData.EVENTNAMES = [
        'activate',
        'add',
        'added',
        'afterlayout',
        'afterlayoutanimation',
        'afterrender',
        'beforeactivate',
        'beforeadd',
        'beforedeactivate',
        'beforedestroy',
        'beforehide',
        'beforeremove',
        'beforerender',
        'beforeshow',
        'beforestaterestore',
        'beforestatesave',
        'blur',
        'boxready',
        'childmove',
        'deactivate',
        'destroy',
        'disable',
        'enable',
        'focus',
        'focusenter',
        'focusleave',
        'hide',
        'move',
        'remove',
        'removed',
        'render',
        'resize',
        'show',
        'staterestore',
        'statesave',
        'ready'
    ];
    return containerMetaData;
}());
export { containerMetaData };
if (false) {
    /** @type {?} */
    containerMetaData.XTYPE;
    /** @type {?} */
    containerMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    containerMetaData.PROPERTIES;
    /** @type {?} */
    containerMetaData.EVENTS;
    /** @type {?} */
    containerMetaData.EVENTNAMES;
}
var ExtContainerComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ExtContainerComponent, _super);
    function ExtContainerComponent(eRef) {
        return _super.call(this, eRef, containerMetaData) || this;
    }
    /**
     * @return {?}
     */
    ExtContainerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { this.baseOnInit(containerMetaData); };
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ExtContainerComponent.prototype.ngAfterContentInit = 
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    function () {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    };
    ExtContainerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'container',
                    inputs: containerMetaData.PROPERTIES,
                    outputs: containerMetaData.EVENTNAMES,
                    providers: [{ provide: base, useExisting: forwardRef(function () { return ExtContainerComponent; }) }],
                    template: '<ng-template #dynamic></ng-template>'
                }] }
    ];
    /** @nocollapse */
    ExtContainerComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return ExtContainerComponent;
}(base));
export { ExtContainerComponent };
//# sourceMappingURL=data:application/json;base64,