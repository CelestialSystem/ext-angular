/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
var triggerMetaData = /** @class */ (function () {
    function triggerMetaData() {
    }
    triggerMetaData.XTYPE = 'trigger';
    triggerMetaData.PROPERTIESOBJECT = {
        "activeCounter": "Number",
        "activeError": "String",
        "activeErrorsTpl": "String/String[]/Ext.XTemplate",
        "afterBodyEl": "String/Array/Ext.XTemplate",
        "afterLabelTextTpl": "String/Array/Ext.XTemplate",
        "afterLabelTpl": "String/Array/Ext.XTemplate",
        "afterSubTpl": "String/Array/Ext.XTemplate",
        "alignOnScroll": "Boolean",
        "alignTarget": "String",
        "allowBlank": "Boolean",
        "allowOnlyWhitespace": "Boolean",
        "alwaysOnTop": "Boolean/Number",
        "anchor": "String",
        "animateShadow": "Boolean",
        "ariaAttributes": "Object",
        "ariaDescribedBy": "String",
        "ariaErrorText": "String",
        "ariaHelp": "String",
        "ariaLabel": "String",
        "ariaLabelledBy": "String",
        "autoEl": "String/Object",
        "autoFitErrors": "Boolean",
        "autoHideInputMask": "Boolean",
        "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
        "autoScroll": "Boolean",
        "autoShow": "Boolean",
        "baseBodyCls": "String",
        "baseCls": "String",
        "beforeBodyEl": "String/Array/Ext.XTemplate",
        "beforeLabelTextTpl": "String/Array/Ext.XTemplate",
        "beforeLabelTpl": "String/Array/Ext.XTemplate",
        "beforeSubTpl": "String/Array/Ext.XTemplate",
        "bind": "Object/String",
        "blankText": "String",
        "border": "Number/String/Boolean",
        "checkChangeBuffer": "Number",
        "checkChangeEvents": "String[]",
        "childEls": "Object/String[]/Object[]",
        "cls": "String/String[]",
        "columnWidth": "Number",
        "componentCls": "String",
        "componentLayout": "String/Object",
        "constrain": "Boolean",
        "constraintInsets": "Object/String",
        "constrainTo": "Ext.util.Region/Ext.dom.Element",
        "contentEl": "String",
        "controller": "String/Object/Ext.app.ViewController",
        "data": "Object",
        "defaultAlign": "String",
        "defaultListenerScope": "Boolean",
        "dirtyCls": "String",
        "disabled": "Boolean",
        "disabledCls": "String",
        "disableKeyFilter": "Boolean",
        "dock": "'top'/'bottom'/'left'/'right'",
        "draggable": "Boolean/Object",
        "editable": "Boolean",
        "emptyCls": "String",
        "emptyText": "String",
        "enableKeyEvents": "Boolean",
        "enforceMaxLength": "Boolean",
        "errorMsgCls": "String",
        "fieldBodyCls": "String",
        "fieldCls": "String",
        "fieldLabel": "String",
        "fieldStyle": "String",
        "fieldSubTpl": "Ext.XTemplate",
        "fixed": "Boolean",
        "flex": "Number",
        "floating": "Boolean",
        "focusCls": "String",
        "focusOnToFront": "Boolean",
        "formatText": "String",
        "formBind": "Boolean",
        "formItemCls": "String",
        "frame": "Boolean",
        "grow": "Boolean",
        "growMax": "Number",
        "growMin": "Number",
        "height": "Number|String",
        "hidden": "Boolean",
        "hideEmptyLabel": "Boolean",
        "hideLabel": "Boolean",
        "hideMode": "String",
        "hideTrigger": "Boolean",
        "html": "String/Object",
        "id": "String",
        "inputAttrTpl": "String/Array/Ext.XTemplate",
        "inputId": "String",
        "inputMask": "String/Ext.field.InputMask",
        "inputType": "String",
        "inputWrapCls": "String",
        "invalidCls": "String",
        "invalidText": "String",
        "isTextInput": "Boolean",
        "itemId": "String",
        "keyMap": "Object",
        "keyMapEnabled": "Boolean",
        "keyMapTarget": "String",
        "labelableRenderTpl": "String/String[]/Ext.XTemplate",
        "labelAlign": "String",
        "labelAttrTpl": "String/Array/Ext.XTemplate",
        "labelCls": "String",
        "labelClsExtra": "String",
        "labelPad": "Number",
        "labelSeparator": "String",
        "labelStyle": "String",
        "labelWidth": "Number",
        "liquidLayout": "Boolean",
        "listeners": "Object",
        "liveDrag": "Boolean",
        "loader": "Ext.ComponentLoader/Object",
        "margin": "Number/String",
        "maskDefaults": "Object",
        "maskElement": "String",
        "maskRe": "RegExp",
        "maxHeight": "Number",
        "maxLength": "Number",
        "maxLengthText": "String",
        "maxWidth": "Number",
        "minHeight": "Number",
        "minLength": "Number",
        "minLengthText": "String",
        "minWidth": "Number",
        "modal": "Boolean",
        "modelValidation": "Boolean",
        "msgTarget": "String",
        "name": "String",
        "nameable": "Boolean",
        "overCls": "String",
        "overflowX": "String",
        "overflowY": "String",
        "padding": "Number/String",
        "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
        "preventMark": "Boolean",
        "publishes": "String/String[]/Object",
        "readOnly": "Boolean",
        "readOnlyCls": "String",
        "reference": "String",
        "regex": "RegExp",
        "regexText": "String",
        "region": "'north'/'south'/'east'/'west'/'center'",
        "renderConfig": "Object",
        "renderData": "Object",
        "renderSelectors": "Object",
        "renderTo": "String/HTMLElement/Ext.dom.Element",
        "renderTpl": "Ext.XTemplate/String/String[]",
        "repeatTriggerClick": "Boolean",
        "requiredCls": "String",
        "resizable": "Boolean/Object",
        "resizeHandles": "String",
        "saveDelay": "Number",
        "scrollable": "Boolean/String/Object",
        "selectOnFocus": "Boolean",
        "session": "Boolean/Object/Ext.data.Session",
        "shadow": "String/Boolean",
        "shadowOffset": "Number",
        "shareableName": "Boolean",
        "shim": "Boolean",
        "shrinkWrap": "Boolean/Number",
        "size": "Number",
        "stateEvents": "String[]",
        "stateful": "Boolean/Object",
        "stateId": "String",
        "stripCharsRe": "RegExp",
        "style": "String/Object",
        "submitValue": "Boolean",
        "tabIndex": "Number",
        "toFrontOnShow": "Boolean",
        "touchAction": "Object",
        "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
        "tplWriteMode": "String",
        "triggerCls": "String",
        "triggers": "Object",
        "triggerWrapCls": "String",
        "twoWayBindable": "String/String[]/Object",
        "ui": "String",
        "uiCls": "String[]",
        "userCls": "String/String[]",
        "validateBlank": "Boolean",
        "validateOnBlur": "Boolean",
        "validateOnChange": "Boolean",
        "validateOnFocusLeave": "Boolean",
        "validation": "Boolean/String",
        "validationField": "Ext.data.Field",
        "validator": "Function",
        "value": "Object",
        "valuePublishEvent": "String[]/String",
        "viewModel": "String/Object/Ext.app.ViewModel",
        "vtype": "String",
        "vtypeText": "String",
        "weight": "Number",
        "width": "Number|String",
        "xtype": "Ext.enums.Widget",
        "platformConfig": "Object",
        "fitToParent": "Boolean",
        "config": "Object",
    };
    triggerMetaData.PROPERTIES = [
        'activeCounter',
        'activeError',
        'activeErrorsTpl',
        'afterBodyEl',
        'afterLabelTextTpl',
        'afterLabelTpl',
        'afterSubTpl',
        'alignOnScroll',
        'alignTarget',
        'allowBlank',
        'allowOnlyWhitespace',
        'alwaysOnTop',
        'anchor',
        'animateShadow',
        'ariaAttributes',
        'ariaDescribedBy',
        'ariaErrorText',
        'ariaHelp',
        'ariaLabel',
        'ariaLabelledBy',
        'autoEl',
        'autoFitErrors',
        'autoHideInputMask',
        'autoRender',
        'autoScroll',
        'autoShow',
        'baseBodyCls',
        'baseCls',
        'beforeBodyEl',
        'beforeLabelTextTpl',
        'beforeLabelTpl',
        'beforeSubTpl',
        'bind',
        'blankText',
        'border',
        'checkChangeBuffer',
        'checkChangeEvents',
        'childEls',
        'cls',
        'columnWidth',
        'componentCls',
        'componentLayout',
        'constrain',
        'constraintInsets',
        'constrainTo',
        'contentEl',
        'controller',
        'data',
        'defaultAlign',
        'defaultListenerScope',
        'dirtyCls',
        'disabled',
        'disabledCls',
        'disableKeyFilter',
        'dock',
        'draggable',
        'editable',
        'emptyCls',
        'emptyText',
        'enableKeyEvents',
        'enforceMaxLength',
        'errorMsgCls',
        'fieldBodyCls',
        'fieldCls',
        'fieldLabel',
        'fieldStyle',
        'fieldSubTpl',
        'fixed',
        'flex',
        'floating',
        'focusCls',
        'focusOnToFront',
        'formatText',
        'formBind',
        'formItemCls',
        'frame',
        'grow',
        'growMax',
        'growMin',
        'height',
        'hidden',
        'hideEmptyLabel',
        'hideLabel',
        'hideMode',
        'hideTrigger',
        'html',
        'id',
        'inputAttrTpl',
        'inputId',
        'inputMask',
        'inputType',
        'inputWrapCls',
        'invalidCls',
        'invalidText',
        'isTextInput',
        'itemId',
        'keyMap',
        'keyMapEnabled',
        'keyMapTarget',
        'labelableRenderTpl',
        'labelAlign',
        'labelAttrTpl',
        'labelCls',
        'labelClsExtra',
        'labelPad',
        'labelSeparator',
        'labelStyle',
        'labelWidth',
        'liquidLayout',
        'listeners',
        'liveDrag',
        'loader',
        'margin',
        'maskDefaults',
        'maskElement',
        'maskRe',
        'maxHeight',
        'maxLength',
        'maxLengthText',
        'maxWidth',
        'minHeight',
        'minLength',
        'minLengthText',
        'minWidth',
        'modal',
        'modelValidation',
        'msgTarget',
        'name',
        'nameable',
        'overCls',
        'overflowX',
        'overflowY',
        'padding',
        'plugins',
        'preventMark',
        'publishes',
        'readOnly',
        'readOnlyCls',
        'reference',
        'regex',
        'regexText',
        'region',
        'renderConfig',
        'renderData',
        'renderSelectors',
        'renderTo',
        'renderTpl',
        'repeatTriggerClick',
        'requiredCls',
        'resizable',
        'resizeHandles',
        'saveDelay',
        'scrollable',
        'selectOnFocus',
        'session',
        'shadow',
        'shadowOffset',
        'shareableName',
        'shim',
        'shrinkWrap',
        'size',
        'stateEvents',
        'stateful',
        'stateId',
        'stripCharsRe',
        'style',
        'submitValue',
        'tabIndex',
        'toFrontOnShow',
        'touchAction',
        'tpl',
        'tplWriteMode',
        'triggerCls',
        'triggers',
        'triggerWrapCls',
        'twoWayBindable',
        'ui',
        'uiCls',
        'userCls',
        'validateBlank',
        'validateOnBlur',
        'validateOnChange',
        'validateOnFocusLeave',
        'validation',
        'validationField',
        'validator',
        'value',
        'valuePublishEvent',
        'viewModel',
        'vtype',
        'vtypeText',
        'weight',
        'width',
        'xtype',
        'platformConfig',
        'fitToParent',
        'config'
    ];
    triggerMetaData.EVENTS = [
        { name: 'activate', parameters: 'triggerfield' },
        { name: 'added', parameters: 'triggerfield,container,pos' },
        { name: 'afterlayoutanimation', parameters: 'triggerfield' },
        { name: 'afterrender', parameters: 'triggerfield' },
        { name: 'autosize', parameters: 'triggerfield,width' },
        { name: 'beforeactivate', parameters: 'triggerfield' },
        { name: 'beforedeactivate', parameters: 'triggerfield' },
        { name: 'beforedestroy', parameters: 'triggerfield' },
        { name: 'beforehide', parameters: 'triggerfield' },
        { name: 'beforerender', parameters: 'triggerfield' },
        { name: 'beforeshow', parameters: 'triggerfield' },
        { name: 'beforestaterestore', parameters: 'triggerfield,state' },
        { name: 'beforestatesave', parameters: 'triggerfield,state' },
        { name: 'blur', parameters: 'triggerfield,event' },
        { name: 'boxready', parameters: 'triggerfield,width,height' },
        { name: 'change', parameters: 'triggerfield,newValue,oldValue' },
        { name: 'deactivate', parameters: 'triggerfield' },
        { name: 'destroy', parameters: 'triggerfield' },
        { name: 'dirtychange', parameters: 'triggerfield,isDirty' },
        { name: 'disable', parameters: 'triggerfield' },
        { name: 'enable', parameters: 'triggerfield' },
        { name: 'errorchange', parameters: 'triggerfield,error' },
        { name: 'focus', parameters: 'triggerfield,event' },
        { name: 'focusenter', parameters: 'triggerfield,event' },
        { name: 'focusleave', parameters: 'triggerfield,event' },
        { name: 'hide', parameters: 'triggerfield' },
        { name: 'keydown', parameters: 'triggerfield,e' },
        { name: 'keypress', parameters: 'triggerfield,e' },
        { name: 'keyup', parameters: 'triggerfield,e' },
        { name: 'move', parameters: 'triggerfield,x,y' },
        { name: 'paste', parameters: 'triggerfield,e' },
        { name: 'removed', parameters: 'triggerfield,ownerCt' },
        { name: 'render', parameters: 'triggerfield' },
        { name: 'resize', parameters: 'triggerfield,width,height,oldWidth,oldHeight' },
        { name: 'show', parameters: 'triggerfield' },
        { name: 'specialkey', parameters: 'triggerfield,e' },
        { name: 'staterestore', parameters: 'triggerfield,state' },
        { name: 'statesave', parameters: 'triggerfield,state' },
        { name: 'validitychange', parameters: 'triggerfield,isValid' },
        { name: 'writeablechange', parameters: 'triggerfield,Read' },
        { name: 'ready', parameters: '' }
    ];
    triggerMetaData.EVENTNAMES = [
        'activate',
        'added',
        'afterlayoutanimation',
        'afterrender',
        'autosize',
        'beforeactivate',
        'beforedeactivate',
        'beforedestroy',
        'beforehide',
        'beforerender',
        'beforeshow',
        'beforestaterestore',
        'beforestatesave',
        'blur',
        'boxready',
        'change',
        'deactivate',
        'destroy',
        'dirtychange',
        'disable',
        'enable',
        'errorchange',
        'focus',
        'focusenter',
        'focusleave',
        'hide',
        'keydown',
        'keypress',
        'keyup',
        'move',
        'paste',
        'removed',
        'render',
        'resize',
        'show',
        'specialkey',
        'staterestore',
        'statesave',
        'validitychange',
        'writeablechange',
        'ready'
    ];
    return triggerMetaData;
}());
export { triggerMetaData };
if (false) {
    /** @type {?} */
    triggerMetaData.XTYPE;
    /** @type {?} */
    triggerMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    triggerMetaData.PROPERTIES;
    /** @type {?} */
    triggerMetaData.EVENTS;
    /** @type {?} */
    triggerMetaData.EVENTNAMES;
}
var ExtTriggerComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ExtTriggerComponent, _super);
    function ExtTriggerComponent(eRef) {
        return _super.call(this, eRef, triggerMetaData) || this;
    }
    /**
     * @return {?}
     */
    ExtTriggerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { this.baseOnInit(triggerMetaData); };
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ExtTriggerComponent.prototype.ngAfterContentInit = 
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    function () {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    };
    ExtTriggerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'trigger',
                    inputs: triggerMetaData.PROPERTIES,
                    outputs: triggerMetaData.EVENTNAMES,
                    providers: [{ provide: base, useExisting: forwardRef(function () { return ExtTriggerComponent; }) }],
                    template: '<ng-template #dynamic></ng-template>'
                }] }
    ];
    /** @nocollapse */
    ExtTriggerComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return ExtTriggerComponent;
}(base));
export { ExtTriggerComponent };
//# sourceMappingURL=data:application/json;base64,