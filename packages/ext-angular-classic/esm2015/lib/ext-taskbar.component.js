/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
export class taskbarMetaData {
}
taskbarMetaData.XTYPE = 'taskbar';
taskbarMetaData.PROPERTIESOBJECT = {
    "actions": "Object",
    "activeChildTabIndex": "Number",
    "activeCounter": "Number",
    "activeItem": "String/Number",
    "alignOnScroll": "Boolean",
    "alignTarget": "String",
    "allowFocusingDisabledChildren": "Boolean",
    "alwaysOnTop": "Boolean/Number",
    "anchor": "String",
    "anchorSize": "Number/Object",
    "animateShadow": "Boolean",
    "ariaAttributes": "Object",
    "ariaDescribedBy": "String",
    "ariaLabel": "String",
    "ariaLabelledBy": "String",
    "autoDestroy": "Boolean",
    "autoEl": "String/Object",
    "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
    "autoScroll": "Boolean",
    "autoShow": "Boolean",
    "baseCls": "String",
    "bind": "Object/String",
    "border": "Number/String/Boolean",
    "bubbleEvents": "String[]",
    "childEls": "Object/String[]/Object[]",
    "cls": "String/String[]",
    "columnWidth": "Number",
    "componentCls": "String",
    "componentLayout": "String/Object",
    "constrain": "Boolean",
    "constraintInsets": "Object/String",
    "constrainTo": "Ext.util.Region/Ext.dom.Element",
    "contentEl": "String",
    "controller": "String/Object/Ext.app.ViewController",
    "data": "Object",
    "defaultAlign": "String",
    "defaultButtonUI": "String",
    "defaultFieldUI": "String",
    "defaultFocus": "String",
    "defaultFooterButtonUI": "String",
    "defaultFooterFieldUI": "String",
    "defaultListenerScope": "Boolean",
    "defaults": "Object/Function",
    "defaultType": "String",
    "detachOnRemove": "Boolean",
    "disabled": "Boolean",
    "disabledCls": "String",
    "dock": "'top'/'bottom'/'left'/'right'",
    "draggable": "Boolean/Object",
    "enableOverflow": "Boolean",
    "fixed": "Boolean",
    "flex": "Number",
    "floating": "Boolean",
    "focusableContainer": "Boolean",
    "focusCls": "String",
    "focusOnToFront": "Boolean",
    "formBind": "Boolean",
    "frame": "Boolean",
    "height": "Number|String",
    "hidden": "Boolean",
    "hideMode": "String",
    "html": "String/Object",
    "id": "String",
    "inactiveChildTabIndex": "Number",
    "itemId": "String",
    "items": "Object/Object[]",
    "keyMap": "Object",
    "keyMapEnabled": "Boolean",
    "keyMapTarget": "String",
    "layout": "Ext.enums.Layout/Object",
    "liquidLayout": "Boolean",
    "listeners": "Object",
    "liveDrag": "Boolean",
    "loader": "Ext.ComponentLoader/Object",
    "margin": "Number/String",
    "maskDefaults": "Object",
    "maskElement": "String",
    "maxHeight": "Number",
    "maxWidth": "Number",
    "minHeight": "Number",
    "minWidth": "Number",
    "modal": "Boolean",
    "modelValidation": "Boolean",
    "nameable": "Boolean",
    "nameHolder": "Boolean",
    "overCls": "String",
    "overflowHandler": "String",
    "overflowX": "String",
    "overflowY": "String",
    "padding": "Number/String",
    "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
    "publishes": "String/String[]/Object",
    "reference": "String",
    "referenceHolder": "Boolean",
    "region": "'north'/'south'/'east'/'west'/'center'",
    "renderConfig": "Object",
    "renderData": "Object",
    "renderSelectors": "Object",
    "renderTo": "String/HTMLElement/Ext.dom.Element",
    "renderTpl": "Ext.XTemplate/String/String[]",
    "resetFocusPosition": "Boolean",
    "resizable": "Boolean/Object",
    "resizeHandles": "String",
    "saveDelay": "Number",
    "scrollable": "Boolean/String/Object",
    "session": "Boolean/Object/Ext.data.Session",
    "shadow": "String/Boolean",
    "shadowOffset": "Number",
    "shareableName": "Boolean",
    "shim": "Boolean",
    "shrinkWrap": "Boolean/Number",
    "startBtnText": "String",
    "stateEvents": "String[]",
    "stateful": "Boolean/Object",
    "stateId": "String",
    "style": "String/Object",
    "suspendLayout": "Boolean",
    "tabGuard": "Boolean",
    "tabIndex": "Number",
    "toFrontOnShow": "Boolean",
    "touchAction": "Object",
    "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
    "tplWriteMode": "String",
    "trackMenus": "Boolean",
    "twoWayBindable": "String/String[]/Object",
    "ui": "String",
    "uiCls": "String[]",
    "userCls": "String/String[]",
    "vertical": "Boolean",
    "viewModel": "String/Object/Ext.app.ViewModel",
    "weight": "Number",
    "width": "Number|String",
    "xtype": "Ext.enums.Widget",
    "platformConfig": "Object",
    "responsiveConfig": "Object",
    "fitToParent": "Boolean",
    "config": "Object",
};
taskbarMetaData.PROPERTIES = [
    'actions',
    'activeChildTabIndex',
    'activeCounter',
    'activeItem',
    'alignOnScroll',
    'alignTarget',
    'allowFocusingDisabledChildren',
    'alwaysOnTop',
    'anchor',
    'anchorSize',
    'animateShadow',
    'ariaAttributes',
    'ariaDescribedBy',
    'ariaLabel',
    'ariaLabelledBy',
    'autoDestroy',
    'autoEl',
    'autoRender',
    'autoScroll',
    'autoShow',
    'baseCls',
    'bind',
    'border',
    'bubbleEvents',
    'childEls',
    'cls',
    'columnWidth',
    'componentCls',
    'componentLayout',
    'constrain',
    'constraintInsets',
    'constrainTo',
    'contentEl',
    'controller',
    'data',
    'defaultAlign',
    'defaultButtonUI',
    'defaultFieldUI',
    'defaultFocus',
    'defaultFooterButtonUI',
    'defaultFooterFieldUI',
    'defaultListenerScope',
    'defaults',
    'defaultType',
    'detachOnRemove',
    'disabled',
    'disabledCls',
    'dock',
    'draggable',
    'enableOverflow',
    'fixed',
    'flex',
    'floating',
    'focusableContainer',
    'focusCls',
    'focusOnToFront',
    'formBind',
    'frame',
    'height',
    'hidden',
    'hideMode',
    'html',
    'id',
    'inactiveChildTabIndex',
    'itemId',
    'items',
    'keyMap',
    'keyMapEnabled',
    'keyMapTarget',
    'layout',
    'liquidLayout',
    'listeners',
    'liveDrag',
    'loader',
    'margin',
    'maskDefaults',
    'maskElement',
    'maxHeight',
    'maxWidth',
    'minHeight',
    'minWidth',
    'modal',
    'modelValidation',
    'nameable',
    'nameHolder',
    'overCls',
    'overflowHandler',
    'overflowX',
    'overflowY',
    'padding',
    'plugins',
    'publishes',
    'reference',
    'referenceHolder',
    'region',
    'renderConfig',
    'renderData',
    'renderSelectors',
    'renderTo',
    'renderTpl',
    'resetFocusPosition',
    'resizable',
    'resizeHandles',
    'saveDelay',
    'scrollable',
    'session',
    'shadow',
    'shadowOffset',
    'shareableName',
    'shim',
    'shrinkWrap',
    'startBtnText',
    'stateEvents',
    'stateful',
    'stateId',
    'style',
    'suspendLayout',
    'tabGuard',
    'tabIndex',
    'toFrontOnShow',
    'touchAction',
    'tpl',
    'tplWriteMode',
    'trackMenus',
    'twoWayBindable',
    'ui',
    'uiCls',
    'userCls',
    'vertical',
    'viewModel',
    'weight',
    'width',
    'xtype',
    'platformConfig',
    'responsiveConfig',
    'fitToParent',
    'config'
];
taskbarMetaData.EVENTS = [
    { name: 'activate', parameters: 'taskbar' },
    { name: 'add', parameters: 'taskbar,component,index' },
    { name: 'added', parameters: 'taskbar,container,pos' },
    { name: 'afterlayout', parameters: 'taskbar,layout' },
    { name: 'afterlayoutanimation', parameters: 'taskbar' },
    { name: 'afterrender', parameters: 'taskbar' },
    { name: 'beforeactivate', parameters: 'taskbar' },
    { name: 'beforeadd', parameters: 'taskbar,component,index' },
    { name: 'beforedeactivate', parameters: 'taskbar' },
    { name: 'beforedestroy', parameters: 'taskbar' },
    { name: 'beforehide', parameters: 'taskbar' },
    { name: 'beforeremove', parameters: 'taskbar,component' },
    { name: 'beforerender', parameters: 'taskbar' },
    { name: 'beforeshow', parameters: 'taskbar' },
    { name: 'beforestaterestore', parameters: 'taskbar,state' },
    { name: 'beforestatesave', parameters: 'taskbar,state' },
    { name: 'blur', parameters: 'taskbar,event' },
    { name: 'boxready', parameters: 'taskbar,width,height' },
    { name: 'childmove', parameters: 'taskbar,component,prevIndex,newIndex' },
    { name: 'deactivate', parameters: 'taskbar' },
    { name: 'destroy', parameters: 'taskbar' },
    { name: 'disable', parameters: 'taskbar' },
    { name: 'enable', parameters: 'taskbar' },
    { name: 'focus', parameters: 'taskbar,event' },
    { name: 'focusenter', parameters: 'taskbar,event' },
    { name: 'focusleave', parameters: 'taskbar,event' },
    { name: 'hide', parameters: 'taskbar' },
    { name: 'move', parameters: 'taskbar,x,y' },
    { name: 'overflowchange', parameters: 'lastHiddenCount,hiddenCount,hiddenItems' },
    { name: 'remove', parameters: 'taskbar,component' },
    { name: 'removed', parameters: 'taskbar,ownerCt' },
    { name: 'render', parameters: 'taskbar' },
    { name: 'resize', parameters: 'taskbar,width,height,oldWidth,oldHeight' },
    { name: 'show', parameters: 'taskbar' },
    { name: 'staterestore', parameters: 'taskbar,state' },
    { name: 'statesave', parameters: 'taskbar,state' },
    { name: 'ready', parameters: '' }
];
taskbarMetaData.EVENTNAMES = [
    'activate',
    'add',
    'added',
    'afterlayout',
    'afterlayoutanimation',
    'afterrender',
    'beforeactivate',
    'beforeadd',
    'beforedeactivate',
    'beforedestroy',
    'beforehide',
    'beforeremove',
    'beforerender',
    'beforeshow',
    'beforestaterestore',
    'beforestatesave',
    'blur',
    'boxready',
    'childmove',
    'deactivate',
    'destroy',
    'disable',
    'enable',
    'focus',
    'focusenter',
    'focusleave',
    'hide',
    'move',
    'overflowchange',
    'remove',
    'removed',
    'render',
    'resize',
    'show',
    'staterestore',
    'statesave',
    'ready'
];
if (false) {
    /** @type {?} */
    taskbarMetaData.XTYPE;
    /** @type {?} */
    taskbarMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    taskbarMetaData.PROPERTIES;
    /** @type {?} */
    taskbarMetaData.EVENTS;
    /** @type {?} */
    taskbarMetaData.EVENTNAMES;
}
export class ExtTaskbarComponent extends base {
    /**
     * @param {?} eRef
     */
    constructor(eRef) { super(eRef, taskbarMetaData); }
    /**
     * @return {?}
     */
    ngOnInit() { this.baseOnInit(taskbarMetaData); }
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    }
}
ExtTaskbarComponent.decorators = [
    { type: Component, args: [{
                selector: 'taskbar',
                inputs: taskbarMetaData.PROPERTIES,
                outputs: taskbarMetaData.EVENTNAMES,
                providers: [{ provide: base, useExisting: forwardRef(() => ExtTaskbarComponent) }],
                template: '<ng-template #dynamic></ng-template>'
            }] }
];
/** @nocollapse */
ExtTaskbarComponent.ctorParameters = () => [
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,