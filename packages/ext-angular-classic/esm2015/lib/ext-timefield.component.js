/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
export class timefieldMetaData {
}
timefieldMetaData.XTYPE = 'timefield';
timefieldMetaData.PROPERTIESOBJECT = {
    "activeCounter": "Number",
    "activeError": "String",
    "activeErrorsTpl": "String/String[]/Ext.XTemplate",
    "afterBodyEl": "String/Array/Ext.XTemplate",
    "afterLabelTextTpl": "String/Array/Ext.XTemplate",
    "afterLabelTpl": "String/Array/Ext.XTemplate",
    "afterSubTpl": "String/Array/Ext.XTemplate",
    "alignOnScroll": "Boolean",
    "alignTarget": "String",
    "allowBlank": "Boolean",
    "allowOnlyWhitespace": "Boolean",
    "allQuery": "String",
    "altFormats": "String",
    "alwaysOnTop": "Boolean/Number",
    "anchor": "String",
    "animateShadow": "Boolean",
    "anyMatch": "Boolean",
    "ariaAttributes": "Object",
    "ariaDescribedBy": "String",
    "ariaErrorText": "String",
    "ariaHelp": "String",
    "ariaLabel": "String",
    "ariaLabelledBy": "String",
    "autoEl": "String/Object",
    "autoFitErrors": "Boolean",
    "autoHideInputMask": "Boolean",
    "autoLoadOnValue": "Boolean",
    "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
    "autoScroll": "Boolean",
    "autoSelect": "Boolean",
    "autoSelectLast": "Boolean",
    "autoShow": "Boolean",
    "baseBodyCls": "String",
    "baseCls": "String",
    "beforeBodyEl": "String/Array/Ext.XTemplate",
    "beforeLabelTextTpl": "String/Array/Ext.XTemplate",
    "beforeLabelTpl": "String/Array/Ext.XTemplate",
    "beforeSubTpl": "String/Array/Ext.XTemplate",
    "bind": "Object/String",
    "blankText": "String",
    "border": "Number/String/Boolean",
    "caseSensitive": "Boolean",
    "checkChangeBuffer": "Number",
    "checkChangeEvents": "String[]",
    "childEls": "Object/String[]/Object[]",
    "clearFilterOnBlur": "Boolean",
    "cls": "String/String[]",
    "collapseOnSelect": "Boolean",
    "columnWidth": "Number",
    "componentCls": "String",
    "componentLayout": "String/Object",
    "constrain": "Boolean",
    "constraintInsets": "Object/String",
    "constrainTo": "Ext.util.Region/Ext.dom.Element",
    "contentEl": "String",
    "controller": "String/Object/Ext.app.ViewController",
    "data": "Object",
    "defaultAlign": "String",
    "defaultListConfig": "Object",
    "defaultListenerScope": "Boolean",
    "delimiter": "String",
    "dirtyCls": "String",
    "disabled": "Boolean",
    "disabledCls": "String",
    "disableKeyFilter": "Boolean",
    "displayField": "String",
    "displayTpl": "String/String[]/Ext.XTemplate",
    "dock": "'top'/'bottom'/'left'/'right'",
    "draggable": "Boolean/Object",
    "editable": "Boolean",
    "emptyCls": "String",
    "emptyText": "String",
    "enableKeyEvents": "Boolean",
    "enableRegEx": "Boolean",
    "enforceMaxLength": "Boolean",
    "errorMsgCls": "String",
    "fieldBodyCls": "String",
    "fieldCls": "String",
    "fieldLabel": "String",
    "fieldStyle": "String",
    "fieldSubTpl": "Ext.XTemplate",
    "fixed": "Boolean",
    "flex": "Number",
    "floating": "Boolean",
    "focusCls": "String",
    "focusOnToFront": "Boolean",
    "forceSelection": "Boolean",
    "format": "String",
    "formatText": "String",
    "formBind": "Boolean",
    "formItemCls": "String",
    "frame": "Boolean",
    "grow": "Boolean",
    "growMax": "Number",
    "growMin": "Number",
    "growToLongestValue": "Boolean",
    "height": "Number|String",
    "hidden": "Boolean",
    "hiddenDataCls": "String",
    "hiddenName": "String",
    "hideEmptyLabel": "Boolean",
    "hideLabel": "Boolean",
    "hideMode": "String",
    "hideTrigger": "Boolean",
    "html": "String/Object",
    "id": "String",
    "increment": "Number",
    "inputAttrTpl": "String/Array/Ext.XTemplate",
    "inputId": "String",
    "inputMask": "String/Ext.field.InputMask",
    "inputType": "String",
    "inputWrapCls": "String",
    "invalidCls": "String",
    "invalidText": "String",
    "isTextInput": "Boolean",
    "itemId": "String",
    "keyMap": "Object",
    "keyMapEnabled": "Boolean",
    "keyMapTarget": "String",
    "labelableRenderTpl": "String/String[]/Ext.XTemplate",
    "labelAlign": "String",
    "labelAttrTpl": "String/Array/Ext.XTemplate",
    "labelCls": "String",
    "labelClsExtra": "String",
    "labelPad": "Number",
    "labelSeparator": "String",
    "labelStyle": "String",
    "labelWidth": "Number",
    "liquidLayout": "Boolean",
    "listConfig": "Object",
    "listeners": "Object",
    "liveDrag": "Boolean",
    "loader": "Ext.ComponentLoader/Object",
    "margin": "Number/String",
    "maskDefaults": "Object",
    "maskElement": "String",
    "maskRe": "RegExp",
    "matchFieldWidth": "Boolean",
    "maxHeight": "Number",
    "maxLength": "Number",
    "maxLengthText": "String",
    "maxText": "String",
    "maxValue": "Date/String",
    "maxWidth": "Number",
    "minChars": "Number",
    "minHeight": "Number",
    "minLength": "Number",
    "minLengthText": "String",
    "minText": "String",
    "minValue": "Date/String",
    "minWidth": "Number",
    "modal": "Boolean",
    "modelValidation": "Boolean",
    "msgTarget": "String",
    "multiSelect": "Boolean",
    "name": "String",
    "nameable": "Boolean",
    "openCls": "String",
    "overCls": "String",
    "overflowX": "String",
    "overflowY": "String",
    "padding": "Number/String",
    "pageSize": "Number",
    "pickerAlign": "String",
    "pickerMaxHeight": "Number",
    "pickerOffset": "Number[]",
    "pinList": "Boolean",
    "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
    "preventMark": "Boolean",
    "publishes": "String/String[]/Object",
    "queryCaching": "Boolean",
    "queryDelay": "Number",
    "queryMode": "String",
    "queryParam": "String",
    "readOnly": "Boolean",
    "readOnlyCls": "String",
    "reference": "String",
    "regex": "RegExp",
    "regexText": "String",
    "region": "'north'/'south'/'east'/'west'/'center'",
    "renderConfig": "Object",
    "renderData": "Object",
    "renderSelectors": "Object",
    "renderTo": "String/HTMLElement/Ext.dom.Element",
    "renderTpl": "Ext.XTemplate/String/String[]",
    "repeatTriggerClick": "Boolean",
    "requiredCls": "String",
    "resizable": "Boolean/Object",
    "resizeHandles": "String",
    "saveDelay": "Number",
    "scrollable": "Boolean/String/Object",
    "selection": "Ext.data.Model",
    "selectOnFocus": "Boolean",
    "selectOnTab": "Boolean",
    "session": "Boolean/Object/Ext.data.Session",
    "shadow": "String/Boolean",
    "shadowOffset": "Number",
    "shareableName": "Boolean",
    "shim": "Boolean",
    "shrinkWrap": "Boolean/Number",
    "size": "Number",
    "snapToIncrement": "Boolean",
    "stateEvents": "String[]",
    "stateful": "Boolean/Object",
    "stateId": "String",
    "store": "Ext.data.Store/String/Array/Object",
    "stripCharsRe": "RegExp",
    "style": "String/Object",
    "submitFormat": "String",
    "submitValue": "Boolean",
    "tabIndex": "Number",
    "toFrontOnShow": "Boolean",
    "touchAction": "Object",
    "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
    "tplWriteMode": "String",
    "transform": "String/HTMLElement/Ext.dom.Element",
    "transformInPlace": "Boolean",
    "triggerAction": "String",
    "triggerCls": "String",
    "triggers": "Object",
    "triggerWrapCls": "String",
    "twoWayBindable": "String/String[]/Object",
    "typeAhead": "Boolean",
    "typeAheadDelay": "Number",
    "ui": "String",
    "uiCls": "String[]",
    "userCls": "String/String[]",
    "validateBlank": "Boolean",
    "validateOnBlur": "Boolean",
    "validateOnChange": "Boolean",
    "validateOnFocusLeave": "Boolean",
    "validation": "Boolean/String",
    "validationField": "Ext.data.Field",
    "validator": "Function",
    "value": "Object",
    "valueField": "String",
    "valueNotFoundText": "String",
    "valuePublishEvent": "String[]/String",
    "viewModel": "String/Object/Ext.app.ViewModel",
    "vtype": "String",
    "vtypeText": "String",
    "weight": "Number",
    "width": "Number|String",
    "xtype": "Ext.enums.Widget",
    "platformConfig": "Object",
    "responsiveConfig": "Object",
    "fitToParent": "Boolean",
    "config": "Object",
};
timefieldMetaData.PROPERTIES = [
    'activeCounter',
    'activeError',
    'activeErrorsTpl',
    'afterBodyEl',
    'afterLabelTextTpl',
    'afterLabelTpl',
    'afterSubTpl',
    'alignOnScroll',
    'alignTarget',
    'allowBlank',
    'allowOnlyWhitespace',
    'allQuery',
    'altFormats',
    'alwaysOnTop',
    'anchor',
    'animateShadow',
    'anyMatch',
    'ariaAttributes',
    'ariaDescribedBy',
    'ariaErrorText',
    'ariaHelp',
    'ariaLabel',
    'ariaLabelledBy',
    'autoEl',
    'autoFitErrors',
    'autoHideInputMask',
    'autoLoadOnValue',
    'autoRender',
    'autoScroll',
    'autoSelect',
    'autoSelectLast',
    'autoShow',
    'baseBodyCls',
    'baseCls',
    'beforeBodyEl',
    'beforeLabelTextTpl',
    'beforeLabelTpl',
    'beforeSubTpl',
    'bind',
    'blankText',
    'border',
    'caseSensitive',
    'checkChangeBuffer',
    'checkChangeEvents',
    'childEls',
    'clearFilterOnBlur',
    'cls',
    'collapseOnSelect',
    'columnWidth',
    'componentCls',
    'componentLayout',
    'constrain',
    'constraintInsets',
    'constrainTo',
    'contentEl',
    'controller',
    'data',
    'defaultAlign',
    'defaultListConfig',
    'defaultListenerScope',
    'delimiter',
    'dirtyCls',
    'disabled',
    'disabledCls',
    'disableKeyFilter',
    'displayField',
    'displayTpl',
    'dock',
    'draggable',
    'editable',
    'emptyCls',
    'emptyText',
    'enableKeyEvents',
    'enableRegEx',
    'enforceMaxLength',
    'errorMsgCls',
    'fieldBodyCls',
    'fieldCls',
    'fieldLabel',
    'fieldStyle',
    'fieldSubTpl',
    'fixed',
    'flex',
    'floating',
    'focusCls',
    'focusOnToFront',
    'forceSelection',
    'format',
    'formatText',
    'formBind',
    'formItemCls',
    'frame',
    'grow',
    'growMax',
    'growMin',
    'growToLongestValue',
    'height',
    'hidden',
    'hiddenDataCls',
    'hiddenName',
    'hideEmptyLabel',
    'hideLabel',
    'hideMode',
    'hideTrigger',
    'html',
    'id',
    'increment',
    'inputAttrTpl',
    'inputId',
    'inputMask',
    'inputType',
    'inputWrapCls',
    'invalidCls',
    'invalidText',
    'isTextInput',
    'itemId',
    'keyMap',
    'keyMapEnabled',
    'keyMapTarget',
    'labelableRenderTpl',
    'labelAlign',
    'labelAttrTpl',
    'labelCls',
    'labelClsExtra',
    'labelPad',
    'labelSeparator',
    'labelStyle',
    'labelWidth',
    'liquidLayout',
    'listConfig',
    'listeners',
    'liveDrag',
    'loader',
    'margin',
    'maskDefaults',
    'maskElement',
    'maskRe',
    'matchFieldWidth',
    'maxHeight',
    'maxLength',
    'maxLengthText',
    'maxText',
    'maxValue',
    'maxWidth',
    'minChars',
    'minHeight',
    'minLength',
    'minLengthText',
    'minText',
    'minValue',
    'minWidth',
    'modal',
    'modelValidation',
    'msgTarget',
    'multiSelect',
    'name',
    'nameable',
    'openCls',
    'overCls',
    'overflowX',
    'overflowY',
    'padding',
    'pageSize',
    'pickerAlign',
    'pickerMaxHeight',
    'pickerOffset',
    'pinList',
    'plugins',
    'preventMark',
    'publishes',
    'queryCaching',
    'queryDelay',
    'queryMode',
    'queryParam',
    'readOnly',
    'readOnlyCls',
    'reference',
    'regex',
    'regexText',
    'region',
    'renderConfig',
    'renderData',
    'renderSelectors',
    'renderTo',
    'renderTpl',
    'repeatTriggerClick',
    'requiredCls',
    'resizable',
    'resizeHandles',
    'saveDelay',
    'scrollable',
    'selection',
    'selectOnFocus',
    'selectOnTab',
    'session',
    'shadow',
    'shadowOffset',
    'shareableName',
    'shim',
    'shrinkWrap',
    'size',
    'snapToIncrement',
    'stateEvents',
    'stateful',
    'stateId',
    'store',
    'stripCharsRe',
    'style',
    'submitFormat',
    'submitValue',
    'tabIndex',
    'toFrontOnShow',
    'touchAction',
    'tpl',
    'tplWriteMode',
    'transform',
    'transformInPlace',
    'triggerAction',
    'triggerCls',
    'triggers',
    'triggerWrapCls',
    'twoWayBindable',
    'typeAhead',
    'typeAheadDelay',
    'ui',
    'uiCls',
    'userCls',
    'validateBlank',
    'validateOnBlur',
    'validateOnChange',
    'validateOnFocusLeave',
    'validation',
    'validationField',
    'validator',
    'value',
    'valueField',
    'valueNotFoundText',
    'valuePublishEvent',
    'viewModel',
    'vtype',
    'vtypeText',
    'weight',
    'width',
    'xtype',
    'platformConfig',
    'responsiveConfig',
    'fitToParent',
    'config'
];
timefieldMetaData.EVENTS = [
    { name: 'activate', parameters: 'timefield' },
    { name: 'added', parameters: 'timefield,container,pos' },
    { name: 'afterlayoutanimation', parameters: 'timefield' },
    { name: 'afterrender', parameters: 'timefield' },
    { name: 'autosize', parameters: 'timefield,width' },
    { name: 'beforeactivate', parameters: 'timefield' },
    { name: 'beforedeactivate', parameters: 'timefield' },
    { name: 'beforedeselect', parameters: 'combo,record,index' },
    { name: 'beforedestroy', parameters: 'timefield' },
    { name: 'beforehide', parameters: 'timefield' },
    { name: 'beforequery', parameters: 'queryPlan' },
    { name: 'beforerender', parameters: 'timefield' },
    { name: 'beforeselect', parameters: 'combo,record,index' },
    { name: 'beforeshow', parameters: 'timefield' },
    { name: 'beforestaterestore', parameters: 'timefield,state' },
    { name: 'beforestatesave', parameters: 'timefield,state' },
    { name: 'blur', parameters: 'timefield,event' },
    { name: 'boxready', parameters: 'timefield,width,height' },
    { name: 'change', parameters: 'timefield,newValue,oldValue' },
    { name: 'collapse', parameters: 'field' },
    { name: 'deactivate', parameters: 'timefield' },
    { name: 'destroy', parameters: 'timefield' },
    { name: 'dirtychange', parameters: 'timefield,isDirty' },
    { name: 'disable', parameters: 'timefield' },
    { name: 'enable', parameters: 'timefield' },
    { name: 'errorchange', parameters: 'timefield,error' },
    { name: 'expand', parameters: 'field' },
    { name: 'focus', parameters: 'timefield,event' },
    { name: 'focusenter', parameters: 'timefield,event' },
    { name: 'focusleave', parameters: 'timefield,event' },
    { name: 'hide', parameters: 'timefield' },
    { name: 'keydown', parameters: 'timefield,e' },
    { name: 'keypress', parameters: 'timefield,e' },
    { name: 'keyup', parameters: 'timefield,e' },
    { name: 'move', parameters: 'timefield,x,y' },
    { name: 'paste', parameters: 'timefield,e' },
    { name: 'removed', parameters: 'timefield,ownerCt' },
    { name: 'render', parameters: 'timefield' },
    { name: 'resize', parameters: 'timefield,width,height,oldWidth,oldHeight' },
    { name: 'select', parameters: 'combo,record' },
    { name: 'show', parameters: 'timefield' },
    { name: 'specialkey', parameters: 'timefield,e' },
    { name: 'staterestore', parameters: 'timefield,state' },
    { name: 'statesave', parameters: 'timefield,state' },
    { name: 'validitychange', parameters: 'timefield,isValid' },
    { name: 'writeablechange', parameters: 'timefield,Read' },
    { name: 'ready', parameters: '' }
];
timefieldMetaData.EVENTNAMES = [
    'activate',
    'added',
    'afterlayoutanimation',
    'afterrender',
    'autosize',
    'beforeactivate',
    'beforedeactivate',
    'beforedeselect',
    'beforedestroy',
    'beforehide',
    'beforequery',
    'beforerender',
    'beforeselect',
    'beforeshow',
    'beforestaterestore',
    'beforestatesave',
    'blur',
    'boxready',
    'change',
    'collapse',
    'deactivate',
    'destroy',
    'dirtychange',
    'disable',
    'enable',
    'errorchange',
    'expand',
    'focus',
    'focusenter',
    'focusleave',
    'hide',
    'keydown',
    'keypress',
    'keyup',
    'move',
    'paste',
    'removed',
    'render',
    'resize',
    'select',
    'show',
    'specialkey',
    'staterestore',
    'statesave',
    'validitychange',
    'writeablechange',
    'ready'
];
if (false) {
    /** @type {?} */
    timefieldMetaData.XTYPE;
    /** @type {?} */
    timefieldMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    timefieldMetaData.PROPERTIES;
    /** @type {?} */
    timefieldMetaData.EVENTS;
    /** @type {?} */
    timefieldMetaData.EVENTNAMES;
}
export class ExtTimefieldComponent extends base {
    /**
     * @param {?} eRef
     */
    constructor(eRef) { super(eRef, timefieldMetaData); }
    /**
     * @return {?}
     */
    ngOnInit() { this.baseOnInit(timefieldMetaData); }
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    }
}
ExtTimefieldComponent.decorators = [
    { type: Component, args: [{
                selector: 'timefield',
                inputs: timefieldMetaData.PROPERTIES,
                outputs: timefieldMetaData.EVENTNAMES,
                providers: [{ provide: base, useExisting: forwardRef(() => ExtTimefieldComponent) }],
                template: '<ng-template #dynamic></ng-template>'
            }] }
];
/** @nocollapse */
ExtTimefieldComponent.ctorParameters = () => [
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,