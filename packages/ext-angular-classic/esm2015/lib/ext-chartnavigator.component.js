/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
export class chartnavigatorMetaData {
}
chartnavigatorMetaData.XTYPE = 'chartnavigator';
chartnavigatorMetaData.PROPERTIESOBJECT = {
    "actions": "Object",
    "activeChildTabIndex": "Number",
    "activeCounter": "Number",
    "activeItem": "String/Number",
    "alignOnScroll": "Boolean",
    "alignTarget": "String",
    "allowFocusingDisabledChildren": "Boolean",
    "alwaysOnTop": "Boolean/Number",
    "anchor": "String",
    "anchorSize": "Number/Object",
    "animateShadow": "Boolean",
    "animCollapse": "Boolean/Number",
    "ariaAttributes": "Object",
    "ariaDescribedBy": "String",
    "ariaLabel": "String",
    "ariaLabelledBy": "String",
    "autoDestroy": "Boolean",
    "autoEl": "String/Object",
    "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
    "autoScroll": "Boolean",
    "autoShow": "Boolean",
    "baseCls": "String",
    "bbar": "Object/Object[]",
    "bind": "Object/String",
    "bodyBorder": "Boolean",
    "bodyCls": "String/String[]",
    "bodyPadding": "Number/String",
    "bodyStyle": "String/Object/Function",
    "border": "Boolean",
    "bubbleEvents": "String[]",
    "buttonAlign": "String",
    "buttons": "Object[]",
    "chart": "Ext.chart.CartesianChart",
    "childEls": "Object/String[]/Object[]",
    "closable": "Boolean",
    "closeAction": "String",
    "closeToolText": "String",
    "cls": "String/String[]",
    "collapsed": "Boolean",
    "collapsedCls": "String",
    "collapseDirection": "String",
    "collapseFirst": "Boolean",
    "collapseMode": "String",
    "collapseToolText": "String",
    "collapsible": "Boolean",
    "columnWidth": "Number",
    "componentCls": "String",
    "componentLayout": "String/Object",
    "constrain": "Boolean",
    "constrainHeader": "Boolean",
    "constraintInsets": "Object/String",
    "constrainTo": "Ext.util.Region/Ext.dom.Element",
    "contentEl": "String",
    "controller": "String/Object/Ext.app.ViewController",
    "data": "Object",
    "defaultAlign": "String",
    "defaultButton": "String",
    "defaultButtonTarget": "String",
    "defaultDockWeights": "Object",
    "defaultFocus": "String",
    "defaultListenerScope": "Boolean",
    "defaults": "Object/Function",
    "defaultType": "String",
    "detachOnRemove": "Boolean",
    "disabled": "Boolean",
    "disabledCls": "String",
    "dock": "'top'/'bottom'/'left'/'right'",
    "dockedItems": "Object/Object[]",
    "draggable": "Boolean/Object",
    "expandToolText": "String",
    "fbar": "Object/Object[]",
    "fixed": "Boolean",
    "flex": "Number",
    "floatable": "Boolean",
    "floating": "Boolean",
    "focusableContainer": "Boolean",
    "focusCls": "String",
    "focusOnToFront": "Boolean",
    "formBind": "Boolean",
    "frame": "Boolean",
    "frameHeader": "Boolean",
    "glyph": "Number/String",
    "header": "Boolean/Object",
    "headerOverCls": "String",
    "headerPosition": "'top'/'bottom'/'left'/'right'",
    "height": "Number|String",
    "hidden": "Boolean",
    "hideCollapseTool": "Boolean",
    "hideMode": "String",
    "html": "String/Object",
    "icon": "String",
    "iconAlign": "'top'/'right'/'bottom'/'left'",
    "iconCls": "String",
    "id": "String",
    "inactiveChildTabIndex": "Number",
    "itemId": "String",
    "items": "Object/Object[]",
    "keyMap": "Object",
    "keyMapEnabled": "Boolean",
    "keyMapTarget": "String",
    "layout": "Ext.enums.Layout/Object",
    "lbar": "Object/Object[]",
    "liquidLayout": "Boolean",
    "listeners": "Object",
    "liveDrag": "Boolean",
    "loader": "Ext.ComponentLoader/Object",
    "maintainTitlePosition": "Boolean",
    "manageHeight": "Boolean",
    "margin": "Number/String",
    "maskDefaults": "Object",
    "maskElement": "String",
    "maxHeight": "Number",
    "maxWidth": "Number",
    "minButtonWidth": "Number",
    "minHeight": "Number",
    "minWidth": "Number",
    "modal": "Boolean",
    "modelValidation": "Boolean",
    "nameable": "Boolean",
    "nameHolder": "Boolean",
    "navigator": "Ext.chart.navigator.Navigator",
    "overCls": "String",
    "overflowX": "String",
    "overflowY": "String",
    "overlapHeader": "Boolean",
    "padding": "Number/String",
    "placeholder": "Ext.Component/Object",
    "placeholderCollapseHideMode": "Number",
    "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
    "preventHeader": "Boolean",
    "publishes": "String/String[]/Object",
    "rbar": "Object/Object[]",
    "reference": "String",
    "referenceHolder": "Boolean",
    "region": "'north'/'south'/'east'/'west'/'center'",
    "renderConfig": "Object",
    "renderData": "Object",
    "renderSelectors": "Object",
    "renderTo": "String/HTMLElement/Ext.dom.Element",
    "renderTpl": "Ext.XTemplate/String/String[]",
    "resetFocusPosition": "Boolean",
    "resizable": "Boolean/Object",
    "resizeHandles": "String",
    "saveDelay": "Number",
    "scrollable": "Boolean/String/Object",
    "session": "Boolean/Object/Ext.data.Session",
    "shadow": "String/Boolean",
    "shadowOffset": "Number",
    "shareableName": "Boolean",
    "shim": "Boolean",
    "shrinkWrap": "Boolean/Number",
    "shrinkWrapDock": "Boolean/Number",
    "simpleDrag": "Boolean",
    "stateEvents": "String[]",
    "stateful": "Boolean/Object",
    "stateId": "String",
    "style": "String/Object",
    "suspendLayout": "Boolean",
    "tabGuard": "Boolean",
    "tabIndex": "Number",
    "tbar": "Object/Object[]",
    "title": "String/Ext.panel.Title",
    "titleAlign": "'left'/'center'/'right'",
    "titleCollapse": "Boolean",
    "titlePosition": "Number",
    "titleRotation": "'default'/0/1/2",
    "toFrontOnShow": "Boolean",
    "tools": "Object[]/Ext.panel.Tool[]",
    "touchAction": "Object",
    "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
    "tplWriteMode": "String",
    "twoWayBindable": "String/String[]/Object",
    "ui": "String",
    "uiCls": "String[]",
    "userCls": "String/String[]",
    "viewModel": "String/Object/Ext.app.ViewModel",
    "weight": "Number",
    "width": "Number|String",
    "xtype": "Ext.enums.Widget",
    "platformConfig": "Object",
    "responsiveConfig": "Object",
    "fitToParent": "Boolean",
    "config": "Object",
};
chartnavigatorMetaData.PROPERTIES = [
    'actions',
    'activeChildTabIndex',
    'activeCounter',
    'activeItem',
    'alignOnScroll',
    'alignTarget',
    'allowFocusingDisabledChildren',
    'alwaysOnTop',
    'anchor',
    'anchorSize',
    'animateShadow',
    'animCollapse',
    'ariaAttributes',
    'ariaDescribedBy',
    'ariaLabel',
    'ariaLabelledBy',
    'autoDestroy',
    'autoEl',
    'autoRender',
    'autoScroll',
    'autoShow',
    'baseCls',
    'bbar',
    'bind',
    'bodyBorder',
    'bodyCls',
    'bodyPadding',
    'bodyStyle',
    'border',
    'bubbleEvents',
    'buttonAlign',
    'buttons',
    'chart',
    'childEls',
    'closable',
    'closeAction',
    'closeToolText',
    'cls',
    'collapsed',
    'collapsedCls',
    'collapseDirection',
    'collapseFirst',
    'collapseMode',
    'collapseToolText',
    'collapsible',
    'columnWidth',
    'componentCls',
    'componentLayout',
    'constrain',
    'constrainHeader',
    'constraintInsets',
    'constrainTo',
    'contentEl',
    'controller',
    'data',
    'defaultAlign',
    'defaultButton',
    'defaultButtonTarget',
    'defaultDockWeights',
    'defaultFocus',
    'defaultListenerScope',
    'defaults',
    'defaultType',
    'detachOnRemove',
    'disabled',
    'disabledCls',
    'dock',
    'dockedItems',
    'draggable',
    'expandToolText',
    'fbar',
    'fixed',
    'flex',
    'floatable',
    'floating',
    'focusableContainer',
    'focusCls',
    'focusOnToFront',
    'formBind',
    'frame',
    'frameHeader',
    'glyph',
    'header',
    'headerOverCls',
    'headerPosition',
    'height',
    'hidden',
    'hideCollapseTool',
    'hideMode',
    'html',
    'icon',
    'iconAlign',
    'iconCls',
    'id',
    'inactiveChildTabIndex',
    'itemId',
    'items',
    'keyMap',
    'keyMapEnabled',
    'keyMapTarget',
    'layout',
    'lbar',
    'liquidLayout',
    'listeners',
    'liveDrag',
    'loader',
    'maintainTitlePosition',
    'manageHeight',
    'margin',
    'maskDefaults',
    'maskElement',
    'maxHeight',
    'maxWidth',
    'minButtonWidth',
    'minHeight',
    'minWidth',
    'modal',
    'modelValidation',
    'nameable',
    'nameHolder',
    'navigator',
    'overCls',
    'overflowX',
    'overflowY',
    'overlapHeader',
    'padding',
    'placeholder',
    'placeholderCollapseHideMode',
    'plugins',
    'preventHeader',
    'publishes',
    'rbar',
    'reference',
    'referenceHolder',
    'region',
    'renderConfig',
    'renderData',
    'renderSelectors',
    'renderTo',
    'renderTpl',
    'resetFocusPosition',
    'resizable',
    'resizeHandles',
    'saveDelay',
    'scrollable',
    'session',
    'shadow',
    'shadowOffset',
    'shareableName',
    'shim',
    'shrinkWrap',
    'shrinkWrapDock',
    'simpleDrag',
    'stateEvents',
    'stateful',
    'stateId',
    'style',
    'suspendLayout',
    'tabGuard',
    'tabIndex',
    'tbar',
    'title',
    'titleAlign',
    'titleCollapse',
    'titlePosition',
    'titleRotation',
    'toFrontOnShow',
    'tools',
    'touchAction',
    'tpl',
    'tplWriteMode',
    'twoWayBindable',
    'ui',
    'uiCls',
    'userCls',
    'viewModel',
    'weight',
    'width',
    'xtype',
    'platformConfig',
    'responsiveConfig',
    'fitToParent',
    'config'
];
chartnavigatorMetaData.EVENTS = [
    { name: 'activate', parameters: 'chartnavigator' },
    { name: 'add', parameters: 'chartnavigator,component,index' },
    { name: 'added', parameters: 'chartnavigator,container,pos' },
    { name: 'afterlayout', parameters: 'chartnavigator,layout' },
    { name: 'afterlayoutanimation', parameters: 'chartnavigator' },
    { name: 'afterrender', parameters: 'chartnavigator' },
    { name: 'beforeactivate', parameters: 'chartnavigator' },
    { name: 'beforeadd', parameters: 'chartnavigator,component,index' },
    { name: 'beforeclose', parameters: 'panel' },
    { name: 'beforecollapse', parameters: 'p,direction,animate' },
    { name: 'beforedeactivate', parameters: 'chartnavigator' },
    { name: 'beforedestroy', parameters: 'chartnavigator' },
    { name: 'beforeexpand', parameters: 'p,animate' },
    { name: 'beforehide', parameters: 'chartnavigator' },
    { name: 'beforeremove', parameters: 'chartnavigator,component' },
    { name: 'beforerender', parameters: 'chartnavigator' },
    { name: 'beforeshow', parameters: 'chartnavigator' },
    { name: 'beforestaterestore', parameters: 'chartnavigator,state' },
    { name: 'beforestatesave', parameters: 'chartnavigator,state' },
    { name: 'blur', parameters: 'chartnavigator,event' },
    { name: 'boxready', parameters: 'chartnavigator,width,height' },
    { name: 'childmove', parameters: 'chartnavigator,component,prevIndex,newIndex' },
    { name: 'close', parameters: 'panel' },
    { name: 'collapse', parameters: 'p' },
    { name: 'deactivate', parameters: 'chartnavigator' },
    { name: 'destroy', parameters: 'chartnavigator' },
    { name: 'disable', parameters: 'chartnavigator' },
    { name: 'dockedadd', parameters: 'chartnavigator,component,index' },
    { name: 'dockedremove', parameters: 'chartnavigator,component' },
    { name: 'enable', parameters: 'chartnavigator' },
    { name: 'expand', parameters: 'p' },
    { name: 'float', parameters: '' },
    { name: 'focus', parameters: 'chartnavigator,event' },
    { name: 'focusenter', parameters: 'chartnavigator,event' },
    { name: 'focusleave', parameters: 'chartnavigator,event' },
    { name: 'glyphchange', parameters: 'chartnavigator,newGlyph,oldGlyph' },
    { name: 'hide', parameters: 'chartnavigator' },
    { name: 'iconalignchange', parameters: 'chartnavigator,newIconAlign,oldIconAlign' },
    { name: 'iconchange', parameters: 'chartnavigator,newIcon,oldIcon' },
    { name: 'iconclschange', parameters: 'chartnavigator,newIconCls,oldIconCls' },
    { name: 'move', parameters: 'chartnavigator,x,y' },
    { name: 'remove', parameters: 'chartnavigator,component' },
    { name: 'removed', parameters: 'chartnavigator,ownerCt' },
    { name: 'render', parameters: 'chartnavigator' },
    { name: 'resize', parameters: 'chartnavigator,width,height,oldWidth,oldHeight' },
    { name: 'show', parameters: 'chartnavigator' },
    { name: 'staterestore', parameters: 'chartnavigator,state' },
    { name: 'statesave', parameters: 'chartnavigator,state' },
    { name: 'titlealignchange', parameters: 'chartnavigator,newTitleAlign,oldTitleAlign' },
    { name: 'titlechange', parameters: 'chartnavigator,newTitle,oldTitle' },
    { name: 'titlepositionchange', parameters: 'chartnavigator,newTitlePosition,oldTitlePosition' },
    { name: 'titlerotationchange', parameters: 'chartnavigator,newTitleRotation,oldTitleRotation' },
    { name: 'unfloat', parameters: '' },
    { name: 'ready', parameters: '' }
];
chartnavigatorMetaData.EVENTNAMES = [
    'activate',
    'add',
    'added',
    'afterlayout',
    'afterlayoutanimation',
    'afterrender',
    'beforeactivate',
    'beforeadd',
    'beforeclose',
    'beforecollapse',
    'beforedeactivate',
    'beforedestroy',
    'beforeexpand',
    'beforehide',
    'beforeremove',
    'beforerender',
    'beforeshow',
    'beforestaterestore',
    'beforestatesave',
    'blur',
    'boxready',
    'childmove',
    'close',
    'collapse',
    'deactivate',
    'destroy',
    'disable',
    'dockedadd',
    'dockedremove',
    'enable',
    'expand',
    'float',
    'focus',
    'focusenter',
    'focusleave',
    'glyphchange',
    'hide',
    'iconalignchange',
    'iconchange',
    'iconclschange',
    'move',
    'remove',
    'removed',
    'render',
    'resize',
    'show',
    'staterestore',
    'statesave',
    'titlealignchange',
    'titlechange',
    'titlepositionchange',
    'titlerotationchange',
    'unfloat',
    'ready'
];
if (false) {
    /** @type {?} */
    chartnavigatorMetaData.XTYPE;
    /** @type {?} */
    chartnavigatorMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    chartnavigatorMetaData.PROPERTIES;
    /** @type {?} */
    chartnavigatorMetaData.EVENTS;
    /** @type {?} */
    chartnavigatorMetaData.EVENTNAMES;
}
export class ExtChartnavigatorComponent extends base {
    /**
     * @param {?} eRef
     */
    constructor(eRef) { super(eRef, chartnavigatorMetaData); }
    /**
     * @return {?}
     */
    ngOnInit() { this.baseOnInit(chartnavigatorMetaData); }
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    }
}
ExtChartnavigatorComponent.decorators = [
    { type: Component, args: [{
                selector: 'chartnavigator',
                inputs: chartnavigatorMetaData.PROPERTIES,
                outputs: chartnavigatorMetaData.EVENTNAMES,
                providers: [{ provide: base, useExisting: forwardRef(() => ExtChartnavigatorComponent) }],
                template: '<ng-template #dynamic></ng-template>'
            }] }
];
/** @nocollapse */
ExtChartnavigatorComponent.ctorParameters = () => [
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,