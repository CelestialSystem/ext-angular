/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Host, Optional, SkipSelf, Component, ElementRef, forwardRef } from '@angular/core';
//import { RouterOutlet, ChildrenOutletContexts } from "@angular/router";
import { base } from './base';
export class comboboxfieldMetaData {
}
comboboxfieldMetaData.XTYPE = 'comboboxfield';
comboboxfieldMetaData.PROPERTIESOBJECT = {
    "alignTarget": "String",
    "allQuery": "String",
    "alwaysOnTop": "Boolean/Number",
    "animateUnderline": "Boolean",
    "anyMatch": "Boolean",
    "ariaAttributes": "Object",
    "ariaDescribedBy": "String",
    "ariaLabel": "String",
    "ariaLabelledBy": "String",
    "autoCapitalize": "Boolean",
    "autoComplete": "Boolean",
    "autoCorrect": "Boolean",
    "autoFitErrors": "Boolean",
    "autoFocus": "Boolean",
    "autoFocusLast": "Boolean",
    "autoHideInputMask": "Boolean",
    "autoLoadOnValue": "Boolean",
    "autoSelect": "Boolean",
    "axisLock": "Boolean",
    "badFormatMessage": "String",
    "bind": "Object/String",
    "bodyAlign": "any",
    "border": "Boolean",
    "bottom": "Number/String",
    "caseSensitive": "Boolean",
    "centered": "Boolean",
    "chipView": "any",
    "clearable": "Boolean",
    "cls": "String/String[]",
    "collapseOnSelect": "Boolean",
    "constrainAlign": "String/Ext.util.Region/Ext.dom.Element",
    "contentEl": "Ext.dom.Element/HTMLElement/String",
    "controller": "String/Object/Ext.app.ViewController",
    "data": "Object",
    "defaultListenerScope": "Boolean",
    "delimiter": "String",
    "disabled": "Boolean",
    "displayed": "Boolean",
    "displayField": "String/Number",
    "displayTpl": "String/String[]/Ext.XTemplate",
    "docked": "String",
    "draggable": "Boolean/Object/Ext.drag.Source",
    "edgePicker": "Object",
    "editable": "Boolean",
    "enableRegEx": "Boolean",
    "enterAnimation": "String/Mixed",
    "error": "String/String[]",
    "errorMessage": "String",
    "errorTarget": "String",
    "errorTip": "Object",
    "errorTpl": "String/String[]/Ext.XTemplate",
    "eventHandlers": "Object",
    "exitAnimation": "String/Mixed",
    "flex": "Number/String/Object",
    "floated": "Boolean",
    "floatedPicker": "Object",
    "floatedPickerAlign": "String",
    "focusCls": "String",
    "focusTrap": "any",
    "forceSelection": "Boolean",
    "fullscreen": "Boolean",
    "height": "Number/String",
    "hidden": "Boolean",
    "hiddenName": "String",
    "hideAnimation": "String/Mixed",
    "hideMode": "'clip'/'display'/'offsets'/'opacity'/'visibility'",
    "hideOnMaskTap": "Boolean",
    "hideTrigger": "Boolean",
    "html": "String/Ext.dom.Element/HTMLElement",
    "id": "String",
    "inline": "Boolean",
    "inputCls": "String",
    "inputMask": "String/Ext.field.InputMask",
    "inputType": "String",
    "inputValue": "any",
    "instanceCls": "String/String[]",
    "itemCls": "String",
    "itemId": "String",
    "itemTpl": "String/Ext.XTemplate",
    "keyMap": "Object",
    "keyMapEnabled": "Boolean",
    "keyMapTarget": "String",
    "label": "String",
    "labelAlign": "'top'/'left'/'bottom'/'right'",
    "labelCls": "String",
    "labelInPlaceholder": "any",
    "labelMinWidth": "Number/String",
    "labelTextAlign": "'top'/'right'/'bottom'/'left'",
    "labelWidth": "Number/String",
    "labelWrap": "Boolean",
    "left": "Number/String",
    "listeners": "Object",
    "margin": "Number/String",
    "matchFieldWidth": "Boolean",
    "maxHeight": "Number/String",
    "maxLength": "Number",
    "maxWidth": "Number/String",
    "minChars": "Number",
    "minHeight": "Number/String",
    "minWidth": "Number/String",
    "modal": "Boolean",
    "modelValidation": "Boolean",
    "multiSelect": "Boolean",
    "name": "String",
    "nameable": "Boolean",
    "options": "Array",
    "padding": "Number/String",
    "parseValidator": "Ext.data.validator.Validator",
    "pattern": "String",
    "picker": "String/Object",
    "pickerSlotAlign": "String",
    "placeholder": "String",
    "placeHolder": "String",
    "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
    "primaryFilter": "Function/String/Object/Ext.util.Filter",
    "publishes": "String/String[]/Object",
    "queryCaching": "Boolean",
    "queryDelay": "Number",
    "queryMode": "String",
    "queryParam": "String",
    "readOnly": "Boolean",
    "record": "Ext.data.Model",
    "recordCreator": "Function/String",
    "recordCreatorScope": "Object",
    "reference": "String",
    "relative": "Boolean",
    "renderTo": "Ext.dom.Element",
    "required": "Boolean",
    "requiredMessage": "String",
    "right": "Number/String",
    "ripple": "Boolean/Object/String",
    "scrollable": "Boolean/String/Object",
    "selection": "Ext.data.Model",
    "selectOnTab": "Boolean",
    "selfAlign": "String",
    "session": "Boolean/Object/Ext.data.Session",
    "shadow": "Boolean",
    "shareableName": "Boolean",
    "shim": "Boolean",
    "showAnimation": "String/Mixed",
    "sideError": "String",
    "stateful": "Boolean/Object/String[]",
    "statefulDefaults": "Object/String[]",
    "stateId": "String",
    "store": "Ext.data.Store/Object/String",
    "style": "String/Object",
    "tabIndex": "Number",
    "textAlign": "'left'/'center'/'right'",
    "tipError": "String",
    "titleError": "String",
    "toFrontOnShow": "Boolean",
    "tooltip": "String/Object",
    "top": "Number/String",
    "touchAction": "Object",
    "tpl": "String/String[]/Ext.Template/Ext.XTemplate[]",
    "tplWriteMode": "String",
    "translatable": "Object",
    "triggerAction": "String",
    "triggers": "Object",
    "twoWayBindable": "String/String[]/Object",
    "typeAhead": "Boolean",
    "typeAheadDelay": "Number",
    "ui": "String/String[]",
    "underError": "String",
    "userCls": "String/String[]",
    "userSelectable": "Boolean/String/Object",
    "validateDisabled": "Boolean",
    "validationMessage": "String",
    "validators": "Mixed",
    "value": "Mixed",
    "valueCollection": "Object/Ext.util.Collection",
    "valueField": "String/Number",
    "valueNotFoundText": "String",
    "viewModel": "String/Object/Ext.app.ViewModel",
    "weight": "Number",
    "width": "Number/String",
    "x": "Number",
    "xtype": "String",
    "y": "Number",
    "zIndex": "Number",
    "platformConfig": "Object",
    "responsiveConfig": "Object",
    "fitToParent": "Boolean",
    "config": "Object",
};
comboboxfieldMetaData.PROPERTIES = [
    'alignTarget',
    'allQuery',
    'alwaysOnTop',
    'animateUnderline',
    'anyMatch',
    'ariaAttributes',
    'ariaDescribedBy',
    'ariaLabel',
    'ariaLabelledBy',
    'autoCapitalize',
    'autoComplete',
    'autoCorrect',
    'autoFitErrors',
    'autoFocus',
    'autoFocusLast',
    'autoHideInputMask',
    'autoLoadOnValue',
    'autoSelect',
    'axisLock',
    'badFormatMessage',
    'bind',
    'bodyAlign',
    'border',
    'bottom',
    'caseSensitive',
    'centered',
    'chipView',
    'clearable',
    'cls',
    'collapseOnSelect',
    'constrainAlign',
    'contentEl',
    'controller',
    'data',
    'defaultListenerScope',
    'delimiter',
    'disabled',
    'displayed',
    'displayField',
    'displayTpl',
    'docked',
    'draggable',
    'edgePicker',
    'editable',
    'enableRegEx',
    'enterAnimation',
    'error',
    'errorMessage',
    'errorTarget',
    'errorTip',
    'errorTpl',
    'eventHandlers',
    'exitAnimation',
    'flex',
    'floated',
    'floatedPicker',
    'floatedPickerAlign',
    'focusCls',
    'focusTrap',
    'forceSelection',
    'fullscreen',
    'height',
    'hidden',
    'hiddenName',
    'hideAnimation',
    'hideMode',
    'hideOnMaskTap',
    'hideTrigger',
    'html',
    'id',
    'inline',
    'inputCls',
    'inputMask',
    'inputType',
    'inputValue',
    'instanceCls',
    'itemCls',
    'itemId',
    'itemTpl',
    'keyMap',
    'keyMapEnabled',
    'keyMapTarget',
    'label',
    'labelAlign',
    'labelCls',
    'labelInPlaceholder',
    'labelMinWidth',
    'labelTextAlign',
    'labelWidth',
    'labelWrap',
    'left',
    'listeners',
    'margin',
    'matchFieldWidth',
    'maxHeight',
    'maxLength',
    'maxWidth',
    'minChars',
    'minHeight',
    'minWidth',
    'modal',
    'modelValidation',
    'multiSelect',
    'name',
    'nameable',
    'options',
    'padding',
    'parseValidator',
    'pattern',
    'picker',
    'pickerSlotAlign',
    'placeholder',
    'placeHolder',
    'plugins',
    'primaryFilter',
    'publishes',
    'queryCaching',
    'queryDelay',
    'queryMode',
    'queryParam',
    'readOnly',
    'record',
    'recordCreator',
    'recordCreatorScope',
    'reference',
    'relative',
    'renderTo',
    'required',
    'requiredMessage',
    'right',
    'ripple',
    'scrollable',
    'selection',
    'selectOnTab',
    'selfAlign',
    'session',
    'shadow',
    'shareableName',
    'shim',
    'showAnimation',
    'sideError',
    'stateful',
    'statefulDefaults',
    'stateId',
    'store',
    'style',
    'tabIndex',
    'textAlign',
    'tipError',
    'titleError',
    'toFrontOnShow',
    'tooltip',
    'top',
    'touchAction',
    'tpl',
    'tplWriteMode',
    'translatable',
    'triggerAction',
    'triggers',
    'twoWayBindable',
    'typeAhead',
    'typeAheadDelay',
    'ui',
    'underError',
    'userCls',
    'userSelectable',
    'validateDisabled',
    'validationMessage',
    'validators',
    'value',
    'valueCollection',
    'valueField',
    'valueNotFoundText',
    'viewModel',
    'weight',
    'width',
    'x',
    'xtype',
    'y',
    'zIndex',
    'platformConfig',
    'responsiveConfig',
    'fitToParent',
    'config'
];
comboboxfieldMetaData.EVENTS = [
    { name: 'action', parameters: 'combobox,e' },
    { name: 'added', parameters: 'sender,container,index' },
    { name: 'beforebottomchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforecenteredchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforedisabledchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforedockedchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforeheightchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforehiddenchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforehide', parameters: 'sender' },
    { name: 'beforeleftchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforemaxHeightchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforemaxWidthchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforeminHeightchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforeminWidthchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforeorientationchange', parameters: '' },
    { name: 'beforepickercreate', parameters: 'combobox,newValue' },
    { name: 'beforequery', parameters: 'queryPlan' },
    { name: 'beforerightchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforescrollablechange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforeshow', parameters: 'sender' },
    { name: 'beforetofront', parameters: 'combobox' },
    { name: 'beforetopchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'beforewidthchange', parameters: 'sender,value,oldValue,undefined' },
    { name: 'blur', parameters: 'combobox,e' },
    { name: 'bottomchange', parameters: 'sender,value,oldValue' },
    { name: 'centeredchange', parameters: 'sender,value,oldValue' },
    { name: 'change', parameters: 'combobox,newValue,oldValue' },
    { name: 'clearicontap', parameters: 'combobox,input,e' },
    { name: 'click', parameters: 'e' },
    { name: 'collapse', parameters: 'field' },
    { name: 'destroy', parameters: '' },
    { name: 'disabledchange', parameters: 'sender,value,oldValue' },
    { name: 'dockedchange', parameters: 'sender,value,oldValue' },
    { name: 'erased', parameters: 'sender' },
    { name: 'errorchange', parameters: 'combobox,error' },
    { name: 'expand', parameters: 'field' },
    { name: 'floatingchange', parameters: 'sender,positioned' },
    { name: 'focus', parameters: 'combobox,e' },
    { name: 'focusenter', parameters: 'combobox,event' },
    { name: 'focusleave', parameters: 'combobox,event' },
    { name: 'fullscreen', parameters: 'sender' },
    { name: 'heightchange', parameters: 'sender,value,oldValue' },
    { name: 'hiddenchange', parameters: 'sender,value,oldValue' },
    { name: 'hide', parameters: 'sender' },
    { name: 'initialize', parameters: 'sender' },
    { name: 'keyup', parameters: 'combobox,e' },
    { name: 'leftchange', parameters: 'sender,value,oldValue' },
    { name: 'maxHeightchange', parameters: 'sender,value,oldValue' },
    { name: 'maxWidthchange', parameters: 'sender,value,oldValue' },
    { name: 'minHeightchange', parameters: 'sender,value,oldValue' },
    { name: 'minWidthchange', parameters: 'sender,value,oldValue' },
    { name: 'mousedown', parameters: 'combobox,e' },
    { name: 'moved', parameters: 'sender,container,toIndex,fromIndex' },
    { name: 'orientationchange', parameters: '' },
    { name: 'painted', parameters: 'sender,element' },
    { name: 'paste', parameters: 'combobox,e' },
    { name: 'pickercreate', parameters: 'combobox,picker' },
    { name: 'positionedchange', parameters: 'sender,positioned' },
    { name: 'removed', parameters: 'sender,container,index' },
    { name: 'resize', parameters: 'element,info' },
    { name: 'rightchange', parameters: 'sender,value,oldValue' },
    { name: 'scrollablechange', parameters: 'sender,value,oldValue' },
    { name: 'select', parameters: 'combobox,newValue' },
    { name: 'show', parameters: 'sender' },
    { name: 'tofront', parameters: 'combobox' },
    { name: 'topchange', parameters: 'sender,value,oldValue' },
    { name: 'updatedata', parameters: 'sender,newData' },
    { name: 'widthchange', parameters: 'sender,value,oldValue' },
    { name: 'ready', parameters: '' }
];
comboboxfieldMetaData.EVENTNAMES = [
    'action',
    'added',
    'beforebottomchange',
    'beforecenteredchange',
    'beforedisabledchange',
    'beforedockedchange',
    'beforeheightchange',
    'beforehiddenchange',
    'beforehide',
    'beforeleftchange',
    'beforemaxHeightchange',
    'beforemaxWidthchange',
    'beforeminHeightchange',
    'beforeminWidthchange',
    'beforeorientationchange',
    'beforepickercreate',
    'beforequery',
    'beforerightchange',
    'beforescrollablechange',
    'beforeshow',
    'beforetofront',
    'beforetopchange',
    'beforewidthchange',
    'blur',
    'bottomchange',
    'centeredchange',
    'change',
    'clearicontap',
    'click',
    'collapse',
    'destroy',
    'disabledchange',
    'dockedchange',
    'erased',
    'errorchange',
    'expand',
    'floatingchange',
    'focus',
    'focusenter',
    'focusleave',
    'fullscreen',
    'heightchange',
    'hiddenchange',
    'hide',
    'initialize',
    'keyup',
    'leftchange',
    'maxHeightchange',
    'maxWidthchange',
    'minHeightchange',
    'minWidthchange',
    'mousedown',
    'moved',
    'orientationchange',
    'painted',
    'paste',
    'pickercreate',
    'positionedchange',
    'removed',
    'resize',
    'rightchange',
    'scrollablechange',
    'select',
    'show',
    'tofront',
    'topchange',
    'updatedata',
    'widthchange',
    'ready'
];
if (false) {
    /** @type {?} */
    comboboxfieldMetaData.XTYPE;
    /** @type {?} */
    comboboxfieldMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    comboboxfieldMetaData.PROPERTIES;
    /** @type {?} */
    comboboxfieldMetaData.EVENTS;
    /** @type {?} */
    comboboxfieldMetaData.EVENTNAMES;
}
export class ExtComboboxfieldComponent extends base {
    /**
     * @param {?} eRef
     * @param {?} hostComponent
     */
    constructor(eRef, hostComponent) {
        super(eRef.nativeElement, comboboxfieldMetaData, hostComponent);
        this.hostComponent = hostComponent;
    }
    //constructor(private elementRef: ElementRef,@Host() @Optional() @SkipSelf() public hostComponent : base) {super(hostComponent,comboboxfieldMetaData,hostComponent)}
    /**
     * @return {?}
     */
    ngOnInit() { this.baseOnInit(comboboxfieldMetaData); }
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    }
}
ExtComboboxfieldComponent.decorators = [
    { type: Component, args: [{
                selector: 'comboboxfield',
                inputs: comboboxfieldMetaData.PROPERTIES,
                outputs: comboboxfieldMetaData.EVENTNAMES,
                providers: [{ provide: base, useExisting: forwardRef(() => ExtComboboxfieldComponent) }],
                template: '<ng-template></ng-template>'
            }] }
];
/** @nocollapse */
ExtComboboxfieldComponent.ctorParameters = () => [
    { type: ElementRef },
    { type: base, decorators: [{ type: Host }, { type: Optional }, { type: SkipSelf }] }
];
if (false) {
    /** @type {?} */
    ExtComboboxfieldComponent.prototype.hostComponent;
}
//# sourceMappingURL=data:application/json;base64,