import { ElementRef, ViewContainerRef } from '@angular/core';
import { EngBase } from './common/angularbase';
import * as ɵngcc0 from '@angular/core';
export declare class ExtExpandtriggerComponent extends EngBase {
    constructor(eRef: ElementRef, hostComponent: EngBase, vc: ViewContainerRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ExtExpandtriggerComponent, [null, { optional: true; host: true; skipSelf: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ExtExpandtriggerComponent, "ExtExpandtrigger", never, { "aMe": "aMe"; "header": "header"; "renderer": "renderer"; "label": "label"; "fitToParent": "fitToParent"; "tab": "tab"; "config": "config"; "platformConfig": "platformConfig"; "extname": "extname"; "viewport": "viewport"; "align": "align"; "plugins": "plugins"; "responsiveConfig": "responsiveConfig"; "responsiveFormulas": "responsiveFormulas"; "alignSelf": "alignSelf"; "alwaysOnTop": "alwaysOnTop"; "ariaAttributes": "ariaAttributes"; "ariaDescribedBy": "ariaDescribedBy"; "ariaLabel": "ariaLabel"; "ariaLabelledBy": "ariaLabelledBy"; "bind": "bind"; "border": "border"; "cls": "cls"; "constrainAlign": "constrainAlign"; "controller": "controller"; "defaultListenerScope": "defaultListenerScope"; "disabled": "disabled"; "undefined": "undefined"; "field": "field"; "flex": "flex"; "floated": "floated"; "focusCls": "focusCls"; "focusOnTap": "focusOnTap"; "group": "group"; "handler": "handler"; "height": "height"; "hidden": "hidden"; "hideMode": "hideMode"; "iconCls": "iconCls"; "id": "id"; "instanceCls": "instanceCls"; "itemId": "itemId"; "keyMap": "keyMap"; "keyMapEnabled": "keyMapEnabled"; "keyMapTarget": "keyMapTarget"; "listeners": "listeners"; "margin": "margin"; "name": "name"; "nameable": "nameable"; "publishes": "publishes"; "reference": "reference"; "relative": "relative"; "renderTo": "renderTo"; "repeat": "repeat"; "ripple": "ripple"; "scope": "scope"; "session": "session"; "shadow": "shadow"; "shareableName": "shareableName"; "shim": "shim"; "side": "side"; "style": "style"; "toFrontOnShow": "toFrontOnShow"; "touchAction": "touchAction"; "translatable": "translatable"; "triggers": "triggers"; "twoWayBindable": "twoWayBindable"; "ui": "ui"; "userCls": "userCls"; "viewModel": "viewModel"; "width": "width"; "x": "x"; "y": "y"; }, { "ready": "ready"; "created": "created"; "beforedisabledchange": "beforedisabledchange"; "beforeheightchange": "beforeheightchange"; "beforehiddenchange": "beforehiddenchange"; "beforetofront": "beforetofront"; "beforewidthchange": "beforewidthchange"; "blur": "blur"; "disabledchange": "disabledchange"; "focus": "focus"; "focusenter": "focusenter"; "focusleave": "focusleave"; "heightchange": "heightchange"; "hiddenchange": "hiddenchange"; "tofront": "tofront"; "widthchange": "widthchange"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXh0RXhwYW5kdHJpZ2dlci5kLnRzIiwic291cmNlcyI6WyJFeHRFeHBhbmR0cmlnZ2VyLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUVBOzs7Ozs7OztBQU1BIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRW5nQmFzZSB9IGZyb20gJy4vY29tbW9uL2FuZ3VsYXJiYXNlJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEV4dEV4cGFuZHRyaWdnZXJDb21wb25lbnQgZXh0ZW5kcyBFbmdCYXNlIHtcbiAgICBjb25zdHJ1Y3RvcihlUmVmOiBFbGVtZW50UmVmLCBob3N0Q29tcG9uZW50OiBFbmdCYXNlLCB2YzogVmlld0NvbnRhaW5lclJlZik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBhbnkpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=