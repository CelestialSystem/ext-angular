import { ElementRef, ViewContainerRef } from '@angular/core';
import { EngBase } from './common/angularbase';
import * as ɵngcc0 from '@angular/core';
export declare class ExtRadioComponent extends EngBase {
    constructor(eRef: ElementRef, hostComponent: EngBase, vc: ViewContainerRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnChanges(changes: any): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ExtRadioComponent, [null, { optional: true; host: true; skipSelf: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ExtRadioComponent, "ExtRadio", never, { "aMe": "aMe"; "header": "header"; "renderer": "renderer"; "label": "label"; "fitToParent": "fitToParent"; "tab": "tab"; "config": "config"; "platformConfig": "platformConfig"; "extname": "extname"; "viewport": "viewport"; "align": "align"; "plugins": "plugins"; "responsiveConfig": "responsiveConfig"; "responsiveFormulas": "responsiveFormulas"; "alignSelf": "alignSelf"; "alwaysOnTop": "alwaysOnTop"; "ariaAttributes": "ariaAttributes"; "ariaDescribedBy": "ariaDescribedBy"; "ariaLabel": "ariaLabel"; "ariaLabelledBy": "ariaLabelledBy"; "autoFitErrors": "autoFitErrors"; "axisLock": "axisLock"; "bind": "bind"; "bodyAlign": "bodyAlign"; "border": "border"; "bottom": "bottom"; "boxLabel": "boxLabel"; "boxLabelAlign": "boxLabelAlign"; "bubbleDirty": "bubbleDirty"; "centered": "centered"; "checked": "checked"; "cls": "cls"; "constrainAlign": "constrainAlign"; "contentEl": "contentEl"; "controller": "controller"; "data": "data"; "dataType": "dataType"; "defaultListenerScope": "defaultListenerScope"; "dirty": "dirty"; "disabled": "disabled"; "displayed": "displayed"; "docked": "docked"; "draggable": "draggable"; "undefined": "undefined"; "error": "error"; "errorMessage": "errorMessage"; "errorTarget": "errorTarget"; "errorTip": "errorTip"; "errorTpl": "errorTpl"; "flex": "flex"; "floated": "floated"; "focusCls": "focusCls"; "fullscreen": "fullscreen"; "height": "height"; "hidden": "hidden"; "hideAnimation": "hideAnimation"; "hideMode": "hideMode"; "hideOnMaskTap": "hideOnMaskTap"; "html": "html"; "id": "id"; "inline": "inline"; "inputType": "inputType"; "inputValue": "inputValue"; "instanceCls": "instanceCls"; "itemId": "itemId"; "keyMap": "keyMap"; "keyMapEnabled": "keyMapEnabled"; "keyMapTarget": "keyMapTarget"; "labelAlign": "labelAlign"; "labelCls": "labelCls"; "labelMaskTap": "labelMaskTap"; "labelMinWidth": "labelMinWidth"; "labelTextAlign": "labelTextAlign"; "labelWidth": "labelWidth"; "labelWrap": "labelWrap"; "left": "left"; "listeners": "listeners"; "margin": "margin"; "maxHeight": "maxHeight"; "maxWidth": "maxWidth"; "minHeight": "minHeight"; "minWidth": "minWidth"; "modal": "modal"; "modelValidation": "modelValidation"; "name": "name"; "nameable": "nameable"; "padding": "padding"; "publishes": "publishes"; "readOnly": "readOnly"; "record": "record"; "reference": "reference"; "relative": "relative"; "renderTo": "renderTo"; "required": "required"; "requiredMessage": "requiredMessage"; "right": "right"; "ripple": "ripple"; "scrollable": "scrollable"; "session": "session"; "shadow": "shadow"; "shareableName": "shareableName"; "shim": "shim"; "showAnimation": "showAnimation"; "sideError": "sideError"; "stateful": "stateful"; "statefulDefaults": "statefulDefaults"; "stateId": "stateId"; "style": "style"; "tabIndex": "tabIndex"; "tipError": "tipError"; "titleError": "titleError"; "toFrontOnShow": "toFrontOnShow"; "tooltip": "tooltip"; "top": "top"; "touchAction": "touchAction"; "tpl": "tpl"; "tplWriteMode": "tplWriteMode"; "translatable": "translatable"; "twoWayBindable": "twoWayBindable"; "ui": "ui"; "underError": "underError"; "userCls": "userCls"; "userSelectable": "userSelectable"; "validateDisabled": "validateDisabled"; "validationMessage": "validationMessage"; "validators": "validators"; "value": "value"; "viewModel": "viewModel"; "weight": "weight"; "width": "width"; "x": "x"; "xtype": "xtype"; "y": "y"; "zIndex": "zIndex"; }, { "ready": "ready"; "created": "created"; "added": "added"; "beforebottomchange": "beforebottomchange"; "beforecenteredchange": "beforecenteredchange"; "beforedisabledchange": "beforedisabledchange"; "beforedockedchange": "beforedockedchange"; "beforeheightchange": "beforeheightchange"; "beforehiddenchange": "beforehiddenchange"; "beforehide": "beforehide"; "beforeleftchange": "beforeleftchange"; "beforemaxHeightchange": "beforemaxHeightchange"; "beforemaxWidthchange": "beforemaxWidthchange"; "beforeminHeightchange": "beforeminHeightchange"; "beforeminWidthchange": "beforeminWidthchange"; "beforeorientationchange": "beforeorientationchange"; "beforerightchange": "beforerightchange"; "beforescrollablechange": "beforescrollablechange"; "beforeshow": "beforeshow"; "beforetofront": "beforetofront"; "beforetopchange": "beforetopchange"; "beforewidthchange": "beforewidthchange"; "blur": "blur"; "bottomchange": "bottomchange"; "centeredchange": "centeredchange"; "change": "change"; "check": "check"; "click": "click"; "destroy": "destroy"; "dirtychange": "dirtychange"; "disabledchange": "disabledchange"; "dockedchange": "dockedchange"; "erased": "erased"; "errorchange": "errorchange"; "floatingchange": "floatingchange"; "focus": "focus"; "focusenter": "focusenter"; "focusleave": "focusleave"; "fullscreen": "fullscreen"; "heightchange": "heightchange"; "hiddenchange": "hiddenchange"; "hide": "hide"; "initialize": "initialize"; "keyup": "keyup"; "leftchange": "leftchange"; "maxHeightchange": "maxHeightchange"; "maxWidthchange": "maxWidthchange"; "minHeightchange": "minHeightchange"; "minWidthchange": "minWidthchange"; "mousedown": "mousedown"; "moved": "moved"; "orientationchange": "orientationchange"; "painted": "painted"; "paste": "paste"; "positionedchange": "positionedchange"; "removed": "removed"; "resize": "resize"; "rightchange": "rightchange"; "scrollablechange": "scrollablechange"; "show": "show"; "tofront": "tofront"; "topchange": "topchange"; "uncheck": "uncheck"; "updatedata": "updatedata"; "widthchange": "widthchange"; }, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXh0UmFkaW8uZC50cyIsInNvdXJjZXMiOlsiRXh0UmFkaW8uZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FBRUE7Ozs7Ozs7O0FBTUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbGVtZW50UmVmLCBWaWV3Q29udGFpbmVyUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBFbmdCYXNlIH0gZnJvbSAnLi9jb21tb24vYW5ndWxhcmJhc2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgRXh0UmFkaW9Db21wb25lbnQgZXh0ZW5kcyBFbmdCYXNlIHtcbiAgICBjb25zdHJ1Y3RvcihlUmVmOiBFbGVtZW50UmVmLCBob3N0Q29tcG9uZW50OiBFbmdCYXNlLCB2YzogVmlld0NvbnRhaW5lclJlZik7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBhbnkpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=