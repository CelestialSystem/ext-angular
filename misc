git remote add upstream https://github.com/sencha/ext-angular.git

cat ~/.npmrc
rm -f ~/.npmrc
*****
either of the next logs me in
npm login --registry=https://sencha.myget.org/F/early-adopter/npm/ --scope=@sencha
npm login --registry=https://test.npm.sencha.com/ --scope=@sencha
npm login --registry=https://npm.sencha.com/ --scope=@sencha
npm login --registry=https://sencha.myget.org/F/community/npm/ --scope=@sencha
npm login --registry=https://sencha.myget.org/F/commercial-test/npm/ --scope=@sencha
echo "@sencha:registry=https://sencha.myget.org/F/community/npm/" >> ~/.npmrc
echo "//sencha.myget.org/F/community/npm/:_authToken=d2b8cca6-d601-438d-a2b9-6c7988f3afe6" >> ~/.npmrc
*****
npm --registry https://test.npm.sencha.com/ whoami
npm --registry https://sencha.myget.org/F/community/npm/ whoami

git fetch upstream
git merge upstream/ext-angular-6.7.x
git merge upstream/ext-6.7.x

        // compilation.hooks.additionalAssets.tapAsync(`ext-additionalAssets`, (cb) => {
        //   console.log('additionalAssets1')
        //   cb()
        // })



https://github.com/maciejtreder/angular-universal-pwa



  //"dest": "../../../ext-angular",


ng new angular-cli-with-library2 --style scss --minimal --skip-tests --inline-style --inline-template 

ng generate library ext-angular

ng build ext-angular

https://dev.to/meltedspark/customizing-angular-cli-6-buildan-alternative-to-ng-eject-1oc4
ng new ext-angular-builder --style scss --minimal --skip-tests --inline-style --inline-template 
npm i -D @angular-builders/custom-webpack

      "architect": {
        "build": {
          //"builder": "@angular-devkit/build-angular:browser",
          "builder": "@angular-builders/custom-webpack:browser",
          "options": {
            "customWebpackConfig": {
              "path": "./ext-angular-webpack.config.js"
            },





          //"builder": "@angular-devkit/build-angular:dev-server",
          "builder": "@angular-builders/dev-server:generic",




          in tsconfig.json

     "paths": {
      "@angular/*": ["./node_modules/@angular/*"]
    }


//<nav class="sidebar" [ngClass]="{sidebarPushRight: isActive}">
//</nav>


https://www.edc4it.com/blog/web/webpack-tutorial.html

    "@types/jquery": "^3.3.29",

    "add": "^2.0.6",
    "jquery": "^3.3.1",

    "tslint": "^5.12.0",
    "tslint-loader": "^3.5.4",

  "angularCompilerOptions": {
    "annotateForClosureCompiler": true,
    "skipTemplateCodegen": false,
    "strictMetadataEmit": true,
    "fullTemplateTypeCheck": false,
    "strictInjectionParameters": true,
    "enableResourceInlining": true
  }





import {
  Component,
  Injectable,
  Injector,
  ComponentFactoryResolver,
  EmbeddedViewRef,
  ApplicationRef
  } 
from '@angular/core'
@Injectable({
  providedIn: 'root'
})
@Component({
  selector: 'app-root',
  template: ``,
})
export class ExtAngularBootstrapService {
  bootstrapComponent: any
  constructor(
      private componentFactoryResolver: ComponentFactoryResolver,
      private appRef: ApplicationRef,
      private injector: Injector
  ) {}
   appendComponentToViewport() {
     //console.log("In appendComponentToViewport")
    if(!this.bootstrapComponent) {
        throw new Error("Bootstrap component not set. Please use extAngularService.setBootStrapComponent(yourComponent) to setup bootstrap component from your root module constructor")
    }
    //console.log("bootstrapComponent : " + this.bootstrapComponent)
    const componentRef = this.componentFactoryResolver
      .resolveComponentFactory(this.bootstrapComponent)
      .create(this.injector)
    this.appRef.attachView(componentRef.hostView)
    const domElem = (componentRef.hostView as EmbeddedViewRef<any>)
      .rootNodes[0] as HTMLElement
    var root = document.getElementsByClassName('x-viewport-body-el')[0]
    root.appendChild(domElem)
  }
  setBootStrapComponent(component:any) {
    //console.log("In setBootStrapComponent")
    this.bootstrapComponent = component
  }
}

//import { Component } from '@angular/core'
//import { ExtAngularBootstrapService } from './ext-angular-bootstrap.service'

@Component({
  selector: 'app-root',
  template: ``,
})
export class ExtAngularBootstrapComponent {
  constructor(private extAngularService: ExtAngularBootstrapService) {
    //console.log("In App constructor")
    this.extAngularService.appendComponentToViewport()
  }
}


//export class ExtAngularBootstrapComponent;
//export class ExtAngularBootstrapService;
  declare var Ext: any
import { platformBrowserDynamic } from "@angular/platform-browser-dynamic"
export function launch(AppModule) {

  Ext.application({
    name: "$ExtAngularApp",
    quickTips: true,
    launch: () => {
      platformBrowserDynamic().bootstrapModule(AppModule)
        .catch((err) => {
          console.log(err)
        })
    }
  })
}
