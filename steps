steps

***************************

npm install -g @angular/cli
ng new ext-angular-boilerplate --style scss --minimal --skip-tests --inline-style --inline-template 
cd ext-angular-boilerplate

in angular.json

change

      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",

to

      "architect": {
        "build": {
          "builder": "@angular-builders/custom-webpack:browser",
          "options": {
            "customWebpackConfig": {"path": "./ext-angular-webpack.config.js"},

in angular.json

change

        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",

to

        "serve": {
          "builder": "@angular-builders/dev-server:generic",

copy generators/ext-component-creator/filetemplates/angular/ext-angular-webpack.config.json 
     to ext-angular-client

in package.json, add

  "dependencies": {
    "@sencha/ext-angular": "~6.7.0",
    "@sencha/ext": "~6.7.0",
    "@sencha/ext-modern": "~6.7.0",
    "@sencha/ext-modern-treegrid": "~6.7.0",
    "@sencha/ext-modern-theme-material": "~6.7.0",

  "devDependencies": {
    "@angular-builders/custom-webpack": "~7.0.0",
    "@angular-builders/dev-server":"~7.0.0",
    "@sencha/ext-angular-webpack-plugin": "~6.7.0",

in tsconfig.json, add

     "paths": {
      "@angular/*": ["./node_modules/@angular/*"]
     }

in src/app.module.ts

import { BrowserModule } from '@angular/platform-browser'
import { NgModule } from '@angular/core'
import { AppComponent } from './app.component'
import { ExtAngularModernModule } from '@sencha/ext-angular'

@Injectable()
export class ExtAngularService {
  constructor(
      private componentFactoryResolver: ComponentFactoryResolver,
      private appRef: ApplicationRef,
      private injector: Injector
  ) {}
  appendComponentToViewport(component: any) {
    const componentRef = this.componentFactoryResolver
      .resolveComponentFactory(component)
      .create(this.injector)
    this.appRef.attachView(componentRef.hostView)
    const domElem = (componentRef.hostView as EmbeddedViewRef<any>)
      .rootNodes[0] as HTMLElement
    var root = document.getElementsByClassName('x-viewport-body-el')[0]
    root.appendChild(domElem)
  }
}

@Component({
  selector: 'app-root',
  template: ``,
})
export class App {
  constructor(private ExtAngularService: ExtAngularService) {
    this.ExtAngularService.appendComponentToViewport(AppComponent)
  }
}

@NgModule({
  declarations: [
    AppComponent
  ],
  imports: [
    BrowserModule,
    ExtAngularModernModule
  ],
  providers: [
    ExtAngularService
  ],
  	entryComponents: [
		AppComponent
	],
  bootstrap: [App]
})
export class AppModule { }

in src/app.component.ts

    <div style="text-align:center">
      <button [text]="'Example ExtAngular Button'"></button>
    </div>

in src/index.html

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>ExtAngularClient</title>
  <base href="/">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="icon" type="image/x-icon" href="favicon.ico">
  <link href="build/ext-angular/ext.css" rel="stylesheet">
</head>
<body>
  <app-root></app-root>
  <script type="text/javascript" src="build/ext-angular/ext.js"></script>
</body>
</html>

run: npm install
run: npm start

***************************

For Library Generation

generators/ext-component-creator/node all.js angular modern
  - writes to generators/ext-angular-modern/src

generators/ext-angular-modern/npm run build
  - writes to generators/ext-angular-modern/dist

copy generators/ext-angular-modern/dist/ext-angular-modern to packages/ext-angular-modern