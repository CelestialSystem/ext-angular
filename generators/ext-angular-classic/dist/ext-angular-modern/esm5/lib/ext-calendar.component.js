/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
var calendarMetaData = /** @class */ (function () {
    function calendarMetaData() {
    }
    calendarMetaData.XTYPE = 'calendar';
    calendarMetaData.PROPERTIESOBJECT = {
        "actions": "Object",
        "activeChildTabIndex": "Number",
        "activeCounter": "Number",
        "activeItem": "String/Number",
        "alignOnScroll": "Boolean",
        "alignTarget": "String",
        "allowFocusingDisabledChildren": "Boolean",
        "alwaysOnTop": "Boolean/Number",
        "anchor": "String",
        "anchorSize": "Number/Object",
        "animateShadow": "Boolean",
        "animCollapse": "Boolean/Number",
        "ariaAttributes": "Object",
        "ariaDescribedBy": "String",
        "ariaLabel": "String",
        "ariaLabelledBy": "String",
        "autoDestroy": "Boolean",
        "autoEl": "String/Object",
        "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
        "autoScroll": "Boolean",
        "autoShow": "Boolean",
        "baseCls": "String",
        "bbar": "Object/Object[]",
        "bind": "Object/String",
        "bodyBorder": "Boolean",
        "bodyCls": "String/String[]",
        "bodyPadding": "Number/String",
        "bodyStyle": "String/Object/Function",
        "border": "Boolean",
        "bubbleEvents": "String[]",
        "buttonAlign": "String",
        "buttons": "Object[]",
        "calendarList": "Object",
        "childEls": "Object/String[]/Object[]",
        "closable": "Boolean",
        "closeAction": "String",
        "closeToolText": "String",
        "cls": "String/String[]",
        "collapsed": "Boolean",
        "collapsedCls": "String",
        "collapseDirection": "String",
        "collapseFirst": "Boolean",
        "collapseMode": "String",
        "collapseToolText": "String",
        "collapsible": "Boolean",
        "columnWidth": "Number",
        "compact": "Boolean",
        "compactOptions": "Object",
        "componentCls": "String",
        "componentLayout": "String/Object",
        "constrain": "Boolean",
        "constrainHeader": "Boolean",
        "constraintInsets": "Object/String",
        "constrainTo": "Ext.util.Region/Ext.dom.Element",
        "contentEl": "String",
        "controller": "String/Object/Ext.app.ViewController",
        "createButton": "Object",
        "createButtonPosition": "String",
        "data": "Object",
        "dateTitle": "Object",
        "defaultAlign": "String",
        "defaultButton": "String",
        "defaultButtonTarget": "String",
        "defaultDockWeights": "Object",
        "defaultFocus": "String",
        "defaultListenerScope": "Boolean",
        "defaults": "Object/Function",
        "defaultType": "String",
        "defaultView": "String",
        "detachOnRemove": "Boolean",
        "disabled": "Boolean",
        "disabledCls": "String",
        "dock": "'top'/'bottom'/'left'/'right'",
        "dockedItems": "Object/Object[]",
        "draggable": "Boolean/Object",
        "expandToolText": "String",
        "fbar": "Object/Object[]",
        "fixed": "Boolean",
        "flex": "Number",
        "floatable": "Boolean",
        "floating": "Boolean",
        "focusableContainer": "Boolean",
        "focusCls": "String",
        "focusOnToFront": "Boolean",
        "formBind": "Boolean",
        "frame": "Boolean",
        "frameHeader": "Boolean",
        "glyph": "Number/String",
        "header": "Boolean/Object",
        "headerOverCls": "String",
        "headerPosition": "'top'/'bottom'/'left'/'right'",
        "height": "Number|String",
        "hidden": "Boolean",
        "hideCollapseTool": "Boolean",
        "hideMode": "String",
        "html": "String/Object",
        "icon": "String",
        "iconAlign": "'top'/'right'/'bottom'/'left'",
        "iconCls": "String",
        "id": "String",
        "inactiveChildTabIndex": "Number",
        "itemId": "String",
        "items": "Object/Object[]",
        "keyMap": "Object",
        "keyMapEnabled": "Boolean",
        "keyMapTarget": "String",
        "layout": "Ext.enums.Layout/Object",
        "lbar": "Object/Object[]",
        "liquidLayout": "Boolean",
        "listeners": "Object",
        "liveDrag": "Boolean",
        "loader": "Ext.ComponentLoader/Object",
        "maintainTitlePosition": "Boolean",
        "manageHeight": "Boolean",
        "margin": "Number/String",
        "maskDefaults": "Object",
        "maskElement": "String",
        "maxHeight": "Number",
        "maxWidth": "Number",
        "minButtonWidth": "Number",
        "minHeight": "Number",
        "minWidth": "Number",
        "modal": "Boolean",
        "modelValidation": "Boolean",
        "nameable": "Boolean",
        "nameHolder": "Boolean",
        "nextButton": "Object",
        "overCls": "String",
        "overflowX": "String",
        "overflowY": "String",
        "overlapHeader": "Boolean",
        "padding": "Number/String",
        "placeholder": "Ext.Component/Object",
        "placeholderCollapseHideMode": "Number",
        "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
        "preventHeader": "Boolean",
        "previousButton": "Object",
        "publishes": "String/String[]/Object",
        "rbar": "Object/Object[]",
        "reference": "String",
        "referenceHolder": "Boolean",
        "region": "'north'/'south'/'east'/'west'/'center'",
        "renderConfig": "Object",
        "renderData": "Object",
        "renderSelectors": "Object",
        "renderTo": "String/HTMLElement/Ext.dom.Element",
        "renderTpl": "Ext.XTemplate/String/String[]",
        "resetFocusPosition": "Boolean",
        "resizable": "Boolean/Object",
        "resizeHandles": "String",
        "saveDelay": "Number",
        "scrollable": "Boolean/String/Object",
        "session": "Boolean/Object/Ext.data.Session",
        "shadow": "String/Boolean",
        "shadowOffset": "Number",
        "shareableName": "Boolean",
        "shim": "Boolean",
        "shrinkWrap": "Boolean/Number",
        "shrinkWrapDock": "Boolean/Number",
        "sideBar": "Object",
        "simpleDrag": "Boolean",
        "stateEvents": "String[]",
        "stateful": "Boolean/Object",
        "stateId": "String",
        "store": "Object/Ext.calendar.store.Calendars",
        "style": "String/Object",
        "suspendLayout": "Boolean",
        "switcher": "Object",
        "switcherPosition": "String",
        "tabGuard": "Boolean",
        "tabIndex": "Number",
        "tbar": "Object/Object[]",
        "timezoneOffset": "Number",
        "title": "String/Ext.panel.Title",
        "titleAlign": "'left'/'center'/'right'",
        "titleBar": "Object",
        "titleCollapse": "Boolean",
        "titlePosition": "Number",
        "titleRotation": "'default'/0/1/2",
        "todayButton": "Object",
        "toFrontOnShow": "Boolean",
        "tools": "Object[]/Ext.panel.Tool[]",
        "touchAction": "Object",
        "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
        "tplWriteMode": "String",
        "twoWayBindable": "String/String[]/Object",
        "ui": "String",
        "uiCls": "String[]",
        "userCls": "String/String[]",
        "value": "Date",
        "viewModel": "String/Object/Ext.app.ViewModel",
        "views": "Object",
        "weight": "Number",
        "width": "Number|String",
        "xtype": "Ext.enums.Widget",
        "platformConfig": "Object",
        "fitToParent": "Boolean",
        "config": "Object",
    };
    calendarMetaData.PROPERTIES = [
        'actions',
        'activeChildTabIndex',
        'activeCounter',
        'activeItem',
        'alignOnScroll',
        'alignTarget',
        'allowFocusingDisabledChildren',
        'alwaysOnTop',
        'anchor',
        'anchorSize',
        'animateShadow',
        'animCollapse',
        'ariaAttributes',
        'ariaDescribedBy',
        'ariaLabel',
        'ariaLabelledBy',
        'autoDestroy',
        'autoEl',
        'autoRender',
        'autoScroll',
        'autoShow',
        'baseCls',
        'bbar',
        'bind',
        'bodyBorder',
        'bodyCls',
        'bodyPadding',
        'bodyStyle',
        'border',
        'bubbleEvents',
        'buttonAlign',
        'buttons',
        'calendarList',
        'childEls',
        'closable',
        'closeAction',
        'closeToolText',
        'cls',
        'collapsed',
        'collapsedCls',
        'collapseDirection',
        'collapseFirst',
        'collapseMode',
        'collapseToolText',
        'collapsible',
        'columnWidth',
        'compact',
        'compactOptions',
        'componentCls',
        'componentLayout',
        'constrain',
        'constrainHeader',
        'constraintInsets',
        'constrainTo',
        'contentEl',
        'controller',
        'createButton',
        'createButtonPosition',
        'data',
        'dateTitle',
        'defaultAlign',
        'defaultButton',
        'defaultButtonTarget',
        'defaultDockWeights',
        'defaultFocus',
        'defaultListenerScope',
        'defaults',
        'defaultType',
        'defaultView',
        'detachOnRemove',
        'disabled',
        'disabledCls',
        'dock',
        'dockedItems',
        'draggable',
        'expandToolText',
        'fbar',
        'fixed',
        'flex',
        'floatable',
        'floating',
        'focusableContainer',
        'focusCls',
        'focusOnToFront',
        'formBind',
        'frame',
        'frameHeader',
        'glyph',
        'header',
        'headerOverCls',
        'headerPosition',
        'height',
        'hidden',
        'hideCollapseTool',
        'hideMode',
        'html',
        'icon',
        'iconAlign',
        'iconCls',
        'id',
        'inactiveChildTabIndex',
        'itemId',
        'items',
        'keyMap',
        'keyMapEnabled',
        'keyMapTarget',
        'layout',
        'lbar',
        'liquidLayout',
        'listeners',
        'liveDrag',
        'loader',
        'maintainTitlePosition',
        'manageHeight',
        'margin',
        'maskDefaults',
        'maskElement',
        'maxHeight',
        'maxWidth',
        'minButtonWidth',
        'minHeight',
        'minWidth',
        'modal',
        'modelValidation',
        'nameable',
        'nameHolder',
        'nextButton',
        'overCls',
        'overflowX',
        'overflowY',
        'overlapHeader',
        'padding',
        'placeholder',
        'placeholderCollapseHideMode',
        'plugins',
        'preventHeader',
        'previousButton',
        'publishes',
        'rbar',
        'reference',
        'referenceHolder',
        'region',
        'renderConfig',
        'renderData',
        'renderSelectors',
        'renderTo',
        'renderTpl',
        'resetFocusPosition',
        'resizable',
        'resizeHandles',
        'saveDelay',
        'scrollable',
        'session',
        'shadow',
        'shadowOffset',
        'shareableName',
        'shim',
        'shrinkWrap',
        'shrinkWrapDock',
        'sideBar',
        'simpleDrag',
        'stateEvents',
        'stateful',
        'stateId',
        'store',
        'style',
        'suspendLayout',
        'switcher',
        'switcherPosition',
        'tabGuard',
        'tabIndex',
        'tbar',
        'timezoneOffset',
        'title',
        'titleAlign',
        'titleBar',
        'titleCollapse',
        'titlePosition',
        'titleRotation',
        'todayButton',
        'toFrontOnShow',
        'tools',
        'touchAction',
        'tpl',
        'tplWriteMode',
        'twoWayBindable',
        'ui',
        'uiCls',
        'userCls',
        'value',
        'viewModel',
        'views',
        'weight',
        'width',
        'xtype',
        'platformConfig',
        'fitToParent',
        'config'
    ];
    calendarMetaData.EVENTS = [
        { name: 'activate', parameters: 'calendar' },
        { name: 'add', parameters: 'calendar,component,index' },
        { name: 'added', parameters: 'calendar,container,pos' },
        { name: 'afterlayout', parameters: 'calendar,layout' },
        { name: 'afterlayoutanimation', parameters: 'calendar' },
        { name: 'afterrender', parameters: 'calendar' },
        { name: 'beforeactivate', parameters: 'calendar' },
        { name: 'beforeadd', parameters: 'calendar,component,index' },
        { name: 'beforeclose', parameters: 'panel' },
        { name: 'beforecollapse', parameters: 'p,direction,animate' },
        { name: 'beforedeactivate', parameters: 'calendar' },
        { name: 'beforedestroy', parameters: 'calendar' },
        { name: 'beforeexpand', parameters: 'p,animate' },
        { name: 'beforehide', parameters: 'calendar' },
        { name: 'beforeremove', parameters: 'calendar,component' },
        { name: 'beforerender', parameters: 'calendar' },
        { name: 'beforeshow', parameters: 'calendar' },
        { name: 'beforestaterestore', parameters: 'calendar,state' },
        { name: 'beforestatesave', parameters: 'calendar,state' },
        { name: 'blur', parameters: 'calendar,event' },
        { name: 'boxready', parameters: 'calendar,width,height' },
        { name: 'childmove', parameters: 'calendar,component,prevIndex,newIndex' },
        { name: 'close', parameters: 'panel' },
        { name: 'collapse', parameters: 'p' },
        { name: 'deactivate', parameters: 'calendar' },
        { name: 'destroy', parameters: 'calendar' },
        { name: 'disable', parameters: 'calendar' },
        { name: 'dockedadd', parameters: 'calendar,component,index' },
        { name: 'dockedremove', parameters: 'calendar,component' },
        { name: 'enable', parameters: 'calendar' },
        { name: 'expand', parameters: 'p' },
        { name: 'float', parameters: '' },
        { name: 'focus', parameters: 'calendar,event' },
        { name: 'focusenter', parameters: 'calendar,event' },
        { name: 'focusleave', parameters: 'calendar,event' },
        { name: 'glyphchange', parameters: 'calendar,newGlyph,oldGlyph' },
        { name: 'hide', parameters: 'calendar' },
        { name: 'iconalignchange', parameters: 'calendar,newIconAlign,oldIconAlign' },
        { name: 'iconchange', parameters: 'calendar,newIcon,oldIcon' },
        { name: 'iconclschange', parameters: 'calendar,newIconCls,oldIconCls' },
        { name: 'move', parameters: 'calendar,x,y' },
        { name: 'remove', parameters: 'calendar,component' },
        { name: 'removed', parameters: 'calendar,ownerCt' },
        { name: 'render', parameters: 'calendar' },
        { name: 'resize', parameters: 'calendar,width,height,oldWidth,oldHeight' },
        { name: 'show', parameters: 'calendar' },
        { name: 'staterestore', parameters: 'calendar,state' },
        { name: 'statesave', parameters: 'calendar,state' },
        { name: 'titlealignchange', parameters: 'calendar,newTitleAlign,oldTitleAlign' },
        { name: 'titlechange', parameters: 'calendar,newTitle,oldTitle' },
        { name: 'titlepositionchange', parameters: 'calendar,newTitlePosition,oldTitlePosition' },
        { name: 'titlerotationchange', parameters: 'calendar,newTitleRotation,oldTitleRotation' },
        { name: 'unfloat', parameters: '' },
        { name: 'ready', parameters: '' }
    ];
    calendarMetaData.EVENTNAMES = [
        'activate',
        'add',
        'added',
        'afterlayout',
        'afterlayoutanimation',
        'afterrender',
        'beforeactivate',
        'beforeadd',
        'beforeclose',
        'beforecollapse',
        'beforedeactivate',
        'beforedestroy',
        'beforeexpand',
        'beforehide',
        'beforeremove',
        'beforerender',
        'beforeshow',
        'beforestaterestore',
        'beforestatesave',
        'blur',
        'boxready',
        'childmove',
        'close',
        'collapse',
        'deactivate',
        'destroy',
        'disable',
        'dockedadd',
        'dockedremove',
        'enable',
        'expand',
        'float',
        'focus',
        'focusenter',
        'focusleave',
        'glyphchange',
        'hide',
        'iconalignchange',
        'iconchange',
        'iconclschange',
        'move',
        'remove',
        'removed',
        'render',
        'resize',
        'show',
        'staterestore',
        'statesave',
        'titlealignchange',
        'titlechange',
        'titlepositionchange',
        'titlerotationchange',
        'unfloat',
        'ready'
    ];
    return calendarMetaData;
}());
export { calendarMetaData };
if (false) {
    /** @type {?} */
    calendarMetaData.XTYPE;
    /** @type {?} */
    calendarMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    calendarMetaData.PROPERTIES;
    /** @type {?} */
    calendarMetaData.EVENTS;
    /** @type {?} */
    calendarMetaData.EVENTNAMES;
}
var ExtCalendarComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ExtCalendarComponent, _super);
    function ExtCalendarComponent(eRef) {
        return _super.call(this, eRef, calendarMetaData) || this;
    }
    /**
     * @return {?}
     */
    ExtCalendarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { this.baseOnInit(calendarMetaData); };
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ExtCalendarComponent.prototype.ngAfterContentInit = 
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    function () {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    };
    ExtCalendarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'calendar',
                    inputs: calendarMetaData.PROPERTIES,
                    outputs: calendarMetaData.EVENTNAMES,
                    providers: [{ provide: base, useExisting: forwardRef(function () { return ExtCalendarComponent; }) }],
                    template: '<ng-template #dynamic></ng-template>'
                }] }
    ];
    /** @nocollapse */
    ExtCalendarComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return ExtCalendarComponent;
}(base));
export { ExtCalendarComponent };
//# sourceMappingURL=data:application/json;base64,