/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
var multiselectMetaData = /** @class */ (function () {
    function multiselectMetaData() {
    }
    multiselectMetaData.XTYPE = 'multiselect';
    multiselectMetaData.PROPERTIESOBJECT = {
        "actions": "Object",
        "activeChildTabIndex": "Number",
        "activeCounter": "Number",
        "activeError": "String",
        "activeErrorsTpl": "String/String[]/Ext.XTemplate",
        "activeItem": "String/Number",
        "afterBodyEl": "String/Array/Ext.XTemplate",
        "afterLabelTextTpl": "String/Array/Ext.XTemplate",
        "afterLabelTpl": "String/Array/Ext.XTemplate",
        "afterSubTpl": "String/Array/Ext.XTemplate",
        "alignOnScroll": "Boolean",
        "alignTarget": "String",
        "allowBlank": "Boolean",
        "allowFocusingDisabledChildren": "Boolean",
        "alwaysOnTop": "Boolean/Number",
        "anchor": "String",
        "anchorSize": "Number/Object",
        "animateShadow": "Boolean",
        "appendOnly": "String",
        "ariaAttributes": "Object",
        "ariaDescribedBy": "String",
        "ariaErrorText": "String",
        "ariaHelp": "String",
        "ariaLabel": "String",
        "ariaLabelledBy": "String",
        "autoDestroy": "Boolean",
        "autoEl": "String/Object",
        "autoFitErrors": "Boolean",
        "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
        "autoScroll": "Boolean",
        "autoShow": "Boolean",
        "baseBodyCls": "String",
        "baseCls": "String",
        "beforeBodyEl": "String/Array/Ext.XTemplate",
        "beforeLabelTextTpl": "String/Array/Ext.XTemplate",
        "beforeLabelTpl": "String/Array/Ext.XTemplate",
        "beforeSubTpl": "String/Array/Ext.XTemplate",
        "bind": "Object/String",
        "blankText": "String",
        "border": "Number/String/Boolean",
        "bubbleEvents": "String[]",
        "childEls": "Object/String[]/Object[]",
        "cls": "String/String[]",
        "columnWidth": "Number",
        "combineErrors": "Boolean",
        "combineLabels": "Boolean",
        "componentCls": "String",
        "componentLayout": "String/Object",
        "constrain": "Boolean",
        "constraintInsets": "Object/String",
        "constrainTo": "Ext.util.Region/Ext.dom.Element",
        "contentEl": "String",
        "controller": "String/Object/Ext.app.ViewController",
        "data": "Object",
        "ddReorder": "Boolean",
        "defaultAlign": "String",
        "defaultFocus": "String",
        "defaultListenerScope": "Boolean",
        "defaults": "Object/Function",
        "defaultType": "String",
        "delimiter": "String",
        "detachOnRemove": "Boolean",
        "disabled": "Boolean",
        "disabledCls": "String",
        "displayField": "String",
        "dock": "'top'/'bottom'/'left'/'right'",
        "draggable": "Boolean/Object",
        "dragGroup": "String",
        "dragText": "String",
        "dropGroup": "String",
        "errorMsgCls": "String",
        "fieldBodyCls": "String",
        "fieldDefaults": "Object",
        "fieldLabel": "String",
        "fixed": "Boolean",
        "flex": "Number",
        "floating": "Boolean",
        "focusableContainer": "Boolean",
        "focusCls": "String",
        "focusOnToFront": "Boolean",
        "formBind": "Boolean",
        "formItemCls": "String",
        "frame": "Boolean",
        "height": "Number|String",
        "hidden": "Boolean",
        "hideEmptyLabel": "Boolean",
        "hideLabel": "Boolean",
        "hideMode": "String",
        "html": "String/Object",
        "id": "String",
        "inactiveChildTabIndex": "Number",
        "invalidCls": "String",
        "itemId": "String",
        "items": "Object/Object[]",
        "keyMap": "Object",
        "keyMapEnabled": "Boolean",
        "keyMapTarget": "String",
        "labelableRenderTpl": "String/String[]/Ext.XTemplate",
        "labelAlign": "String",
        "labelAttrTpl": "String/Array/Ext.XTemplate",
        "labelCls": "String",
        "labelClsExtra": "String",
        "labelConnector": "String",
        "labelPad": "Number",
        "labelSeparator": "String",
        "labelStyle": "String",
        "labelWidth": "Number",
        "layout": "Ext.enums.Layout/Object",
        "liquidLayout": "Boolean",
        "listConfig": "Object",
        "listeners": "Object",
        "liveDrag": "Boolean",
        "loader": "Ext.ComponentLoader/Object",
        "margin": "Number/String",
        "maskDefaults": "Object",
        "maskElement": "String",
        "maxHeight": "Number",
        "maxSelections": "Number",
        "maxSelectionsText": "String",
        "maxWidth": "Number",
        "minHeight": "Number",
        "minSelections": "Number",
        "minSelectionsText": "String",
        "minWidth": "Number",
        "modal": "Boolean",
        "modelValidation": "Boolean",
        "msgTarget": "String",
        "name": "String",
        "nameable": "Boolean",
        "nameHolder": "Boolean",
        "overCls": "String",
        "overflowX": "String",
        "overflowY": "String",
        "padding": "Number/String",
        "pageSize": "Number",
        "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
        "preventMark": "Boolean",
        "publishes": "String/String[]/Object",
        "reference": "String",
        "referenceHolder": "Boolean",
        "region": "'north'/'south'/'east'/'west'/'center'",
        "renderConfig": "Object",
        "renderData": "Object",
        "renderSelectors": "Object",
        "renderTo": "String/HTMLElement/Ext.dom.Element",
        "renderTpl": "Ext.XTemplate/String/String[]",
        "resetFocusPosition": "Boolean",
        "resizable": "Boolean/Object",
        "resizeHandles": "String",
        "saveDelay": "Number",
        "scrollable": "Boolean/String/Object",
        "session": "Boolean/Object/Ext.data.Session",
        "shadow": "String/Boolean",
        "shadowOffset": "Number",
        "shareableName": "Boolean",
        "shim": "Boolean",
        "shrinkWrap": "Boolean/Number",
        "stateEvents": "String[]",
        "stateful": "Boolean/Object",
        "stateId": "String",
        "store": "Ext.data.Store/Array",
        "style": "String/Object",
        "submitValue": "Boolean",
        "suspendLayout": "Boolean",
        "tabGuard": "Boolean",
        "tabIndex": "Number",
        "tbar": "Object/Array",
        "title": "String",
        "toFrontOnShow": "Boolean",
        "touchAction": "Object",
        "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
        "tplWriteMode": "String",
        "twoWayBindable": "String/String[]/Object",
        "ui": "String",
        "uiCls": "String[]",
        "userCls": "String/String[]",
        "validateOnChange": "Boolean",
        "validation": "Boolean/String",
        "validationField": "Ext.data.Field",
        "value": "Object",
        "valueField": "String",
        "valuePublishEvent": "String[]/String",
        "viewModel": "String/Object/Ext.app.ViewModel",
        "weight": "Number",
        "width": "Number|String",
        "xtype": "Ext.enums.Widget",
        "platformConfig": "Object",
        "fitToParent": "Boolean",
        "config": "Object",
    };
    multiselectMetaData.PROPERTIES = [
        'actions',
        'activeChildTabIndex',
        'activeCounter',
        'activeError',
        'activeErrorsTpl',
        'activeItem',
        'afterBodyEl',
        'afterLabelTextTpl',
        'afterLabelTpl',
        'afterSubTpl',
        'alignOnScroll',
        'alignTarget',
        'allowBlank',
        'allowFocusingDisabledChildren',
        'alwaysOnTop',
        'anchor',
        'anchorSize',
        'animateShadow',
        'appendOnly',
        'ariaAttributes',
        'ariaDescribedBy',
        'ariaErrorText',
        'ariaHelp',
        'ariaLabel',
        'ariaLabelledBy',
        'autoDestroy',
        'autoEl',
        'autoFitErrors',
        'autoRender',
        'autoScroll',
        'autoShow',
        'baseBodyCls',
        'baseCls',
        'beforeBodyEl',
        'beforeLabelTextTpl',
        'beforeLabelTpl',
        'beforeSubTpl',
        'bind',
        'blankText',
        'border',
        'bubbleEvents',
        'childEls',
        'cls',
        'columnWidth',
        'combineErrors',
        'combineLabels',
        'componentCls',
        'componentLayout',
        'constrain',
        'constraintInsets',
        'constrainTo',
        'contentEl',
        'controller',
        'data',
        'ddReorder',
        'defaultAlign',
        'defaultFocus',
        'defaultListenerScope',
        'defaults',
        'defaultType',
        'delimiter',
        'detachOnRemove',
        'disabled',
        'disabledCls',
        'displayField',
        'dock',
        'draggable',
        'dragGroup',
        'dragText',
        'dropGroup',
        'errorMsgCls',
        'fieldBodyCls',
        'fieldDefaults',
        'fieldLabel',
        'fixed',
        'flex',
        'floating',
        'focusableContainer',
        'focusCls',
        'focusOnToFront',
        'formBind',
        'formItemCls',
        'frame',
        'height',
        'hidden',
        'hideEmptyLabel',
        'hideLabel',
        'hideMode',
        'html',
        'id',
        'inactiveChildTabIndex',
        'invalidCls',
        'itemId',
        'items',
        'keyMap',
        'keyMapEnabled',
        'keyMapTarget',
        'labelableRenderTpl',
        'labelAlign',
        'labelAttrTpl',
        'labelCls',
        'labelClsExtra',
        'labelConnector',
        'labelPad',
        'labelSeparator',
        'labelStyle',
        'labelWidth',
        'layout',
        'liquidLayout',
        'listConfig',
        'listeners',
        'liveDrag',
        'loader',
        'margin',
        'maskDefaults',
        'maskElement',
        'maxHeight',
        'maxSelections',
        'maxSelectionsText',
        'maxWidth',
        'minHeight',
        'minSelections',
        'minSelectionsText',
        'minWidth',
        'modal',
        'modelValidation',
        'msgTarget',
        'name',
        'nameable',
        'nameHolder',
        'overCls',
        'overflowX',
        'overflowY',
        'padding',
        'pageSize',
        'plugins',
        'preventMark',
        'publishes',
        'reference',
        'referenceHolder',
        'region',
        'renderConfig',
        'renderData',
        'renderSelectors',
        'renderTo',
        'renderTpl',
        'resetFocusPosition',
        'resizable',
        'resizeHandles',
        'saveDelay',
        'scrollable',
        'session',
        'shadow',
        'shadowOffset',
        'shareableName',
        'shim',
        'shrinkWrap',
        'stateEvents',
        'stateful',
        'stateId',
        'store',
        'style',
        'submitValue',
        'suspendLayout',
        'tabGuard',
        'tabIndex',
        'tbar',
        'title',
        'toFrontOnShow',
        'touchAction',
        'tpl',
        'tplWriteMode',
        'twoWayBindable',
        'ui',
        'uiCls',
        'userCls',
        'validateOnChange',
        'validation',
        'validationField',
        'value',
        'valueField',
        'valuePublishEvent',
        'viewModel',
        'weight',
        'width',
        'xtype',
        'platformConfig',
        'fitToParent',
        'config'
    ];
    multiselectMetaData.EVENTS = [
        { name: 'activate', parameters: 'multiselectfield' },
        { name: 'add', parameters: 'multiselectfield,component,index' },
        { name: 'added', parameters: 'multiselectfield,container,pos' },
        { name: 'afterlayout', parameters: 'multiselectfield,layout' },
        { name: 'afterlayoutanimation', parameters: 'multiselectfield' },
        { name: 'afterrender', parameters: 'multiselectfield' },
        { name: 'beforeactivate', parameters: 'multiselectfield' },
        { name: 'beforeadd', parameters: 'multiselectfield,component,index' },
        { name: 'beforedeactivate', parameters: 'multiselectfield' },
        { name: 'beforedestroy', parameters: 'multiselectfield' },
        { name: 'beforehide', parameters: 'multiselectfield' },
        { name: 'beforeremove', parameters: 'multiselectfield,component' },
        { name: 'beforerender', parameters: 'multiselectfield' },
        { name: 'beforeshow', parameters: 'multiselectfield' },
        { name: 'beforestaterestore', parameters: 'multiselectfield,state' },
        { name: 'beforestatesave', parameters: 'multiselectfield,state' },
        { name: 'blur', parameters: 'multiselectfield,event' },
        { name: 'boxready', parameters: 'multiselectfield,width,height' },
        { name: 'change', parameters: 'multiselectfield,newValue,oldValue' },
        { name: 'childmove', parameters: 'multiselectfield,component,prevIndex,newIndex' },
        { name: 'deactivate', parameters: 'multiselectfield' },
        { name: 'destroy', parameters: 'multiselectfield' },
        { name: 'dirtychange', parameters: 'multiselectfield,isDirty' },
        { name: 'disable', parameters: 'multiselectfield' },
        { name: 'enable', parameters: 'multiselectfield' },
        { name: 'errorchange', parameters: 'multiselectfield,error' },
        { name: 'fielderrorchange', parameters: 'multiselectfield,field,error' },
        { name: 'fieldvaliditychange', parameters: 'multiselectfield,field,isValid' },
        { name: 'focus', parameters: 'multiselectfield,event' },
        { name: 'focusenter', parameters: 'multiselectfield,event' },
        { name: 'focusleave', parameters: 'multiselectfield,event' },
        { name: 'hide', parameters: 'multiselectfield' },
        { name: 'move', parameters: 'multiselectfield,x,y' },
        { name: 'remove', parameters: 'multiselectfield,component' },
        { name: 'removed', parameters: 'multiselectfield,ownerCt' },
        { name: 'render', parameters: 'multiselectfield' },
        { name: 'resize', parameters: 'multiselectfield,width,height,oldWidth,oldHeight' },
        { name: 'show', parameters: 'multiselectfield' },
        { name: 'staterestore', parameters: 'multiselectfield,state' },
        { name: 'statesave', parameters: 'multiselectfield,state' },
        { name: 'validitychange', parameters: 'multiselectfield,isValid' },
        { name: 'ready', parameters: '' }
    ];
    multiselectMetaData.EVENTNAMES = [
        'activate',
        'add',
        'added',
        'afterlayout',
        'afterlayoutanimation',
        'afterrender',
        'beforeactivate',
        'beforeadd',
        'beforedeactivate',
        'beforedestroy',
        'beforehide',
        'beforeremove',
        'beforerender',
        'beforeshow',
        'beforestaterestore',
        'beforestatesave',
        'blur',
        'boxready',
        'change',
        'childmove',
        'deactivate',
        'destroy',
        'dirtychange',
        'disable',
        'enable',
        'errorchange',
        'fielderrorchange',
        'fieldvaliditychange',
        'focus',
        'focusenter',
        'focusleave',
        'hide',
        'move',
        'remove',
        'removed',
        'render',
        'resize',
        'show',
        'staterestore',
        'statesave',
        'validitychange',
        'ready'
    ];
    return multiselectMetaData;
}());
export { multiselectMetaData };
if (false) {
    /** @type {?} */
    multiselectMetaData.XTYPE;
    /** @type {?} */
    multiselectMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    multiselectMetaData.PROPERTIES;
    /** @type {?} */
    multiselectMetaData.EVENTS;
    /** @type {?} */
    multiselectMetaData.EVENTNAMES;
}
var ExtMultiselectComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ExtMultiselectComponent, _super);
    function ExtMultiselectComponent(eRef) {
        return _super.call(this, eRef, multiselectMetaData) || this;
    }
    /**
     * @return {?}
     */
    ExtMultiselectComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { this.baseOnInit(multiselectMetaData); };
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ExtMultiselectComponent.prototype.ngAfterContentInit = 
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    function () {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    };
    ExtMultiselectComponent.decorators = [
        { type: Component, args: [{
                    selector: 'multiselect',
                    inputs: multiselectMetaData.PROPERTIES,
                    outputs: multiselectMetaData.EVENTNAMES,
                    providers: [{ provide: base, useExisting: forwardRef(function () { return ExtMultiselectComponent; }) }],
                    template: '<ng-template #dynamic></ng-template>'
                }] }
    ];
    /** @nocollapse */
    ExtMultiselectComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return ExtMultiselectComponent;
}(base));
export { ExtMultiselectComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0LW11bHRpc2VsZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzZW5jaGEvZXh0LWFuZ3VsYXItbW9kZXJuLyIsInNvdXJjZXMiOlsibGliL2V4dC1tdWx0aXNlbGVjdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBS0wsU0FBUyxFQUNULFVBQVUsRUFDVixVQUFVLEVBQ1gsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUM5QjtJQUFBO0lBd2RBLENBQUM7SUF2ZGUseUJBQUssR0FBVyxhQUFhLENBQUM7SUFDOUIsb0NBQWdCLEdBQVE7UUFDcEMsU0FBUyxFQUFFLFFBQVE7UUFDbkIscUJBQXFCLEVBQUUsUUFBUTtRQUMvQixlQUFlLEVBQUUsUUFBUTtRQUN6QixhQUFhLEVBQUUsUUFBUTtRQUN2QixpQkFBaUIsRUFBRSwrQkFBK0I7UUFDbEQsWUFBWSxFQUFFLGVBQWU7UUFDN0IsYUFBYSxFQUFFLDRCQUE0QjtRQUMzQyxtQkFBbUIsRUFBRSw0QkFBNEI7UUFDakQsZUFBZSxFQUFFLDRCQUE0QjtRQUM3QyxhQUFhLEVBQUUsNEJBQTRCO1FBQzNDLGVBQWUsRUFBRSxTQUFTO1FBQzFCLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLFlBQVksRUFBRSxTQUFTO1FBQ3ZCLCtCQUErQixFQUFFLFNBQVM7UUFDMUMsYUFBYSxFQUFFLGdCQUFnQjtRQUMvQixRQUFRLEVBQUUsUUFBUTtRQUNsQixZQUFZLEVBQUUsZUFBZTtRQUM3QixlQUFlLEVBQUUsU0FBUztRQUMxQixZQUFZLEVBQUUsUUFBUTtRQUN0QixnQkFBZ0IsRUFBRSxRQUFRO1FBQzFCLGlCQUFpQixFQUFFLFFBQVE7UUFDM0IsZUFBZSxFQUFFLFFBQVE7UUFDekIsVUFBVSxFQUFFLFFBQVE7UUFDcEIsV0FBVyxFQUFFLFFBQVE7UUFDckIsZ0JBQWdCLEVBQUUsUUFBUTtRQUMxQixhQUFhLEVBQUUsU0FBUztRQUN4QixRQUFRLEVBQUUsZUFBZTtRQUN6QixlQUFlLEVBQUUsU0FBUztRQUMxQixZQUFZLEVBQUUsNENBQTRDO1FBQzFELFlBQVksRUFBRSxTQUFTO1FBQ3ZCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLFNBQVMsRUFBRSxRQUFRO1FBQ25CLGNBQWMsRUFBRSw0QkFBNEI7UUFDNUMsb0JBQW9CLEVBQUUsNEJBQTRCO1FBQ2xELGdCQUFnQixFQUFFLDRCQUE0QjtRQUM5QyxjQUFjLEVBQUUsNEJBQTRCO1FBQzVDLE1BQU0sRUFBRSxlQUFlO1FBQ3ZCLFdBQVcsRUFBRSxRQUFRO1FBQ3JCLFFBQVEsRUFBRSx1QkFBdUI7UUFDakMsY0FBYyxFQUFFLFVBQVU7UUFDMUIsVUFBVSxFQUFFLDBCQUEwQjtRQUN0QyxLQUFLLEVBQUUsaUJBQWlCO1FBQ3hCLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLGVBQWUsRUFBRSxTQUFTO1FBQzFCLGVBQWUsRUFBRSxTQUFTO1FBQzFCLGNBQWMsRUFBRSxRQUFRO1FBQ3hCLGlCQUFpQixFQUFFLGVBQWU7UUFDbEMsV0FBVyxFQUFFLFNBQVM7UUFDdEIsa0JBQWtCLEVBQUUsZUFBZTtRQUNuQyxhQUFhLEVBQUUsaUNBQWlDO1FBQ2hELFdBQVcsRUFBRSxRQUFRO1FBQ3JCLFlBQVksRUFBRSxzQ0FBc0M7UUFDcEQsTUFBTSxFQUFFLFFBQVE7UUFDaEIsV0FBVyxFQUFFLFNBQVM7UUFDdEIsY0FBYyxFQUFFLFFBQVE7UUFDeEIsY0FBYyxFQUFFLFFBQVE7UUFDeEIsc0JBQXNCLEVBQUUsU0FBUztRQUNqQyxVQUFVLEVBQUUsaUJBQWlCO1FBQzdCLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLFdBQVcsRUFBRSxRQUFRO1FBQ3JCLGdCQUFnQixFQUFFLFNBQVM7UUFDM0IsVUFBVSxFQUFFLFNBQVM7UUFDckIsYUFBYSxFQUFFLFFBQVE7UUFDdkIsY0FBYyxFQUFFLFFBQVE7UUFDeEIsTUFBTSxFQUFFLCtCQUErQjtRQUN2QyxXQUFXLEVBQUUsZ0JBQWdCO1FBQzdCLFdBQVcsRUFBRSxRQUFRO1FBQ3JCLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLFdBQVcsRUFBRSxRQUFRO1FBQ3JCLGFBQWEsRUFBRSxRQUFRO1FBQ3ZCLGNBQWMsRUFBRSxRQUFRO1FBQ3hCLGVBQWUsRUFBRSxRQUFRO1FBQ3pCLFlBQVksRUFBRSxRQUFRO1FBQ3RCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLE1BQU0sRUFBRSxRQUFRO1FBQ2hCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLG9CQUFvQixFQUFFLFNBQVM7UUFDL0IsVUFBVSxFQUFFLFFBQVE7UUFDcEIsZ0JBQWdCLEVBQUUsU0FBUztRQUMzQixVQUFVLEVBQUUsU0FBUztRQUNyQixhQUFhLEVBQUUsUUFBUTtRQUN2QixPQUFPLEVBQUUsU0FBUztRQUNsQixRQUFRLEVBQUUsZUFBZTtRQUN6QixRQUFRLEVBQUUsU0FBUztRQUNuQixnQkFBZ0IsRUFBRSxTQUFTO1FBQzNCLFdBQVcsRUFBRSxTQUFTO1FBQ3RCLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLE1BQU0sRUFBRSxlQUFlO1FBQ3ZCLElBQUksRUFBRSxRQUFRO1FBQ2QsdUJBQXVCLEVBQUUsUUFBUTtRQUNqQyxZQUFZLEVBQUUsUUFBUTtRQUN0QixRQUFRLEVBQUUsUUFBUTtRQUNsQixPQUFPLEVBQUUsaUJBQWlCO1FBQzFCLFFBQVEsRUFBRSxRQUFRO1FBQ2xCLGVBQWUsRUFBRSxTQUFTO1FBQzFCLGNBQWMsRUFBRSxRQUFRO1FBQ3hCLG9CQUFvQixFQUFFLCtCQUErQjtRQUNyRCxZQUFZLEVBQUUsUUFBUTtRQUN0QixjQUFjLEVBQUUsNEJBQTRCO1FBQzVDLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLGVBQWUsRUFBRSxRQUFRO1FBQ3pCLGdCQUFnQixFQUFFLFFBQVE7UUFDMUIsVUFBVSxFQUFFLFFBQVE7UUFDcEIsZ0JBQWdCLEVBQUUsUUFBUTtRQUMxQixZQUFZLEVBQUUsUUFBUTtRQUN0QixZQUFZLEVBQUUsUUFBUTtRQUN0QixRQUFRLEVBQUUseUJBQXlCO1FBQ25DLGNBQWMsRUFBRSxTQUFTO1FBQ3pCLFlBQVksRUFBRSxRQUFRO1FBQ3RCLFdBQVcsRUFBRSxRQUFRO1FBQ3JCLFVBQVUsRUFBRSxTQUFTO1FBQ3JCLFFBQVEsRUFBRSw0QkFBNEI7UUFDdEMsUUFBUSxFQUFFLGVBQWU7UUFDekIsY0FBYyxFQUFFLFFBQVE7UUFDeEIsYUFBYSxFQUFFLFFBQVE7UUFDdkIsV0FBVyxFQUFFLFFBQVE7UUFDckIsZUFBZSxFQUFFLFFBQVE7UUFDekIsbUJBQW1CLEVBQUUsUUFBUTtRQUM3QixVQUFVLEVBQUUsUUFBUTtRQUNwQixXQUFXLEVBQUUsUUFBUTtRQUNyQixlQUFlLEVBQUUsUUFBUTtRQUN6QixtQkFBbUIsRUFBRSxRQUFRO1FBQzdCLFVBQVUsRUFBRSxRQUFRO1FBQ3BCLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLGlCQUFpQixFQUFFLFNBQVM7UUFDNUIsV0FBVyxFQUFFLFFBQVE7UUFDckIsTUFBTSxFQUFFLFFBQVE7UUFDaEIsVUFBVSxFQUFFLFNBQVM7UUFDckIsWUFBWSxFQUFFLFNBQVM7UUFDdkIsU0FBUyxFQUFFLFFBQVE7UUFDbkIsV0FBVyxFQUFFLFFBQVE7UUFDckIsV0FBVyxFQUFFLFFBQVE7UUFDckIsU0FBUyxFQUFFLGVBQWU7UUFDMUIsVUFBVSxFQUFFLFFBQVE7UUFDcEIsU0FBUyxFQUFFLG1EQUFtRDtRQUM5RCxhQUFhLEVBQUUsU0FBUztRQUN4QixXQUFXLEVBQUUsd0JBQXdCO1FBQ3JDLFdBQVcsRUFBRSxRQUFRO1FBQ3JCLGlCQUFpQixFQUFFLFNBQVM7UUFDNUIsUUFBUSxFQUFFLHdDQUF3QztRQUNsRCxjQUFjLEVBQUUsUUFBUTtRQUN4QixZQUFZLEVBQUUsUUFBUTtRQUN0QixpQkFBaUIsRUFBRSxRQUFRO1FBQzNCLFVBQVUsRUFBRSxvQ0FBb0M7UUFDaEQsV0FBVyxFQUFFLCtCQUErQjtRQUM1QyxvQkFBb0IsRUFBRSxTQUFTO1FBQy9CLFdBQVcsRUFBRSxnQkFBZ0I7UUFDN0IsZUFBZSxFQUFFLFFBQVE7UUFDekIsV0FBVyxFQUFFLFFBQVE7UUFDckIsWUFBWSxFQUFFLHVCQUF1QjtRQUNyQyxTQUFTLEVBQUUsaUNBQWlDO1FBQzVDLFFBQVEsRUFBRSxnQkFBZ0I7UUFDMUIsY0FBYyxFQUFFLFFBQVE7UUFDeEIsZUFBZSxFQUFFLFNBQVM7UUFDMUIsTUFBTSxFQUFFLFNBQVM7UUFDakIsWUFBWSxFQUFFLGdCQUFnQjtRQUM5QixhQUFhLEVBQUUsVUFBVTtRQUN6QixVQUFVLEVBQUUsZ0JBQWdCO1FBQzVCLFNBQVMsRUFBRSxRQUFRO1FBQ25CLE9BQU8sRUFBRSxzQkFBc0I7UUFDL0IsT0FBTyxFQUFFLGVBQWU7UUFDeEIsYUFBYSxFQUFFLFNBQVM7UUFDeEIsZUFBZSxFQUFFLFNBQVM7UUFDMUIsVUFBVSxFQUFFLFNBQVM7UUFDckIsVUFBVSxFQUFFLFFBQVE7UUFDcEIsTUFBTSxFQUFFLGNBQWM7UUFDdEIsT0FBTyxFQUFFLFFBQVE7UUFDakIsZUFBZSxFQUFFLFNBQVM7UUFDMUIsYUFBYSxFQUFFLFFBQVE7UUFDdkIsS0FBSyxFQUFFLDRDQUE0QztRQUNuRCxjQUFjLEVBQUUsUUFBUTtRQUN4QixnQkFBZ0IsRUFBRSx3QkFBd0I7UUFDMUMsSUFBSSxFQUFFLFFBQVE7UUFDZCxPQUFPLEVBQUUsVUFBVTtRQUNuQixTQUFTLEVBQUUsaUJBQWlCO1FBQzVCLGtCQUFrQixFQUFFLFNBQVM7UUFDN0IsWUFBWSxFQUFFLGdCQUFnQjtRQUM5QixpQkFBaUIsRUFBRSxnQkFBZ0I7UUFDbkMsT0FBTyxFQUFFLFFBQVE7UUFDakIsWUFBWSxFQUFFLFFBQVE7UUFDdEIsbUJBQW1CLEVBQUUsaUJBQWlCO1FBQ3RDLFdBQVcsRUFBRSxpQ0FBaUM7UUFDOUMsUUFBUSxFQUFFLFFBQVE7UUFDbEIsT0FBTyxFQUFFLGVBQWU7UUFDeEIsT0FBTyxFQUFFLGtCQUFrQjtRQUMzQixnQkFBZ0IsRUFBRSxRQUFRO1FBQzFCLGFBQWEsRUFBRSxTQUFTO1FBQ3hCLFFBQVEsRUFBRSxRQUFRO0tBQ3JCLENBQUM7SUFDYyw4QkFBVSxHQUFhO1FBQ25DLFNBQVM7UUFDVCxxQkFBcUI7UUFDckIsZUFBZTtRQUNmLGFBQWE7UUFDYixpQkFBaUI7UUFDakIsWUFBWTtRQUNaLGFBQWE7UUFDYixtQkFBbUI7UUFDbkIsZUFBZTtRQUNmLGFBQWE7UUFDYixlQUFlO1FBQ2YsYUFBYTtRQUNiLFlBQVk7UUFDWiwrQkFBK0I7UUFDL0IsYUFBYTtRQUNiLFFBQVE7UUFDUixZQUFZO1FBQ1osZUFBZTtRQUNmLFlBQVk7UUFDWixnQkFBZ0I7UUFDaEIsaUJBQWlCO1FBQ2pCLGVBQWU7UUFDZixVQUFVO1FBQ1YsV0FBVztRQUNYLGdCQUFnQjtRQUNoQixhQUFhO1FBQ2IsUUFBUTtRQUNSLGVBQWU7UUFDZixZQUFZO1FBQ1osWUFBWTtRQUNaLFVBQVU7UUFDVixhQUFhO1FBQ2IsU0FBUztRQUNULGNBQWM7UUFDZCxvQkFBb0I7UUFDcEIsZ0JBQWdCO1FBQ2hCLGNBQWM7UUFDZCxNQUFNO1FBQ04sV0FBVztRQUNYLFFBQVE7UUFDUixjQUFjO1FBQ2QsVUFBVTtRQUNWLEtBQUs7UUFDTCxhQUFhO1FBQ2IsZUFBZTtRQUNmLGVBQWU7UUFDZixjQUFjO1FBQ2QsaUJBQWlCO1FBQ2pCLFdBQVc7UUFDWCxrQkFBa0I7UUFDbEIsYUFBYTtRQUNiLFdBQVc7UUFDWCxZQUFZO1FBQ1osTUFBTTtRQUNOLFdBQVc7UUFDWCxjQUFjO1FBQ2QsY0FBYztRQUNkLHNCQUFzQjtRQUN0QixVQUFVO1FBQ1YsYUFBYTtRQUNiLFdBQVc7UUFDWCxnQkFBZ0I7UUFDaEIsVUFBVTtRQUNWLGFBQWE7UUFDYixjQUFjO1FBQ2QsTUFBTTtRQUNOLFdBQVc7UUFDWCxXQUFXO1FBQ1gsVUFBVTtRQUNWLFdBQVc7UUFDWCxhQUFhO1FBQ2IsY0FBYztRQUNkLGVBQWU7UUFDZixZQUFZO1FBQ1osT0FBTztRQUNQLE1BQU07UUFDTixVQUFVO1FBQ1Ysb0JBQW9CO1FBQ3BCLFVBQVU7UUFDVixnQkFBZ0I7UUFDaEIsVUFBVTtRQUNWLGFBQWE7UUFDYixPQUFPO1FBQ1AsUUFBUTtRQUNSLFFBQVE7UUFDUixnQkFBZ0I7UUFDaEIsV0FBVztRQUNYLFVBQVU7UUFDVixNQUFNO1FBQ04sSUFBSTtRQUNKLHVCQUF1QjtRQUN2QixZQUFZO1FBQ1osUUFBUTtRQUNSLE9BQU87UUFDUCxRQUFRO1FBQ1IsZUFBZTtRQUNmLGNBQWM7UUFDZCxvQkFBb0I7UUFDcEIsWUFBWTtRQUNaLGNBQWM7UUFDZCxVQUFVO1FBQ1YsZUFBZTtRQUNmLGdCQUFnQjtRQUNoQixVQUFVO1FBQ1YsZ0JBQWdCO1FBQ2hCLFlBQVk7UUFDWixZQUFZO1FBQ1osUUFBUTtRQUNSLGNBQWM7UUFDZCxZQUFZO1FBQ1osV0FBVztRQUNYLFVBQVU7UUFDVixRQUFRO1FBQ1IsUUFBUTtRQUNSLGNBQWM7UUFDZCxhQUFhO1FBQ2IsV0FBVztRQUNYLGVBQWU7UUFDZixtQkFBbUI7UUFDbkIsVUFBVTtRQUNWLFdBQVc7UUFDWCxlQUFlO1FBQ2YsbUJBQW1CO1FBQ25CLFVBQVU7UUFDVixPQUFPO1FBQ1AsaUJBQWlCO1FBQ2pCLFdBQVc7UUFDWCxNQUFNO1FBQ04sVUFBVTtRQUNWLFlBQVk7UUFDWixTQUFTO1FBQ1QsV0FBVztRQUNYLFdBQVc7UUFDWCxTQUFTO1FBQ1QsVUFBVTtRQUNWLFNBQVM7UUFDVCxhQUFhO1FBQ2IsV0FBVztRQUNYLFdBQVc7UUFDWCxpQkFBaUI7UUFDakIsUUFBUTtRQUNSLGNBQWM7UUFDZCxZQUFZO1FBQ1osaUJBQWlCO1FBQ2pCLFVBQVU7UUFDVixXQUFXO1FBQ1gsb0JBQW9CO1FBQ3BCLFdBQVc7UUFDWCxlQUFlO1FBQ2YsV0FBVztRQUNYLFlBQVk7UUFDWixTQUFTO1FBQ1QsUUFBUTtRQUNSLGNBQWM7UUFDZCxlQUFlO1FBQ2YsTUFBTTtRQUNOLFlBQVk7UUFDWixhQUFhO1FBQ2IsVUFBVTtRQUNWLFNBQVM7UUFDVCxPQUFPO1FBQ1AsT0FBTztRQUNQLGFBQWE7UUFDYixlQUFlO1FBQ2YsVUFBVTtRQUNWLFVBQVU7UUFDVixNQUFNO1FBQ04sT0FBTztRQUNQLGVBQWU7UUFDZixhQUFhO1FBQ2IsS0FBSztRQUNMLGNBQWM7UUFDZCxnQkFBZ0I7UUFDaEIsSUFBSTtRQUNKLE9BQU87UUFDUCxTQUFTO1FBQ1Qsa0JBQWtCO1FBQ2xCLFlBQVk7UUFDWixpQkFBaUI7UUFDakIsT0FBTztRQUNQLFlBQVk7UUFDWixtQkFBbUI7UUFDbkIsV0FBVztRQUNYLFFBQVE7UUFDUixPQUFPO1FBQ1AsT0FBTztRQUNQLGdCQUFnQjtRQUNoQixhQUFhO1FBQ2IsUUFBUTtLQUNYLENBQUM7SUFDYywwQkFBTSxHQUFVO1FBQzlCLEVBQUMsSUFBSSxFQUFDLFVBQVUsRUFBQyxVQUFVLEVBQUMsa0JBQWtCLEVBQUM7UUFDL0MsRUFBQyxJQUFJLEVBQUMsS0FBSyxFQUFDLFVBQVUsRUFBQyxrQ0FBa0MsRUFBQztRQUMxRCxFQUFDLElBQUksRUFBQyxPQUFPLEVBQUMsVUFBVSxFQUFDLGdDQUFnQyxFQUFDO1FBQzFELEVBQUMsSUFBSSxFQUFDLGFBQWEsRUFBQyxVQUFVLEVBQUMseUJBQXlCLEVBQUM7UUFDekQsRUFBQyxJQUFJLEVBQUMsc0JBQXNCLEVBQUMsVUFBVSxFQUFDLGtCQUFrQixFQUFDO1FBQzNELEVBQUMsSUFBSSxFQUFDLGFBQWEsRUFBQyxVQUFVLEVBQUMsa0JBQWtCLEVBQUM7UUFDbEQsRUFBQyxJQUFJLEVBQUMsZ0JBQWdCLEVBQUMsVUFBVSxFQUFDLGtCQUFrQixFQUFDO1FBQ3JELEVBQUMsSUFBSSxFQUFDLFdBQVcsRUFBQyxVQUFVLEVBQUMsa0NBQWtDLEVBQUM7UUFDaEUsRUFBQyxJQUFJLEVBQUMsa0JBQWtCLEVBQUMsVUFBVSxFQUFDLGtCQUFrQixFQUFDO1FBQ3ZELEVBQUMsSUFBSSxFQUFDLGVBQWUsRUFBQyxVQUFVLEVBQUMsa0JBQWtCLEVBQUM7UUFDcEQsRUFBQyxJQUFJLEVBQUMsWUFBWSxFQUFDLFVBQVUsRUFBQyxrQkFBa0IsRUFBQztRQUNqRCxFQUFDLElBQUksRUFBQyxjQUFjLEVBQUMsVUFBVSxFQUFDLDRCQUE0QixFQUFDO1FBQzdELEVBQUMsSUFBSSxFQUFDLGNBQWMsRUFBQyxVQUFVLEVBQUMsa0JBQWtCLEVBQUM7UUFDbkQsRUFBQyxJQUFJLEVBQUMsWUFBWSxFQUFDLFVBQVUsRUFBQyxrQkFBa0IsRUFBQztRQUNqRCxFQUFDLElBQUksRUFBQyxvQkFBb0IsRUFBQyxVQUFVLEVBQUMsd0JBQXdCLEVBQUM7UUFDL0QsRUFBQyxJQUFJLEVBQUMsaUJBQWlCLEVBQUMsVUFBVSxFQUFDLHdCQUF3QixFQUFDO1FBQzVELEVBQUMsSUFBSSxFQUFDLE1BQU0sRUFBQyxVQUFVLEVBQUMsd0JBQXdCLEVBQUM7UUFDakQsRUFBQyxJQUFJLEVBQUMsVUFBVSxFQUFDLFVBQVUsRUFBQywrQkFBK0IsRUFBQztRQUM1RCxFQUFDLElBQUksRUFBQyxRQUFRLEVBQUMsVUFBVSxFQUFDLG9DQUFvQyxFQUFDO1FBQy9ELEVBQUMsSUFBSSxFQUFDLFdBQVcsRUFBQyxVQUFVLEVBQUMsK0NBQStDLEVBQUM7UUFDN0UsRUFBQyxJQUFJLEVBQUMsWUFBWSxFQUFDLFVBQVUsRUFBQyxrQkFBa0IsRUFBQztRQUNqRCxFQUFDLElBQUksRUFBQyxTQUFTLEVBQUMsVUFBVSxFQUFDLGtCQUFrQixFQUFDO1FBQzlDLEVBQUMsSUFBSSxFQUFDLGFBQWEsRUFBQyxVQUFVLEVBQUMsMEJBQTBCLEVBQUM7UUFDMUQsRUFBQyxJQUFJLEVBQUMsU0FBUyxFQUFDLFVBQVUsRUFBQyxrQkFBa0IsRUFBQztRQUM5QyxFQUFDLElBQUksRUFBQyxRQUFRLEVBQUMsVUFBVSxFQUFDLGtCQUFrQixFQUFDO1FBQzdDLEVBQUMsSUFBSSxFQUFDLGFBQWEsRUFBQyxVQUFVLEVBQUMsd0JBQXdCLEVBQUM7UUFDeEQsRUFBQyxJQUFJLEVBQUMsa0JBQWtCLEVBQUMsVUFBVSxFQUFDLDhCQUE4QixFQUFDO1FBQ25FLEVBQUMsSUFBSSxFQUFDLHFCQUFxQixFQUFDLFVBQVUsRUFBQyxnQ0FBZ0MsRUFBQztRQUN4RSxFQUFDLElBQUksRUFBQyxPQUFPLEVBQUMsVUFBVSxFQUFDLHdCQUF3QixFQUFDO1FBQ2xELEVBQUMsSUFBSSxFQUFDLFlBQVksRUFBQyxVQUFVLEVBQUMsd0JBQXdCLEVBQUM7UUFDdkQsRUFBQyxJQUFJLEVBQUMsWUFBWSxFQUFDLFVBQVUsRUFBQyx3QkFBd0IsRUFBQztRQUN2RCxFQUFDLElBQUksRUFBQyxNQUFNLEVBQUMsVUFBVSxFQUFDLGtCQUFrQixFQUFDO1FBQzNDLEVBQUMsSUFBSSxFQUFDLE1BQU0sRUFBQyxVQUFVLEVBQUMsc0JBQXNCLEVBQUM7UUFDL0MsRUFBQyxJQUFJLEVBQUMsUUFBUSxFQUFDLFVBQVUsRUFBQyw0QkFBNEIsRUFBQztRQUN2RCxFQUFDLElBQUksRUFBQyxTQUFTLEVBQUMsVUFBVSxFQUFDLDBCQUEwQixFQUFDO1FBQ3RELEVBQUMsSUFBSSxFQUFDLFFBQVEsRUFBQyxVQUFVLEVBQUMsa0JBQWtCLEVBQUM7UUFDN0MsRUFBQyxJQUFJLEVBQUMsUUFBUSxFQUFDLFVBQVUsRUFBQyxrREFBa0QsRUFBQztRQUM3RSxFQUFDLElBQUksRUFBQyxNQUFNLEVBQUMsVUFBVSxFQUFDLGtCQUFrQixFQUFDO1FBQzNDLEVBQUMsSUFBSSxFQUFDLGNBQWMsRUFBQyxVQUFVLEVBQUMsd0JBQXdCLEVBQUM7UUFDekQsRUFBQyxJQUFJLEVBQUMsV0FBVyxFQUFDLFVBQVUsRUFBQyx3QkFBd0IsRUFBQztRQUN0RCxFQUFDLElBQUksRUFBQyxnQkFBZ0IsRUFBQyxVQUFVLEVBQUMsMEJBQTBCLEVBQUM7UUFDN0QsRUFBQyxJQUFJLEVBQUMsT0FBTyxFQUFDLFVBQVUsRUFBQyxFQUFFLEVBQUM7S0FDN0IsQ0FBQztJQUNjLDhCQUFVLEdBQWE7UUFDckMsVUFBVTtRQUNWLEtBQUs7UUFDTCxPQUFPO1FBQ1AsYUFBYTtRQUNiLHNCQUFzQjtRQUN0QixhQUFhO1FBQ2IsZ0JBQWdCO1FBQ2hCLFdBQVc7UUFDWCxrQkFBa0I7UUFDbEIsZUFBZTtRQUNmLFlBQVk7UUFDWixjQUFjO1FBQ2QsY0FBYztRQUNkLFlBQVk7UUFDWixvQkFBb0I7UUFDcEIsaUJBQWlCO1FBQ2pCLE1BQU07UUFDTixVQUFVO1FBQ1YsUUFBUTtRQUNSLFdBQVc7UUFDWCxZQUFZO1FBQ1osU0FBUztRQUNULGFBQWE7UUFDYixTQUFTO1FBQ1QsUUFBUTtRQUNSLGFBQWE7UUFDYixrQkFBa0I7UUFDbEIscUJBQXFCO1FBQ3JCLE9BQU87UUFDUCxZQUFZO1FBQ1osWUFBWTtRQUNaLE1BQU07UUFDTixNQUFNO1FBQ04sUUFBUTtRQUNSLFNBQVM7UUFDVCxRQUFRO1FBQ1IsUUFBUTtRQUNSLE1BQU07UUFDTixjQUFjO1FBQ2QsV0FBVztRQUNYLGdCQUFnQjtRQUNoQixPQUFPO0tBQ1IsQ0FBQztJQUNGLDBCQUFDO0NBQUEsQUF4ZEQsSUF3ZEM7U0F4ZFksbUJBQW1COzs7SUFDOUIsMEJBQTRDOztJQUM1QyxxQ0E4TEE7O0lBQ0EsK0JBOExBOztJQUNBLDJCQTJDQTs7SUFDQSwrQkEyQ0E7O0FBRUY7SUFPNkMsbURBQUk7SUFDL0MsaUNBQVksSUFBZTtlQUFHLGtCQUFNLElBQUksRUFBQyxtQkFBbUIsQ0FBQztJQUFBLENBQUM7Ozs7SUFDdkQsMENBQVE7OztJQUFmLGNBQW1CLElBQUksQ0FBQyxVQUFVLENBQUMsbUJBQW1CLENBQUMsQ0FBQSxDQUFBLENBQUM7SUFDeEQsMEVBQTBFOzs7OztJQUNuRSxvREFBa0I7Ozs7O0lBQXpCO1FBQ0UsSUFBSSxDQUFDLG9CQUFvQixFQUFFLENBQUE7UUFDM0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUN4QixDQUFDOztnQkFkSixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7b0JBQ3ZCLE1BQU0sRUFBRSxtQkFBbUIsQ0FBQyxVQUFVO29CQUN0QyxPQUFPLEVBQUUsbUJBQW1CLENBQUMsVUFBVTtvQkFDdkMsU0FBUyxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxVQUFVLENBQUMsY0FBTSxPQUFBLHVCQUF1QixFQUF2QixDQUF1QixDQUFDLEVBQUMsQ0FBQztvQkFDcEYsUUFBUSxFQUFFLHNDQUFzQztpQkFDakQ7Ozs7Z0JBbmVDLFVBQVU7O0lBNGVaLDhCQUFDO0NBQUEsQUFmRCxDQU82QyxJQUFJLEdBUWhEO1NBUlksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgT3V0cHV0LFxuICBPbkluaXQsXG4gIEFmdGVyQ29udGVudEluaXQsXG4gIE9uQ2hhbmdlcyxcbiAgQ29tcG9uZW50LFxuICBFbGVtZW50UmVmLFxuICBmb3J3YXJkUmVmXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgYmFzZSB9IGZyb20gJy4vYmFzZSc7XG5leHBvcnQgY2xhc3MgbXVsdGlzZWxlY3RNZXRhRGF0YSB7XG4gIHB1YmxpYyBzdGF0aWMgWFRZUEU6IHN0cmluZyA9ICdtdWx0aXNlbGVjdCc7XG4gIHB1YmxpYyBzdGF0aWMgUFJPUEVSVElFU09CSkVDVDogYW55ID0ge1xuICAgIFwiYWN0aW9uc1wiOiBcIk9iamVjdFwiLFxuICAgIFwiYWN0aXZlQ2hpbGRUYWJJbmRleFwiOiBcIk51bWJlclwiLFxuICAgIFwiYWN0aXZlQ291bnRlclwiOiBcIk51bWJlclwiLFxuICAgIFwiYWN0aXZlRXJyb3JcIjogXCJTdHJpbmdcIixcbiAgICBcImFjdGl2ZUVycm9yc1RwbFwiOiBcIlN0cmluZy9TdHJpbmdbXS9FeHQuWFRlbXBsYXRlXCIsXG4gICAgXCJhY3RpdmVJdGVtXCI6IFwiU3RyaW5nL051bWJlclwiLFxuICAgIFwiYWZ0ZXJCb2R5RWxcIjogXCJTdHJpbmcvQXJyYXkvRXh0LlhUZW1wbGF0ZVwiLFxuICAgIFwiYWZ0ZXJMYWJlbFRleHRUcGxcIjogXCJTdHJpbmcvQXJyYXkvRXh0LlhUZW1wbGF0ZVwiLFxuICAgIFwiYWZ0ZXJMYWJlbFRwbFwiOiBcIlN0cmluZy9BcnJheS9FeHQuWFRlbXBsYXRlXCIsXG4gICAgXCJhZnRlclN1YlRwbFwiOiBcIlN0cmluZy9BcnJheS9FeHQuWFRlbXBsYXRlXCIsXG4gICAgXCJhbGlnbk9uU2Nyb2xsXCI6IFwiQm9vbGVhblwiLFxuICAgIFwiYWxpZ25UYXJnZXRcIjogXCJTdHJpbmdcIixcbiAgICBcImFsbG93QmxhbmtcIjogXCJCb29sZWFuXCIsXG4gICAgXCJhbGxvd0ZvY3VzaW5nRGlzYWJsZWRDaGlsZHJlblwiOiBcIkJvb2xlYW5cIixcbiAgICBcImFsd2F5c09uVG9wXCI6IFwiQm9vbGVhbi9OdW1iZXJcIixcbiAgICBcImFuY2hvclwiOiBcIlN0cmluZ1wiLFxuICAgIFwiYW5jaG9yU2l6ZVwiOiBcIk51bWJlci9PYmplY3RcIixcbiAgICBcImFuaW1hdGVTaGFkb3dcIjogXCJCb29sZWFuXCIsXG4gICAgXCJhcHBlbmRPbmx5XCI6IFwiU3RyaW5nXCIsXG4gICAgXCJhcmlhQXR0cmlidXRlc1wiOiBcIk9iamVjdFwiLFxuICAgIFwiYXJpYURlc2NyaWJlZEJ5XCI6IFwiU3RyaW5nXCIsXG4gICAgXCJhcmlhRXJyb3JUZXh0XCI6IFwiU3RyaW5nXCIsXG4gICAgXCJhcmlhSGVscFwiOiBcIlN0cmluZ1wiLFxuICAgIFwiYXJpYUxhYmVsXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJhcmlhTGFiZWxsZWRCeVwiOiBcIlN0cmluZ1wiLFxuICAgIFwiYXV0b0Rlc3Ryb3lcIjogXCJCb29sZWFuXCIsXG4gICAgXCJhdXRvRWxcIjogXCJTdHJpbmcvT2JqZWN0XCIsXG4gICAgXCJhdXRvRml0RXJyb3JzXCI6IFwiQm9vbGVhblwiLFxuICAgIFwiYXV0b1JlbmRlclwiOiBcIkJvb2xlYW4vU3RyaW5nL0hUTUxFbGVtZW50L0V4dC5kb20uRWxlbWVudFwiLFxuICAgIFwiYXV0b1Njcm9sbFwiOiBcIkJvb2xlYW5cIixcbiAgICBcImF1dG9TaG93XCI6IFwiQm9vbGVhblwiLFxuICAgIFwiYmFzZUJvZHlDbHNcIjogXCJTdHJpbmdcIixcbiAgICBcImJhc2VDbHNcIjogXCJTdHJpbmdcIixcbiAgICBcImJlZm9yZUJvZHlFbFwiOiBcIlN0cmluZy9BcnJheS9FeHQuWFRlbXBsYXRlXCIsXG4gICAgXCJiZWZvcmVMYWJlbFRleHRUcGxcIjogXCJTdHJpbmcvQXJyYXkvRXh0LlhUZW1wbGF0ZVwiLFxuICAgIFwiYmVmb3JlTGFiZWxUcGxcIjogXCJTdHJpbmcvQXJyYXkvRXh0LlhUZW1wbGF0ZVwiLFxuICAgIFwiYmVmb3JlU3ViVHBsXCI6IFwiU3RyaW5nL0FycmF5L0V4dC5YVGVtcGxhdGVcIixcbiAgICBcImJpbmRcIjogXCJPYmplY3QvU3RyaW5nXCIsXG4gICAgXCJibGFua1RleHRcIjogXCJTdHJpbmdcIixcbiAgICBcImJvcmRlclwiOiBcIk51bWJlci9TdHJpbmcvQm9vbGVhblwiLFxuICAgIFwiYnViYmxlRXZlbnRzXCI6IFwiU3RyaW5nW11cIixcbiAgICBcImNoaWxkRWxzXCI6IFwiT2JqZWN0L1N0cmluZ1tdL09iamVjdFtdXCIsXG4gICAgXCJjbHNcIjogXCJTdHJpbmcvU3RyaW5nW11cIixcbiAgICBcImNvbHVtbldpZHRoXCI6IFwiTnVtYmVyXCIsXG4gICAgXCJjb21iaW5lRXJyb3JzXCI6IFwiQm9vbGVhblwiLFxuICAgIFwiY29tYmluZUxhYmVsc1wiOiBcIkJvb2xlYW5cIixcbiAgICBcImNvbXBvbmVudENsc1wiOiBcIlN0cmluZ1wiLFxuICAgIFwiY29tcG9uZW50TGF5b3V0XCI6IFwiU3RyaW5nL09iamVjdFwiLFxuICAgIFwiY29uc3RyYWluXCI6IFwiQm9vbGVhblwiLFxuICAgIFwiY29uc3RyYWludEluc2V0c1wiOiBcIk9iamVjdC9TdHJpbmdcIixcbiAgICBcImNvbnN0cmFpblRvXCI6IFwiRXh0LnV0aWwuUmVnaW9uL0V4dC5kb20uRWxlbWVudFwiLFxuICAgIFwiY29udGVudEVsXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJjb250cm9sbGVyXCI6IFwiU3RyaW5nL09iamVjdC9FeHQuYXBwLlZpZXdDb250cm9sbGVyXCIsXG4gICAgXCJkYXRhXCI6IFwiT2JqZWN0XCIsXG4gICAgXCJkZFJlb3JkZXJcIjogXCJCb29sZWFuXCIsXG4gICAgXCJkZWZhdWx0QWxpZ25cIjogXCJTdHJpbmdcIixcbiAgICBcImRlZmF1bHRGb2N1c1wiOiBcIlN0cmluZ1wiLFxuICAgIFwiZGVmYXVsdExpc3RlbmVyU2NvcGVcIjogXCJCb29sZWFuXCIsXG4gICAgXCJkZWZhdWx0c1wiOiBcIk9iamVjdC9GdW5jdGlvblwiLFxuICAgIFwiZGVmYXVsdFR5cGVcIjogXCJTdHJpbmdcIixcbiAgICBcImRlbGltaXRlclwiOiBcIlN0cmluZ1wiLFxuICAgIFwiZGV0YWNoT25SZW1vdmVcIjogXCJCb29sZWFuXCIsXG4gICAgXCJkaXNhYmxlZFwiOiBcIkJvb2xlYW5cIixcbiAgICBcImRpc2FibGVkQ2xzXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJkaXNwbGF5RmllbGRcIjogXCJTdHJpbmdcIixcbiAgICBcImRvY2tcIjogXCIndG9wJy8nYm90dG9tJy8nbGVmdCcvJ3JpZ2h0J1wiLFxuICAgIFwiZHJhZ2dhYmxlXCI6IFwiQm9vbGVhbi9PYmplY3RcIixcbiAgICBcImRyYWdHcm91cFwiOiBcIlN0cmluZ1wiLFxuICAgIFwiZHJhZ1RleHRcIjogXCJTdHJpbmdcIixcbiAgICBcImRyb3BHcm91cFwiOiBcIlN0cmluZ1wiLFxuICAgIFwiZXJyb3JNc2dDbHNcIjogXCJTdHJpbmdcIixcbiAgICBcImZpZWxkQm9keUNsc1wiOiBcIlN0cmluZ1wiLFxuICAgIFwiZmllbGREZWZhdWx0c1wiOiBcIk9iamVjdFwiLFxuICAgIFwiZmllbGRMYWJlbFwiOiBcIlN0cmluZ1wiLFxuICAgIFwiZml4ZWRcIjogXCJCb29sZWFuXCIsXG4gICAgXCJmbGV4XCI6IFwiTnVtYmVyXCIsXG4gICAgXCJmbG9hdGluZ1wiOiBcIkJvb2xlYW5cIixcbiAgICBcImZvY3VzYWJsZUNvbnRhaW5lclwiOiBcIkJvb2xlYW5cIixcbiAgICBcImZvY3VzQ2xzXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJmb2N1c09uVG9Gcm9udFwiOiBcIkJvb2xlYW5cIixcbiAgICBcImZvcm1CaW5kXCI6IFwiQm9vbGVhblwiLFxuICAgIFwiZm9ybUl0ZW1DbHNcIjogXCJTdHJpbmdcIixcbiAgICBcImZyYW1lXCI6IFwiQm9vbGVhblwiLFxuICAgIFwiaGVpZ2h0XCI6IFwiTnVtYmVyfFN0cmluZ1wiLFxuICAgIFwiaGlkZGVuXCI6IFwiQm9vbGVhblwiLFxuICAgIFwiaGlkZUVtcHR5TGFiZWxcIjogXCJCb29sZWFuXCIsXG4gICAgXCJoaWRlTGFiZWxcIjogXCJCb29sZWFuXCIsXG4gICAgXCJoaWRlTW9kZVwiOiBcIlN0cmluZ1wiLFxuICAgIFwiaHRtbFwiOiBcIlN0cmluZy9PYmplY3RcIixcbiAgICBcImlkXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJpbmFjdGl2ZUNoaWxkVGFiSW5kZXhcIjogXCJOdW1iZXJcIixcbiAgICBcImludmFsaWRDbHNcIjogXCJTdHJpbmdcIixcbiAgICBcIml0ZW1JZFwiOiBcIlN0cmluZ1wiLFxuICAgIFwiaXRlbXNcIjogXCJPYmplY3QvT2JqZWN0W11cIixcbiAgICBcImtleU1hcFwiOiBcIk9iamVjdFwiLFxuICAgIFwia2V5TWFwRW5hYmxlZFwiOiBcIkJvb2xlYW5cIixcbiAgICBcImtleU1hcFRhcmdldFwiOiBcIlN0cmluZ1wiLFxuICAgIFwibGFiZWxhYmxlUmVuZGVyVHBsXCI6IFwiU3RyaW5nL1N0cmluZ1tdL0V4dC5YVGVtcGxhdGVcIixcbiAgICBcImxhYmVsQWxpZ25cIjogXCJTdHJpbmdcIixcbiAgICBcImxhYmVsQXR0clRwbFwiOiBcIlN0cmluZy9BcnJheS9FeHQuWFRlbXBsYXRlXCIsXG4gICAgXCJsYWJlbENsc1wiOiBcIlN0cmluZ1wiLFxuICAgIFwibGFiZWxDbHNFeHRyYVwiOiBcIlN0cmluZ1wiLFxuICAgIFwibGFiZWxDb25uZWN0b3JcIjogXCJTdHJpbmdcIixcbiAgICBcImxhYmVsUGFkXCI6IFwiTnVtYmVyXCIsXG4gICAgXCJsYWJlbFNlcGFyYXRvclwiOiBcIlN0cmluZ1wiLFxuICAgIFwibGFiZWxTdHlsZVwiOiBcIlN0cmluZ1wiLFxuICAgIFwibGFiZWxXaWR0aFwiOiBcIk51bWJlclwiLFxuICAgIFwibGF5b3V0XCI6IFwiRXh0LmVudW1zLkxheW91dC9PYmplY3RcIixcbiAgICBcImxpcXVpZExheW91dFwiOiBcIkJvb2xlYW5cIixcbiAgICBcImxpc3RDb25maWdcIjogXCJPYmplY3RcIixcbiAgICBcImxpc3RlbmVyc1wiOiBcIk9iamVjdFwiLFxuICAgIFwibGl2ZURyYWdcIjogXCJCb29sZWFuXCIsXG4gICAgXCJsb2FkZXJcIjogXCJFeHQuQ29tcG9uZW50TG9hZGVyL09iamVjdFwiLFxuICAgIFwibWFyZ2luXCI6IFwiTnVtYmVyL1N0cmluZ1wiLFxuICAgIFwibWFza0RlZmF1bHRzXCI6IFwiT2JqZWN0XCIsXG4gICAgXCJtYXNrRWxlbWVudFwiOiBcIlN0cmluZ1wiLFxuICAgIFwibWF4SGVpZ2h0XCI6IFwiTnVtYmVyXCIsXG4gICAgXCJtYXhTZWxlY3Rpb25zXCI6IFwiTnVtYmVyXCIsXG4gICAgXCJtYXhTZWxlY3Rpb25zVGV4dFwiOiBcIlN0cmluZ1wiLFxuICAgIFwibWF4V2lkdGhcIjogXCJOdW1iZXJcIixcbiAgICBcIm1pbkhlaWdodFwiOiBcIk51bWJlclwiLFxuICAgIFwibWluU2VsZWN0aW9uc1wiOiBcIk51bWJlclwiLFxuICAgIFwibWluU2VsZWN0aW9uc1RleHRcIjogXCJTdHJpbmdcIixcbiAgICBcIm1pbldpZHRoXCI6IFwiTnVtYmVyXCIsXG4gICAgXCJtb2RhbFwiOiBcIkJvb2xlYW5cIixcbiAgICBcIm1vZGVsVmFsaWRhdGlvblwiOiBcIkJvb2xlYW5cIixcbiAgICBcIm1zZ1RhcmdldFwiOiBcIlN0cmluZ1wiLFxuICAgIFwibmFtZVwiOiBcIlN0cmluZ1wiLFxuICAgIFwibmFtZWFibGVcIjogXCJCb29sZWFuXCIsXG4gICAgXCJuYW1lSG9sZGVyXCI6IFwiQm9vbGVhblwiLFxuICAgIFwib3ZlckNsc1wiOiBcIlN0cmluZ1wiLFxuICAgIFwib3ZlcmZsb3dYXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJvdmVyZmxvd1lcIjogXCJTdHJpbmdcIixcbiAgICBcInBhZGRpbmdcIjogXCJOdW1iZXIvU3RyaW5nXCIsXG4gICAgXCJwYWdlU2l6ZVwiOiBcIk51bWJlclwiLFxuICAgIFwicGx1Z2luc1wiOiBcIkFycmF5L0V4dC5lbnVtcy5QbHVnaW4vT2JqZWN0L0V4dC5wbHVnaW4uQWJzdHJhY3RcIixcbiAgICBcInByZXZlbnRNYXJrXCI6IFwiQm9vbGVhblwiLFxuICAgIFwicHVibGlzaGVzXCI6IFwiU3RyaW5nL1N0cmluZ1tdL09iamVjdFwiLFxuICAgIFwicmVmZXJlbmNlXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJyZWZlcmVuY2VIb2xkZXJcIjogXCJCb29sZWFuXCIsXG4gICAgXCJyZWdpb25cIjogXCInbm9ydGgnLydzb3V0aCcvJ2Vhc3QnLyd3ZXN0Jy8nY2VudGVyJ1wiLFxuICAgIFwicmVuZGVyQ29uZmlnXCI6IFwiT2JqZWN0XCIsXG4gICAgXCJyZW5kZXJEYXRhXCI6IFwiT2JqZWN0XCIsXG4gICAgXCJyZW5kZXJTZWxlY3RvcnNcIjogXCJPYmplY3RcIixcbiAgICBcInJlbmRlclRvXCI6IFwiU3RyaW5nL0hUTUxFbGVtZW50L0V4dC5kb20uRWxlbWVudFwiLFxuICAgIFwicmVuZGVyVHBsXCI6IFwiRXh0LlhUZW1wbGF0ZS9TdHJpbmcvU3RyaW5nW11cIixcbiAgICBcInJlc2V0Rm9jdXNQb3NpdGlvblwiOiBcIkJvb2xlYW5cIixcbiAgICBcInJlc2l6YWJsZVwiOiBcIkJvb2xlYW4vT2JqZWN0XCIsXG4gICAgXCJyZXNpemVIYW5kbGVzXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJzYXZlRGVsYXlcIjogXCJOdW1iZXJcIixcbiAgICBcInNjcm9sbGFibGVcIjogXCJCb29sZWFuL1N0cmluZy9PYmplY3RcIixcbiAgICBcInNlc3Npb25cIjogXCJCb29sZWFuL09iamVjdC9FeHQuZGF0YS5TZXNzaW9uXCIsXG4gICAgXCJzaGFkb3dcIjogXCJTdHJpbmcvQm9vbGVhblwiLFxuICAgIFwic2hhZG93T2Zmc2V0XCI6IFwiTnVtYmVyXCIsXG4gICAgXCJzaGFyZWFibGVOYW1lXCI6IFwiQm9vbGVhblwiLFxuICAgIFwic2hpbVwiOiBcIkJvb2xlYW5cIixcbiAgICBcInNocmlua1dyYXBcIjogXCJCb29sZWFuL051bWJlclwiLFxuICAgIFwic3RhdGVFdmVudHNcIjogXCJTdHJpbmdbXVwiLFxuICAgIFwic3RhdGVmdWxcIjogXCJCb29sZWFuL09iamVjdFwiLFxuICAgIFwic3RhdGVJZFwiOiBcIlN0cmluZ1wiLFxuICAgIFwic3RvcmVcIjogXCJFeHQuZGF0YS5TdG9yZS9BcnJheVwiLFxuICAgIFwic3R5bGVcIjogXCJTdHJpbmcvT2JqZWN0XCIsXG4gICAgXCJzdWJtaXRWYWx1ZVwiOiBcIkJvb2xlYW5cIixcbiAgICBcInN1c3BlbmRMYXlvdXRcIjogXCJCb29sZWFuXCIsXG4gICAgXCJ0YWJHdWFyZFwiOiBcIkJvb2xlYW5cIixcbiAgICBcInRhYkluZGV4XCI6IFwiTnVtYmVyXCIsXG4gICAgXCJ0YmFyXCI6IFwiT2JqZWN0L0FycmF5XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlN0cmluZ1wiLFxuICAgIFwidG9Gcm9udE9uU2hvd1wiOiBcIkJvb2xlYW5cIixcbiAgICBcInRvdWNoQWN0aW9uXCI6IFwiT2JqZWN0XCIsXG4gICAgXCJ0cGxcIjogXCJFeHQuWFRlbXBsYXRlL0V4dC5UZW1wbGF0ZS9TdHJpbmcvU3RyaW5nW11cIixcbiAgICBcInRwbFdyaXRlTW9kZVwiOiBcIlN0cmluZ1wiLFxuICAgIFwidHdvV2F5QmluZGFibGVcIjogXCJTdHJpbmcvU3RyaW5nW10vT2JqZWN0XCIsXG4gICAgXCJ1aVwiOiBcIlN0cmluZ1wiLFxuICAgIFwidWlDbHNcIjogXCJTdHJpbmdbXVwiLFxuICAgIFwidXNlckNsc1wiOiBcIlN0cmluZy9TdHJpbmdbXVwiLFxuICAgIFwidmFsaWRhdGVPbkNoYW5nZVwiOiBcIkJvb2xlYW5cIixcbiAgICBcInZhbGlkYXRpb25cIjogXCJCb29sZWFuL1N0cmluZ1wiLFxuICAgIFwidmFsaWRhdGlvbkZpZWxkXCI6IFwiRXh0LmRhdGEuRmllbGRcIixcbiAgICBcInZhbHVlXCI6IFwiT2JqZWN0XCIsXG4gICAgXCJ2YWx1ZUZpZWxkXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJ2YWx1ZVB1Ymxpc2hFdmVudFwiOiBcIlN0cmluZ1tdL1N0cmluZ1wiLFxuICAgIFwidmlld01vZGVsXCI6IFwiU3RyaW5nL09iamVjdC9FeHQuYXBwLlZpZXdNb2RlbFwiLFxuICAgIFwid2VpZ2h0XCI6IFwiTnVtYmVyXCIsXG4gICAgXCJ3aWR0aFwiOiBcIk51bWJlcnxTdHJpbmdcIixcbiAgICBcInh0eXBlXCI6IFwiRXh0LmVudW1zLldpZGdldFwiLFxuICAgIFwicGxhdGZvcm1Db25maWdcIjogXCJPYmplY3RcIixcbiAgICBcImZpdFRvUGFyZW50XCI6IFwiQm9vbGVhblwiLFxuICAgIFwiY29uZmlnXCI6IFwiT2JqZWN0XCIsXG59O1xuICBwdWJsaWMgc3RhdGljIFBST1BFUlRJRVM6IHN0cmluZ1tdID0gW1xuICAgICdhY3Rpb25zJyxcbiAgICAnYWN0aXZlQ2hpbGRUYWJJbmRleCcsXG4gICAgJ2FjdGl2ZUNvdW50ZXInLFxuICAgICdhY3RpdmVFcnJvcicsXG4gICAgJ2FjdGl2ZUVycm9yc1RwbCcsXG4gICAgJ2FjdGl2ZUl0ZW0nLFxuICAgICdhZnRlckJvZHlFbCcsXG4gICAgJ2FmdGVyTGFiZWxUZXh0VHBsJyxcbiAgICAnYWZ0ZXJMYWJlbFRwbCcsXG4gICAgJ2FmdGVyU3ViVHBsJyxcbiAgICAnYWxpZ25PblNjcm9sbCcsXG4gICAgJ2FsaWduVGFyZ2V0JyxcbiAgICAnYWxsb3dCbGFuaycsXG4gICAgJ2FsbG93Rm9jdXNpbmdEaXNhYmxlZENoaWxkcmVuJyxcbiAgICAnYWx3YXlzT25Ub3AnLFxuICAgICdhbmNob3InLFxuICAgICdhbmNob3JTaXplJyxcbiAgICAnYW5pbWF0ZVNoYWRvdycsXG4gICAgJ2FwcGVuZE9ubHknLFxuICAgICdhcmlhQXR0cmlidXRlcycsXG4gICAgJ2FyaWFEZXNjcmliZWRCeScsXG4gICAgJ2FyaWFFcnJvclRleHQnLFxuICAgICdhcmlhSGVscCcsXG4gICAgJ2FyaWFMYWJlbCcsXG4gICAgJ2FyaWFMYWJlbGxlZEJ5JyxcbiAgICAnYXV0b0Rlc3Ryb3knLFxuICAgICdhdXRvRWwnLFxuICAgICdhdXRvRml0RXJyb3JzJyxcbiAgICAnYXV0b1JlbmRlcicsXG4gICAgJ2F1dG9TY3JvbGwnLFxuICAgICdhdXRvU2hvdycsXG4gICAgJ2Jhc2VCb2R5Q2xzJyxcbiAgICAnYmFzZUNscycsXG4gICAgJ2JlZm9yZUJvZHlFbCcsXG4gICAgJ2JlZm9yZUxhYmVsVGV4dFRwbCcsXG4gICAgJ2JlZm9yZUxhYmVsVHBsJyxcbiAgICAnYmVmb3JlU3ViVHBsJyxcbiAgICAnYmluZCcsXG4gICAgJ2JsYW5rVGV4dCcsXG4gICAgJ2JvcmRlcicsXG4gICAgJ2J1YmJsZUV2ZW50cycsXG4gICAgJ2NoaWxkRWxzJyxcbiAgICAnY2xzJyxcbiAgICAnY29sdW1uV2lkdGgnLFxuICAgICdjb21iaW5lRXJyb3JzJyxcbiAgICAnY29tYmluZUxhYmVscycsXG4gICAgJ2NvbXBvbmVudENscycsXG4gICAgJ2NvbXBvbmVudExheW91dCcsXG4gICAgJ2NvbnN0cmFpbicsXG4gICAgJ2NvbnN0cmFpbnRJbnNldHMnLFxuICAgICdjb25zdHJhaW5UbycsXG4gICAgJ2NvbnRlbnRFbCcsXG4gICAgJ2NvbnRyb2xsZXInLFxuICAgICdkYXRhJyxcbiAgICAnZGRSZW9yZGVyJyxcbiAgICAnZGVmYXVsdEFsaWduJyxcbiAgICAnZGVmYXVsdEZvY3VzJyxcbiAgICAnZGVmYXVsdExpc3RlbmVyU2NvcGUnLFxuICAgICdkZWZhdWx0cycsXG4gICAgJ2RlZmF1bHRUeXBlJyxcbiAgICAnZGVsaW1pdGVyJyxcbiAgICAnZGV0YWNoT25SZW1vdmUnLFxuICAgICdkaXNhYmxlZCcsXG4gICAgJ2Rpc2FibGVkQ2xzJyxcbiAgICAnZGlzcGxheUZpZWxkJyxcbiAgICAnZG9jaycsXG4gICAgJ2RyYWdnYWJsZScsXG4gICAgJ2RyYWdHcm91cCcsXG4gICAgJ2RyYWdUZXh0JyxcbiAgICAnZHJvcEdyb3VwJyxcbiAgICAnZXJyb3JNc2dDbHMnLFxuICAgICdmaWVsZEJvZHlDbHMnLFxuICAgICdmaWVsZERlZmF1bHRzJyxcbiAgICAnZmllbGRMYWJlbCcsXG4gICAgJ2ZpeGVkJyxcbiAgICAnZmxleCcsXG4gICAgJ2Zsb2F0aW5nJyxcbiAgICAnZm9jdXNhYmxlQ29udGFpbmVyJyxcbiAgICAnZm9jdXNDbHMnLFxuICAgICdmb2N1c09uVG9Gcm9udCcsXG4gICAgJ2Zvcm1CaW5kJyxcbiAgICAnZm9ybUl0ZW1DbHMnLFxuICAgICdmcmFtZScsXG4gICAgJ2hlaWdodCcsXG4gICAgJ2hpZGRlbicsXG4gICAgJ2hpZGVFbXB0eUxhYmVsJyxcbiAgICAnaGlkZUxhYmVsJyxcbiAgICAnaGlkZU1vZGUnLFxuICAgICdodG1sJyxcbiAgICAnaWQnLFxuICAgICdpbmFjdGl2ZUNoaWxkVGFiSW5kZXgnLFxuICAgICdpbnZhbGlkQ2xzJyxcbiAgICAnaXRlbUlkJyxcbiAgICAnaXRlbXMnLFxuICAgICdrZXlNYXAnLFxuICAgICdrZXlNYXBFbmFibGVkJyxcbiAgICAna2V5TWFwVGFyZ2V0JyxcbiAgICAnbGFiZWxhYmxlUmVuZGVyVHBsJyxcbiAgICAnbGFiZWxBbGlnbicsXG4gICAgJ2xhYmVsQXR0clRwbCcsXG4gICAgJ2xhYmVsQ2xzJyxcbiAgICAnbGFiZWxDbHNFeHRyYScsXG4gICAgJ2xhYmVsQ29ubmVjdG9yJyxcbiAgICAnbGFiZWxQYWQnLFxuICAgICdsYWJlbFNlcGFyYXRvcicsXG4gICAgJ2xhYmVsU3R5bGUnLFxuICAgICdsYWJlbFdpZHRoJyxcbiAgICAnbGF5b3V0JyxcbiAgICAnbGlxdWlkTGF5b3V0JyxcbiAgICAnbGlzdENvbmZpZycsXG4gICAgJ2xpc3RlbmVycycsXG4gICAgJ2xpdmVEcmFnJyxcbiAgICAnbG9hZGVyJyxcbiAgICAnbWFyZ2luJyxcbiAgICAnbWFza0RlZmF1bHRzJyxcbiAgICAnbWFza0VsZW1lbnQnLFxuICAgICdtYXhIZWlnaHQnLFxuICAgICdtYXhTZWxlY3Rpb25zJyxcbiAgICAnbWF4U2VsZWN0aW9uc1RleHQnLFxuICAgICdtYXhXaWR0aCcsXG4gICAgJ21pbkhlaWdodCcsXG4gICAgJ21pblNlbGVjdGlvbnMnLFxuICAgICdtaW5TZWxlY3Rpb25zVGV4dCcsXG4gICAgJ21pbldpZHRoJyxcbiAgICAnbW9kYWwnLFxuICAgICdtb2RlbFZhbGlkYXRpb24nLFxuICAgICdtc2dUYXJnZXQnLFxuICAgICduYW1lJyxcbiAgICAnbmFtZWFibGUnLFxuICAgICduYW1lSG9sZGVyJyxcbiAgICAnb3ZlckNscycsXG4gICAgJ292ZXJmbG93WCcsXG4gICAgJ292ZXJmbG93WScsXG4gICAgJ3BhZGRpbmcnLFxuICAgICdwYWdlU2l6ZScsXG4gICAgJ3BsdWdpbnMnLFxuICAgICdwcmV2ZW50TWFyaycsXG4gICAgJ3B1Ymxpc2hlcycsXG4gICAgJ3JlZmVyZW5jZScsXG4gICAgJ3JlZmVyZW5jZUhvbGRlcicsXG4gICAgJ3JlZ2lvbicsXG4gICAgJ3JlbmRlckNvbmZpZycsXG4gICAgJ3JlbmRlckRhdGEnLFxuICAgICdyZW5kZXJTZWxlY3RvcnMnLFxuICAgICdyZW5kZXJUbycsXG4gICAgJ3JlbmRlclRwbCcsXG4gICAgJ3Jlc2V0Rm9jdXNQb3NpdGlvbicsXG4gICAgJ3Jlc2l6YWJsZScsXG4gICAgJ3Jlc2l6ZUhhbmRsZXMnLFxuICAgICdzYXZlRGVsYXknLFxuICAgICdzY3JvbGxhYmxlJyxcbiAgICAnc2Vzc2lvbicsXG4gICAgJ3NoYWRvdycsXG4gICAgJ3NoYWRvd09mZnNldCcsXG4gICAgJ3NoYXJlYWJsZU5hbWUnLFxuICAgICdzaGltJyxcbiAgICAnc2hyaW5rV3JhcCcsXG4gICAgJ3N0YXRlRXZlbnRzJyxcbiAgICAnc3RhdGVmdWwnLFxuICAgICdzdGF0ZUlkJyxcbiAgICAnc3RvcmUnLFxuICAgICdzdHlsZScsXG4gICAgJ3N1Ym1pdFZhbHVlJyxcbiAgICAnc3VzcGVuZExheW91dCcsXG4gICAgJ3RhYkd1YXJkJyxcbiAgICAndGFiSW5kZXgnLFxuICAgICd0YmFyJyxcbiAgICAndGl0bGUnLFxuICAgICd0b0Zyb250T25TaG93JyxcbiAgICAndG91Y2hBY3Rpb24nLFxuICAgICd0cGwnLFxuICAgICd0cGxXcml0ZU1vZGUnLFxuICAgICd0d29XYXlCaW5kYWJsZScsXG4gICAgJ3VpJyxcbiAgICAndWlDbHMnLFxuICAgICd1c2VyQ2xzJyxcbiAgICAndmFsaWRhdGVPbkNoYW5nZScsXG4gICAgJ3ZhbGlkYXRpb24nLFxuICAgICd2YWxpZGF0aW9uRmllbGQnLFxuICAgICd2YWx1ZScsXG4gICAgJ3ZhbHVlRmllbGQnLFxuICAgICd2YWx1ZVB1Ymxpc2hFdmVudCcsXG4gICAgJ3ZpZXdNb2RlbCcsXG4gICAgJ3dlaWdodCcsXG4gICAgJ3dpZHRoJyxcbiAgICAneHR5cGUnLFxuICAgICdwbGF0Zm9ybUNvbmZpZycsXG4gICAgJ2ZpdFRvUGFyZW50JyxcbiAgICAnY29uZmlnJ1xuXTtcbiAgcHVibGljIHN0YXRpYyBFVkVOVFM6IGFueVtdID0gW1xuXHRcdHtuYW1lOidhY3RpdmF0ZScscGFyYW1ldGVyczonbXVsdGlzZWxlY3RmaWVsZCd9LFxuXHRcdHtuYW1lOidhZGQnLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQsY29tcG9uZW50LGluZGV4J30sXG5cdFx0e25hbWU6J2FkZGVkJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkLGNvbnRhaW5lcixwb3MnfSxcblx0XHR7bmFtZTonYWZ0ZXJsYXlvdXQnLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQsbGF5b3V0J30sXG5cdFx0e25hbWU6J2FmdGVybGF5b3V0YW5pbWF0aW9uJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkJ30sXG5cdFx0e25hbWU6J2FmdGVycmVuZGVyJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkJ30sXG5cdFx0e25hbWU6J2JlZm9yZWFjdGl2YXRlJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkJ30sXG5cdFx0e25hbWU6J2JlZm9yZWFkZCcscGFyYW1ldGVyczonbXVsdGlzZWxlY3RmaWVsZCxjb21wb25lbnQsaW5kZXgnfSxcblx0XHR7bmFtZTonYmVmb3JlZGVhY3RpdmF0ZScscGFyYW1ldGVyczonbXVsdGlzZWxlY3RmaWVsZCd9LFxuXHRcdHtuYW1lOidiZWZvcmVkZXN0cm95JyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkJ30sXG5cdFx0e25hbWU6J2JlZm9yZWhpZGUnLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQnfSxcblx0XHR7bmFtZTonYmVmb3JlcmVtb3ZlJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkLGNvbXBvbmVudCd9LFxuXHRcdHtuYW1lOidiZWZvcmVyZW5kZXInLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQnfSxcblx0XHR7bmFtZTonYmVmb3Jlc2hvdycscGFyYW1ldGVyczonbXVsdGlzZWxlY3RmaWVsZCd9LFxuXHRcdHtuYW1lOidiZWZvcmVzdGF0ZXJlc3RvcmUnLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQsc3RhdGUnfSxcblx0XHR7bmFtZTonYmVmb3Jlc3RhdGVzYXZlJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkLHN0YXRlJ30sXG5cdFx0e25hbWU6J2JsdXInLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQsZXZlbnQnfSxcblx0XHR7bmFtZTonYm94cmVhZHknLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQsd2lkdGgsaGVpZ2h0J30sXG5cdFx0e25hbWU6J2NoYW5nZScscGFyYW1ldGVyczonbXVsdGlzZWxlY3RmaWVsZCxuZXdWYWx1ZSxvbGRWYWx1ZSd9LFxuXHRcdHtuYW1lOidjaGlsZG1vdmUnLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQsY29tcG9uZW50LHByZXZJbmRleCxuZXdJbmRleCd9LFxuXHRcdHtuYW1lOidkZWFjdGl2YXRlJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkJ30sXG5cdFx0e25hbWU6J2Rlc3Ryb3knLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQnfSxcblx0XHR7bmFtZTonZGlydHljaGFuZ2UnLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQsaXNEaXJ0eSd9LFxuXHRcdHtuYW1lOidkaXNhYmxlJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkJ30sXG5cdFx0e25hbWU6J2VuYWJsZScscGFyYW1ldGVyczonbXVsdGlzZWxlY3RmaWVsZCd9LFxuXHRcdHtuYW1lOidlcnJvcmNoYW5nZScscGFyYW1ldGVyczonbXVsdGlzZWxlY3RmaWVsZCxlcnJvcid9LFxuXHRcdHtuYW1lOidmaWVsZGVycm9yY2hhbmdlJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkLGZpZWxkLGVycm9yJ30sXG5cdFx0e25hbWU6J2ZpZWxkdmFsaWRpdHljaGFuZ2UnLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQsZmllbGQsaXNWYWxpZCd9LFxuXHRcdHtuYW1lOidmb2N1cycscGFyYW1ldGVyczonbXVsdGlzZWxlY3RmaWVsZCxldmVudCd9LFxuXHRcdHtuYW1lOidmb2N1c2VudGVyJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkLGV2ZW50J30sXG5cdFx0e25hbWU6J2ZvY3VzbGVhdmUnLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQsZXZlbnQnfSxcblx0XHR7bmFtZTonaGlkZScscGFyYW1ldGVyczonbXVsdGlzZWxlY3RmaWVsZCd9LFxuXHRcdHtuYW1lOidtb3ZlJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkLHgseSd9LFxuXHRcdHtuYW1lOidyZW1vdmUnLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQsY29tcG9uZW50J30sXG5cdFx0e25hbWU6J3JlbW92ZWQnLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQsb3duZXJDdCd9LFxuXHRcdHtuYW1lOidyZW5kZXInLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQnfSxcblx0XHR7bmFtZToncmVzaXplJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkLHdpZHRoLGhlaWdodCxvbGRXaWR0aCxvbGRIZWlnaHQnfSxcblx0XHR7bmFtZTonc2hvdycscGFyYW1ldGVyczonbXVsdGlzZWxlY3RmaWVsZCd9LFxuXHRcdHtuYW1lOidzdGF0ZXJlc3RvcmUnLHBhcmFtZXRlcnM6J211bHRpc2VsZWN0ZmllbGQsc3RhdGUnfSxcblx0XHR7bmFtZTonc3RhdGVzYXZlJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkLHN0YXRlJ30sXG5cdFx0e25hbWU6J3ZhbGlkaXR5Y2hhbmdlJyxwYXJhbWV0ZXJzOidtdWx0aXNlbGVjdGZpZWxkLGlzVmFsaWQnfSxcblx0XHR7bmFtZToncmVhZHknLHBhcmFtZXRlcnM6Jyd9XG5dO1xuICBwdWJsaWMgc3RhdGljIEVWRU5UTkFNRVM6IHN0cmluZ1tdID0gW1xuXHRcdCdhY3RpdmF0ZScsXG5cdFx0J2FkZCcsXG5cdFx0J2FkZGVkJyxcblx0XHQnYWZ0ZXJsYXlvdXQnLFxuXHRcdCdhZnRlcmxheW91dGFuaW1hdGlvbicsXG5cdFx0J2FmdGVycmVuZGVyJyxcblx0XHQnYmVmb3JlYWN0aXZhdGUnLFxuXHRcdCdiZWZvcmVhZGQnLFxuXHRcdCdiZWZvcmVkZWFjdGl2YXRlJyxcblx0XHQnYmVmb3JlZGVzdHJveScsXG5cdFx0J2JlZm9yZWhpZGUnLFxuXHRcdCdiZWZvcmVyZW1vdmUnLFxuXHRcdCdiZWZvcmVyZW5kZXInLFxuXHRcdCdiZWZvcmVzaG93Jyxcblx0XHQnYmVmb3Jlc3RhdGVyZXN0b3JlJyxcblx0XHQnYmVmb3Jlc3RhdGVzYXZlJyxcblx0XHQnYmx1cicsXG5cdFx0J2JveHJlYWR5Jyxcblx0XHQnY2hhbmdlJyxcblx0XHQnY2hpbGRtb3ZlJyxcblx0XHQnZGVhY3RpdmF0ZScsXG5cdFx0J2Rlc3Ryb3knLFxuXHRcdCdkaXJ0eWNoYW5nZScsXG5cdFx0J2Rpc2FibGUnLFxuXHRcdCdlbmFibGUnLFxuXHRcdCdlcnJvcmNoYW5nZScsXG5cdFx0J2ZpZWxkZXJyb3JjaGFuZ2UnLFxuXHRcdCdmaWVsZHZhbGlkaXR5Y2hhbmdlJyxcblx0XHQnZm9jdXMnLFxuXHRcdCdmb2N1c2VudGVyJyxcblx0XHQnZm9jdXNsZWF2ZScsXG5cdFx0J2hpZGUnLFxuXHRcdCdtb3ZlJyxcblx0XHQncmVtb3ZlJyxcblx0XHQncmVtb3ZlZCcsXG5cdFx0J3JlbmRlcicsXG5cdFx0J3Jlc2l6ZScsXG5cdFx0J3Nob3cnLFxuXHRcdCdzdGF0ZXJlc3RvcmUnLFxuXHRcdCdzdGF0ZXNhdmUnLFxuXHRcdCd2YWxpZGl0eWNoYW5nZScsXG5cdFx0J3JlYWR5J1xuXTtcbn1cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ211bHRpc2VsZWN0JywgXG4gIGlucHV0czogbXVsdGlzZWxlY3RNZXRhRGF0YS5QUk9QRVJUSUVTLFxuICBvdXRwdXRzOiBtdWx0aXNlbGVjdE1ldGFEYXRhLkVWRU5UTkFNRVMsXG4gIHByb3ZpZGVyczogW3twcm92aWRlOiBiYXNlLCB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBFeHRNdWx0aXNlbGVjdENvbXBvbmVudCl9XSxcbiAgdGVtcGxhdGU6ICc8bmctdGVtcGxhdGUgI2R5bmFtaWM+PC9uZy10ZW1wbGF0ZT4nXG59KVxuZXhwb3J0IGNsYXNzIEV4dE11bHRpc2VsZWN0Q29tcG9uZW50IGV4dGVuZHMgYmFzZSBpbXBsZW1lbnRzIE9uSW5pdCxBZnRlckNvbnRlbnRJbml0LE9uQ2hhbmdlcyB7XG4gIGNvbnN0cnVjdG9yKGVSZWY6RWxlbWVudFJlZikge3N1cGVyKGVSZWYsbXVsdGlzZWxlY3RNZXRhRGF0YSl9XG4gIHB1YmxpYyBuZ09uSW5pdCgpIHt0aGlzLmJhc2VPbkluaXQobXVsdGlzZWxlY3RNZXRhRGF0YSl9XG4gIC8vcHVibGljIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHt0aGlzLmJhc2VPbkNoYW5nZXMoY2hhbmdlcyl9XG4gIHB1YmxpYyBuZ0FmdGVyQ29udGVudEluaXQoKSB7XG4gICAgdGhpcy5iYXNlQWZ0ZXJDb250ZW50SW5pdCgpXG4gICAgdGhpc1sncmVhZHknXS5lbWl0KHRoaXMpXG4gICAgfVxufSJdfQ==