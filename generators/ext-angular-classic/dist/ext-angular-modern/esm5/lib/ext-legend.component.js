/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
var legendMetaData = /** @class */ (function () {
    function legendMetaData() {
    }
    legendMetaData.XTYPE = 'legend';
    legendMetaData.PROPERTIESOBJECT = {
        "activeCounter": "Number",
        "alignOnScroll": "Boolean",
        "alignTarget": "String",
        "alwaysOnTop": "Boolean/Number",
        "anchor": "String",
        "animateShadow": "Boolean",
        "ariaAttributes": "Object",
        "ariaDescribedBy": "String",
        "ariaLabel": "String",
        "ariaLabelledBy": "String",
        "autoEl": "String/Object",
        "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
        "autoScroll": "Boolean",
        "autoShow": "Boolean",
        "baseCls": "String",
        "bind": "Object/String",
        "blockRefresh": "Boolean",
        "border": "Number/String/Boolean",
        "childEls": "Object/String[]/Object[]",
        "cls": "String/String[]",
        "columnWidth": "Number",
        "componentCls": "String",
        "componentLayout": "String/Object",
        "constrain": "Boolean",
        "constraintInsets": "Object/String",
        "constrainTo": "Ext.util.Region/Ext.dom.Element",
        "contentEl": "String",
        "controller": "String/Object/Ext.app.ViewController",
        "data": "Object",
        "defaultAlign": "String",
        "defaultListenerScope": "Boolean",
        "deferEmptyText": "Boolean",
        "deferInitialRefresh": "Boolean",
        "disabled": "Boolean",
        "disabledCls": "String",
        "disableSelection": "Boolean",
        "dock": "any",
        "docked": "String",
        "draggable": "Boolean/Object",
        "emptyText": "String",
        "fixed": "Boolean",
        "flex": "Number",
        "floating": "Boolean",
        "focusCls": "String",
        "focusOnToFront": "Boolean",
        "formBind": "Boolean",
        "frame": "Boolean",
        "height": "Number|String",
        "hidden": "Boolean",
        "hideMode": "String",
        "html": "String/Object",
        "id": "String",
        "itemCls": "String",
        "itemId": "String",
        "itemSelector": "String",
        "itemTpl": "String/String[]/Ext.XTemplate",
        "keyMap": "Object",
        "keyMapEnabled": "Boolean",
        "keyMapTarget": "String",
        "liquidLayout": "Boolean",
        "listeners": "Object",
        "liveDrag": "Boolean",
        "loader": "Ext.ComponentLoader/Object",
        "loadingCls": "String",
        "loadingHeight": "Number",
        "loadingText": "String",
        "loadingUseMsg": "Boolean",
        "loadMask": "Boolean/Object",
        "margin": "Number/String",
        "maskDefaults": "Object",
        "maskElement": "String",
        "maxHeight": "Number",
        "maxWidth": "Number",
        "minHeight": "Number",
        "minWidth": "Number",
        "modal": "Boolean",
        "modelValidation": "Boolean",
        "multiSelect": "Boolean",
        "nameable": "Boolean",
        "navigationModel": "any",
        "overCls": "String",
        "overflowX": "String",
        "overflowY": "String",
        "overItemCls": "String",
        "padding": "Number/String",
        "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
        "preserveScrollOnRefresh": "Boolean",
        "preserveScrollOnReload": "Boolean",
        "publishes": "String/String[]/Object",
        "rect": "Array",
        "reference": "String",
        "region": "'north'/'south'/'east'/'west'/'center'",
        "renderConfig": "Object",
        "renderData": "Object",
        "renderSelectors": "Object",
        "renderTo": "String/HTMLElement/Ext.dom.Element",
        "renderTpl": "Ext.XTemplate/String/String[]",
        "resizable": "Boolean/Object",
        "resizeHandles": "String",
        "saveDelay": "Number",
        "scrollable": "Boolean/String/Object",
        "selectedItemCls": "String",
        "selection": "Ext.data.Model",
        "selectionModel": "Object/Ext.selection.DataViewModel",
        "session": "Boolean/Object/Ext.data.Session",
        "shadow": "String/Boolean",
        "shadowOffset": "Number",
        "shareableName": "Boolean",
        "shim": "Boolean",
        "shrinkWrap": "Boolean/Number",
        "simpleSelect": "Boolean",
        "singleSelect": "Boolean",
        "stateEvents": "String[]",
        "stateful": "Boolean/Object",
        "stateId": "String",
        "store": "Ext.chart.legend.store.Store",
        "style": "String/Object",
        "tabIndex": "Number",
        "throttledUpdate": "Boolean",
        "toFrontOnShow": "Boolean",
        "toggleable": "Boolean",
        "touchAction": "Object",
        "tpl": "String/String[]/Ext.XTemplate",
        "tplWriteMode": "String",
        "trackOver": "Boolean",
        "twoWayBindable": "String/String[]/Object",
        "ui": "String",
        "uiCls": "String[]",
        "userCls": "String/String[]",
        "viewModel": "String/Object/Ext.app.ViewModel",
        "weight": "Number",
        "width": "Number|String",
        "xtype": "Ext.enums.Widget",
        "platformConfig": "Object",
        "fitToParent": "Boolean",
        "config": "Object",
    };
    legendMetaData.PROPERTIES = [
        'activeCounter',
        'alignOnScroll',
        'alignTarget',
        'alwaysOnTop',
        'anchor',
        'animateShadow',
        'ariaAttributes',
        'ariaDescribedBy',
        'ariaLabel',
        'ariaLabelledBy',
        'autoEl',
        'autoRender',
        'autoScroll',
        'autoShow',
        'baseCls',
        'bind',
        'blockRefresh',
        'border',
        'childEls',
        'cls',
        'columnWidth',
        'componentCls',
        'componentLayout',
        'constrain',
        'constraintInsets',
        'constrainTo',
        'contentEl',
        'controller',
        'data',
        'defaultAlign',
        'defaultListenerScope',
        'deferEmptyText',
        'deferInitialRefresh',
        'disabled',
        'disabledCls',
        'disableSelection',
        'dock',
        'docked',
        'draggable',
        'emptyText',
        'fixed',
        'flex',
        'floating',
        'focusCls',
        'focusOnToFront',
        'formBind',
        'frame',
        'height',
        'hidden',
        'hideMode',
        'html',
        'id',
        'itemCls',
        'itemId',
        'itemSelector',
        'itemTpl',
        'keyMap',
        'keyMapEnabled',
        'keyMapTarget',
        'liquidLayout',
        'listeners',
        'liveDrag',
        'loader',
        'loadingCls',
        'loadingHeight',
        'loadingText',
        'loadingUseMsg',
        'loadMask',
        'margin',
        'maskDefaults',
        'maskElement',
        'maxHeight',
        'maxWidth',
        'minHeight',
        'minWidth',
        'modal',
        'modelValidation',
        'multiSelect',
        'nameable',
        'navigationModel',
        'overCls',
        'overflowX',
        'overflowY',
        'overItemCls',
        'padding',
        'plugins',
        'preserveScrollOnRefresh',
        'preserveScrollOnReload',
        'publishes',
        'rect',
        'reference',
        'region',
        'renderConfig',
        'renderData',
        'renderSelectors',
        'renderTo',
        'renderTpl',
        'resizable',
        'resizeHandles',
        'saveDelay',
        'scrollable',
        'selectedItemCls',
        'selection',
        'selectionModel',
        'session',
        'shadow',
        'shadowOffset',
        'shareableName',
        'shim',
        'shrinkWrap',
        'simpleSelect',
        'singleSelect',
        'stateEvents',
        'stateful',
        'stateId',
        'store',
        'style',
        'tabIndex',
        'throttledUpdate',
        'toFrontOnShow',
        'toggleable',
        'touchAction',
        'tpl',
        'tplWriteMode',
        'trackOver',
        'twoWayBindable',
        'ui',
        'uiCls',
        'userCls',
        'viewModel',
        'weight',
        'width',
        'xtype',
        'platformConfig',
        'fitToParent',
        'config'
    ];
    legendMetaData.EVENTS = [
        { name: 'activate', parameters: 'legend' },
        { name: 'added', parameters: 'legend,container,pos' },
        { name: 'afterlayoutanimation', parameters: 'legend' },
        { name: 'afterrender', parameters: 'legend' },
        { name: 'beforeactivate', parameters: 'legend' },
        { name: 'beforecontainerclick', parameters: 'legend,e' },
        { name: 'beforecontainercontextmenu', parameters: 'legend,e' },
        { name: 'beforecontainerdblclick', parameters: 'legend,e' },
        { name: 'beforecontainerkeydown', parameters: 'legend,e' },
        { name: 'beforecontainerkeypress', parameters: 'legend,e' },
        { name: 'beforecontainerkeyup', parameters: 'legend,e' },
        { name: 'beforecontainermousedown', parameters: 'legend,e' },
        { name: 'beforecontainermouseout', parameters: 'legend,e' },
        { name: 'beforecontainermouseover', parameters: 'legend,e' },
        { name: 'beforecontainermouseup', parameters: 'legend,e' },
        { name: 'beforedeactivate', parameters: 'legend' },
        { name: 'beforedeselect', parameters: 'legend,record,index' },
        { name: 'beforedestroy', parameters: 'legend' },
        { name: 'beforehide', parameters: 'legend' },
        { name: 'beforeitemclick', parameters: 'legend,record,item,index,e' },
        { name: 'beforeitemcontextmenu', parameters: 'legend,record,item,index,e' },
        { name: 'beforeitemdblclick', parameters: 'legend,record,item,index,e' },
        { name: 'beforeitemkeydown', parameters: 'legend,record,item,index,e' },
        { name: 'beforeitemkeypress', parameters: 'legend,record,item,index,e' },
        { name: 'beforeitemkeyup', parameters: 'legend,record,item,index,e' },
        { name: 'beforeitemlongpress', parameters: 'legend,record,item,index,e' },
        { name: 'beforeitemmousedown', parameters: 'legend,record,item,index,e' },
        { name: 'beforeitemmouseenter', parameters: 'legend,record,item,index,e' },
        { name: 'beforeitemmouseleave', parameters: 'legend,record,item,index,e' },
        { name: 'beforeitemmouseup', parameters: 'legend,record,item,index,e' },
        { name: 'beforerefresh', parameters: 'legend' },
        { name: 'beforerender', parameters: 'legend' },
        { name: 'beforeselect', parameters: 'legend,record,index' },
        { name: 'beforeshow', parameters: 'legend' },
        { name: 'beforestaterestore', parameters: 'legend,state' },
        { name: 'beforestatesave', parameters: 'legend,state' },
        { name: 'blur', parameters: 'legend,event' },
        { name: 'boxready', parameters: 'legend,width,height' },
        { name: 'containerclick', parameters: 'legend,e' },
        { name: 'containercontextmenu', parameters: 'legend,e' },
        { name: 'containerdblclick', parameters: 'legend,e' },
        { name: 'containerkeydown', parameters: 'legend,e' },
        { name: 'containerkeypress', parameters: 'legend,e' },
        { name: 'containerkeyup', parameters: 'legend,e' },
        { name: 'containermousedown', parameters: 'legend,e' },
        { name: 'containermouseout', parameters: 'legend,e' },
        { name: 'containermouseover', parameters: 'legend,e' },
        { name: 'containermouseup', parameters: 'legend,e' },
        { name: 'deactivate', parameters: 'legend' },
        { name: 'deselect', parameters: 'legend,record' },
        { name: 'destroy', parameters: 'legend' },
        { name: 'disable', parameters: 'legend' },
        { name: 'enable', parameters: 'legend' },
        { name: 'focus', parameters: 'legend,event' },
        { name: 'focuschange', parameters: 'legend,oldFocused,newFocused' },
        { name: 'focusenter', parameters: 'legend,event' },
        { name: 'focusleave', parameters: 'legend,event' },
        { name: 'hide', parameters: 'legend' },
        { name: 'highlightitem', parameters: 'view,node' },
        { name: 'itemadd', parameters: 'records,index,node,view' },
        { name: 'itemclick', parameters: 'legend,record,item,index,e' },
        { name: 'itemcontextmenu', parameters: 'legend,record,item,index,e' },
        { name: 'itemdblclick', parameters: 'legend,record,item,index,e' },
        { name: 'itemkeydown', parameters: 'legend,record,item,index,e' },
        { name: 'itemkeypress', parameters: 'legend,record,item,index,e' },
        { name: 'itemkeyup', parameters: 'legend,record,item,index,e' },
        { name: 'itemlongpress', parameters: 'legend,record,item,index,e' },
        { name: 'itemmousedown', parameters: 'legend,record,item,index,e' },
        { name: 'itemmouseenter', parameters: 'legend,record,item,index,e' },
        { name: 'itemmouseleave', parameters: 'legend,record,item,index,e' },
        { name: 'itemmouseup', parameters: 'legend,record,item,index,e' },
        { name: 'itemremove', parameters: 'records,index,item,view' },
        { name: 'itemupdate', parameters: 'record,index,node,view' },
        { name: 'move', parameters: 'legend,x,y' },
        { name: 'refresh', parameters: 'legend' },
        { name: 'removed', parameters: 'legend,ownerCt' },
        { name: 'render', parameters: 'legend' },
        { name: 'resize', parameters: 'legend,width,height,oldWidth,oldHeight' },
        { name: 'select', parameters: 'legend,record,index' },
        { name: 'selectionchange', parameters: 'legend,selected' },
        { name: 'show', parameters: 'legend' },
        { name: 'staterestore', parameters: 'legend,state' },
        { name: 'statesave', parameters: 'legend,state' },
        { name: 'unhighlightitem', parameters: 'view,node' },
        { name: 'viewready', parameters: 'legend' },
        { name: 'ready', parameters: '' }
    ];
    legendMetaData.EVENTNAMES = [
        'activate',
        'added',
        'afterlayoutanimation',
        'afterrender',
        'beforeactivate',
        'beforecontainerclick',
        'beforecontainercontextmenu',
        'beforecontainerdblclick',
        'beforecontainerkeydown',
        'beforecontainerkeypress',
        'beforecontainerkeyup',
        'beforecontainermousedown',
        'beforecontainermouseout',
        'beforecontainermouseover',
        'beforecontainermouseup',
        'beforedeactivate',
        'beforedeselect',
        'beforedestroy',
        'beforehide',
        'beforeitemclick',
        'beforeitemcontextmenu',
        'beforeitemdblclick',
        'beforeitemkeydown',
        'beforeitemkeypress',
        'beforeitemkeyup',
        'beforeitemlongpress',
        'beforeitemmousedown',
        'beforeitemmouseenter',
        'beforeitemmouseleave',
        'beforeitemmouseup',
        'beforerefresh',
        'beforerender',
        'beforeselect',
        'beforeshow',
        'beforestaterestore',
        'beforestatesave',
        'blur',
        'boxready',
        'containerclick',
        'containercontextmenu',
        'containerdblclick',
        'containerkeydown',
        'containerkeypress',
        'containerkeyup',
        'containermousedown',
        'containermouseout',
        'containermouseover',
        'containermouseup',
        'deactivate',
        'deselect',
        'destroy',
        'disable',
        'enable',
        'focus',
        'focuschange',
        'focusenter',
        'focusleave',
        'hide',
        'highlightitem',
        'itemadd',
        'itemclick',
        'itemcontextmenu',
        'itemdblclick',
        'itemkeydown',
        'itemkeypress',
        'itemkeyup',
        'itemlongpress',
        'itemmousedown',
        'itemmouseenter',
        'itemmouseleave',
        'itemmouseup',
        'itemremove',
        'itemupdate',
        'move',
        'refresh',
        'removed',
        'render',
        'resize',
        'select',
        'selectionchange',
        'show',
        'staterestore',
        'statesave',
        'unhighlightitem',
        'viewready',
        'ready'
    ];
    return legendMetaData;
}());
export { legendMetaData };
if (false) {
    /** @type {?} */
    legendMetaData.XTYPE;
    /** @type {?} */
    legendMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    legendMetaData.PROPERTIES;
    /** @type {?} */
    legendMetaData.EVENTS;
    /** @type {?} */
    legendMetaData.EVENTNAMES;
}
var ExtLegendComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ExtLegendComponent, _super);
    function ExtLegendComponent(eRef) {
        return _super.call(this, eRef, legendMetaData) || this;
    }
    /**
     * @return {?}
     */
    ExtLegendComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { this.baseOnInit(legendMetaData); };
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ExtLegendComponent.prototype.ngAfterContentInit = 
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    function () {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    };
    ExtLegendComponent.decorators = [
        { type: Component, args: [{
                    selector: 'legend',
                    inputs: legendMetaData.PROPERTIES,
                    outputs: legendMetaData.EVENTNAMES,
                    providers: [{ provide: base, useExisting: forwardRef(function () { return ExtLegendComponent; }) }],
                    template: '<ng-template #dynamic></ng-template>'
                }] }
    ];
    /** @nocollapse */
    ExtLegendComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return ExtLegendComponent;
}(base));
export { ExtLegendComponent };
//# sourceMappingURL=data:application/json;base64,