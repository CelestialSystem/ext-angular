/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
var dataviewMetaData = /** @class */ (function () {
    function dataviewMetaData() {
    }
    dataviewMetaData.XTYPE = 'dataview';
    dataviewMetaData.PROPERTIESOBJECT = {
        "activeCounter": "Number",
        "alignOnScroll": "Boolean",
        "alignTarget": "String",
        "alwaysOnTop": "Boolean/Number",
        "anchor": "String",
        "animateShadow": "Boolean",
        "ariaAttributes": "Object",
        "ariaDescribedBy": "String",
        "ariaLabel": "String",
        "ariaLabelledBy": "String",
        "autoEl": "String/Object",
        "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
        "autoScroll": "Boolean",
        "autoShow": "Boolean",
        "baseCls": "String",
        "bind": "Object/String",
        "blockRefresh": "Boolean",
        "border": "Number/String/Boolean",
        "childEls": "Object/String[]/Object[]",
        "cls": "String/String[]",
        "columnWidth": "Number",
        "componentCls": "String",
        "componentLayout": "String/Object",
        "constrain": "Boolean",
        "constraintInsets": "Object/String",
        "constrainTo": "Ext.util.Region/Ext.dom.Element",
        "contentEl": "String",
        "controller": "String/Object/Ext.app.ViewController",
        "data": "Object",
        "defaultAlign": "String",
        "defaultListenerScope": "Boolean",
        "deferEmptyText": "Boolean",
        "deferInitialRefresh": "Boolean",
        "disabled": "Boolean",
        "disabledCls": "String",
        "disableSelection": "Boolean",
        "dock": "'top'/'bottom'/'left'/'right'",
        "draggable": "Boolean/Object",
        "emptyText": "String",
        "fixed": "Boolean",
        "flex": "Number",
        "floating": "Boolean",
        "focusCls": "String",
        "focusOnToFront": "Boolean",
        "formBind": "Boolean",
        "frame": "Boolean",
        "height": "Number|String",
        "hidden": "Boolean",
        "hideMode": "String",
        "html": "String/Object",
        "id": "String",
        "itemCls": "String",
        "itemId": "String",
        "itemSelector": "String",
        "itemTpl": "String/String[]/Ext.XTemplate",
        "keyMap": "Object",
        "keyMapEnabled": "Boolean",
        "keyMapTarget": "String",
        "liquidLayout": "Boolean",
        "listeners": "Object",
        "liveDrag": "Boolean",
        "loader": "Ext.ComponentLoader/Object",
        "loadingCls": "String",
        "loadingHeight": "Number",
        "loadingText": "String",
        "loadingUseMsg": "Boolean",
        "loadMask": "Boolean/Object",
        "margin": "Number/String",
        "maskDefaults": "Object",
        "maskElement": "String",
        "maxHeight": "Number",
        "maxWidth": "Number",
        "minHeight": "Number",
        "minWidth": "Number",
        "modal": "Boolean",
        "modelValidation": "Boolean",
        "multiSelect": "Boolean",
        "nameable": "Boolean",
        "navigationModel": "any",
        "overCls": "String",
        "overflowX": "String",
        "overflowY": "String",
        "overItemCls": "String",
        "padding": "Number/String",
        "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
        "preserveScrollOnRefresh": "Boolean",
        "preserveScrollOnReload": "Boolean",
        "publishes": "String/String[]/Object",
        "reference": "String",
        "region": "'north'/'south'/'east'/'west'/'center'",
        "renderConfig": "Object",
        "renderData": "Object",
        "renderSelectors": "Object",
        "renderTo": "String/HTMLElement/Ext.dom.Element",
        "renderTpl": "Ext.XTemplate/String/String[]",
        "resizable": "Boolean/Object",
        "resizeHandles": "String",
        "saveDelay": "Number",
        "scrollable": "Boolean/String/Object",
        "selectedItemCls": "String",
        "selection": "Ext.data.Model",
        "selectionModel": "Object/Ext.selection.DataViewModel",
        "session": "Boolean/Object/Ext.data.Session",
        "shadow": "String/Boolean",
        "shadowOffset": "Number",
        "shareableName": "Boolean",
        "shim": "Boolean",
        "shrinkWrap": "Boolean/Number",
        "simpleSelect": "Boolean",
        "singleSelect": "Boolean",
        "stateEvents": "String[]",
        "stateful": "Boolean/Object",
        "stateId": "String",
        "store": "Ext.data.Store",
        "style": "String/Object",
        "tabIndex": "Number",
        "throttledUpdate": "Boolean",
        "toFrontOnShow": "Boolean",
        "touchAction": "Object",
        "tpl": "String/String[]/Ext.XTemplate",
        "tplWriteMode": "String",
        "trackOver": "Boolean",
        "twoWayBindable": "String/String[]/Object",
        "ui": "String",
        "uiCls": "String[]",
        "userCls": "String/String[]",
        "viewModel": "String/Object/Ext.app.ViewModel",
        "weight": "Number",
        "width": "Number|String",
        "xtype": "Ext.enums.Widget",
        "platformConfig": "Object",
        "fitToParent": "Boolean",
        "config": "Object",
    };
    dataviewMetaData.PROPERTIES = [
        'activeCounter',
        'alignOnScroll',
        'alignTarget',
        'alwaysOnTop',
        'anchor',
        'animateShadow',
        'ariaAttributes',
        'ariaDescribedBy',
        'ariaLabel',
        'ariaLabelledBy',
        'autoEl',
        'autoRender',
        'autoScroll',
        'autoShow',
        'baseCls',
        'bind',
        'blockRefresh',
        'border',
        'childEls',
        'cls',
        'columnWidth',
        'componentCls',
        'componentLayout',
        'constrain',
        'constraintInsets',
        'constrainTo',
        'contentEl',
        'controller',
        'data',
        'defaultAlign',
        'defaultListenerScope',
        'deferEmptyText',
        'deferInitialRefresh',
        'disabled',
        'disabledCls',
        'disableSelection',
        'dock',
        'draggable',
        'emptyText',
        'fixed',
        'flex',
        'floating',
        'focusCls',
        'focusOnToFront',
        'formBind',
        'frame',
        'height',
        'hidden',
        'hideMode',
        'html',
        'id',
        'itemCls',
        'itemId',
        'itemSelector',
        'itemTpl',
        'keyMap',
        'keyMapEnabled',
        'keyMapTarget',
        'liquidLayout',
        'listeners',
        'liveDrag',
        'loader',
        'loadingCls',
        'loadingHeight',
        'loadingText',
        'loadingUseMsg',
        'loadMask',
        'margin',
        'maskDefaults',
        'maskElement',
        'maxHeight',
        'maxWidth',
        'minHeight',
        'minWidth',
        'modal',
        'modelValidation',
        'multiSelect',
        'nameable',
        'navigationModel',
        'overCls',
        'overflowX',
        'overflowY',
        'overItemCls',
        'padding',
        'plugins',
        'preserveScrollOnRefresh',
        'preserveScrollOnReload',
        'publishes',
        'reference',
        'region',
        'renderConfig',
        'renderData',
        'renderSelectors',
        'renderTo',
        'renderTpl',
        'resizable',
        'resizeHandles',
        'saveDelay',
        'scrollable',
        'selectedItemCls',
        'selection',
        'selectionModel',
        'session',
        'shadow',
        'shadowOffset',
        'shareableName',
        'shim',
        'shrinkWrap',
        'simpleSelect',
        'singleSelect',
        'stateEvents',
        'stateful',
        'stateId',
        'store',
        'style',
        'tabIndex',
        'throttledUpdate',
        'toFrontOnShow',
        'touchAction',
        'tpl',
        'tplWriteMode',
        'trackOver',
        'twoWayBindable',
        'ui',
        'uiCls',
        'userCls',
        'viewModel',
        'weight',
        'width',
        'xtype',
        'platformConfig',
        'fitToParent',
        'config'
    ];
    dataviewMetaData.EVENTS = [
        { name: 'activate', parameters: 'dataview' },
        { name: 'added', parameters: 'dataview,container,pos' },
        { name: 'afterlayoutanimation', parameters: 'dataview' },
        { name: 'afterrender', parameters: 'dataview' },
        { name: 'beforeactivate', parameters: 'dataview' },
        { name: 'beforecontainerclick', parameters: 'dataview,e' },
        { name: 'beforecontainercontextmenu', parameters: 'dataview,e' },
        { name: 'beforecontainerdblclick', parameters: 'dataview,e' },
        { name: 'beforecontainerkeydown', parameters: 'dataview,e' },
        { name: 'beforecontainerkeypress', parameters: 'dataview,e' },
        { name: 'beforecontainerkeyup', parameters: 'dataview,e' },
        { name: 'beforecontainermousedown', parameters: 'dataview,e' },
        { name: 'beforecontainermouseout', parameters: 'dataview,e' },
        { name: 'beforecontainermouseover', parameters: 'dataview,e' },
        { name: 'beforecontainermouseup', parameters: 'dataview,e' },
        { name: 'beforedeactivate', parameters: 'dataview' },
        { name: 'beforedeselect', parameters: 'dataview,record,index' },
        { name: 'beforedestroy', parameters: 'dataview' },
        { name: 'beforehide', parameters: 'dataview' },
        { name: 'beforeitemclick', parameters: 'dataview,record,item,index,e' },
        { name: 'beforeitemcontextmenu', parameters: 'dataview,record,item,index,e' },
        { name: 'beforeitemdblclick', parameters: 'dataview,record,item,index,e' },
        { name: 'beforeitemkeydown', parameters: 'dataview,record,item,index,e' },
        { name: 'beforeitemkeypress', parameters: 'dataview,record,item,index,e' },
        { name: 'beforeitemkeyup', parameters: 'dataview,record,item,index,e' },
        { name: 'beforeitemlongpress', parameters: 'dataview,record,item,index,e' },
        { name: 'beforeitemmousedown', parameters: 'dataview,record,item,index,e' },
        { name: 'beforeitemmouseenter', parameters: 'dataview,record,item,index,e' },
        { name: 'beforeitemmouseleave', parameters: 'dataview,record,item,index,e' },
        { name: 'beforeitemmouseup', parameters: 'dataview,record,item,index,e' },
        { name: 'beforerefresh', parameters: 'dataview' },
        { name: 'beforerender', parameters: 'dataview' },
        { name: 'beforeselect', parameters: 'dataview,record,index' },
        { name: 'beforeshow', parameters: 'dataview' },
        { name: 'beforestaterestore', parameters: 'dataview,state' },
        { name: 'beforestatesave', parameters: 'dataview,state' },
        { name: 'blur', parameters: 'dataview,event' },
        { name: 'boxready', parameters: 'dataview,width,height' },
        { name: 'containerclick', parameters: 'dataview,e' },
        { name: 'containercontextmenu', parameters: 'dataview,e' },
        { name: 'containerdblclick', parameters: 'dataview,e' },
        { name: 'containerkeydown', parameters: 'dataview,e' },
        { name: 'containerkeypress', parameters: 'dataview,e' },
        { name: 'containerkeyup', parameters: 'dataview,e' },
        { name: 'containermousedown', parameters: 'dataview,e' },
        { name: 'containermouseout', parameters: 'dataview,e' },
        { name: 'containermouseover', parameters: 'dataview,e' },
        { name: 'containermouseup', parameters: 'dataview,e' },
        { name: 'deactivate', parameters: 'dataview' },
        { name: 'deselect', parameters: 'dataview,record' },
        { name: 'destroy', parameters: 'dataview' },
        { name: 'disable', parameters: 'dataview' },
        { name: 'enable', parameters: 'dataview' },
        { name: 'focus', parameters: 'dataview,event' },
        { name: 'focuschange', parameters: 'dataview,oldFocused,newFocused' },
        { name: 'focusenter', parameters: 'dataview,event' },
        { name: 'focusleave', parameters: 'dataview,event' },
        { name: 'hide', parameters: 'dataview' },
        { name: 'highlightitem', parameters: 'view,node' },
        { name: 'itemadd', parameters: 'records,index,node,view' },
        { name: 'itemclick', parameters: 'dataview,record,item,index,e' },
        { name: 'itemcontextmenu', parameters: 'dataview,record,item,index,e' },
        { name: 'itemdblclick', parameters: 'dataview,record,item,index,e' },
        { name: 'itemkeydown', parameters: 'dataview,record,item,index,e' },
        { name: 'itemkeypress', parameters: 'dataview,record,item,index,e' },
        { name: 'itemkeyup', parameters: 'dataview,record,item,index,e' },
        { name: 'itemlongpress', parameters: 'dataview,record,item,index,e' },
        { name: 'itemmousedown', parameters: 'dataview,record,item,index,e' },
        { name: 'itemmouseenter', parameters: 'dataview,record,item,index,e' },
        { name: 'itemmouseleave', parameters: 'dataview,record,item,index,e' },
        { name: 'itemmouseup', parameters: 'dataview,record,item,index,e' },
        { name: 'itemremove', parameters: 'records,index,item,view' },
        { name: 'itemupdate', parameters: 'record,index,node,view' },
        { name: 'move', parameters: 'dataview,x,y' },
        { name: 'refresh', parameters: 'dataview' },
        { name: 'removed', parameters: 'dataview,ownerCt' },
        { name: 'render', parameters: 'dataview' },
        { name: 'resize', parameters: 'dataview,width,height,oldWidth,oldHeight' },
        { name: 'select', parameters: 'dataview,record,index' },
        { name: 'selectionchange', parameters: 'dataview,selected' },
        { name: 'show', parameters: 'dataview' },
        { name: 'staterestore', parameters: 'dataview,state' },
        { name: 'statesave', parameters: 'dataview,state' },
        { name: 'unhighlightitem', parameters: 'view,node' },
        { name: 'viewready', parameters: 'dataview' },
        { name: 'ready', parameters: '' }
    ];
    dataviewMetaData.EVENTNAMES = [
        'activate',
        'added',
        'afterlayoutanimation',
        'afterrender',
        'beforeactivate',
        'beforecontainerclick',
        'beforecontainercontextmenu',
        'beforecontainerdblclick',
        'beforecontainerkeydown',
        'beforecontainerkeypress',
        'beforecontainerkeyup',
        'beforecontainermousedown',
        'beforecontainermouseout',
        'beforecontainermouseover',
        'beforecontainermouseup',
        'beforedeactivate',
        'beforedeselect',
        'beforedestroy',
        'beforehide',
        'beforeitemclick',
        'beforeitemcontextmenu',
        'beforeitemdblclick',
        'beforeitemkeydown',
        'beforeitemkeypress',
        'beforeitemkeyup',
        'beforeitemlongpress',
        'beforeitemmousedown',
        'beforeitemmouseenter',
        'beforeitemmouseleave',
        'beforeitemmouseup',
        'beforerefresh',
        'beforerender',
        'beforeselect',
        'beforeshow',
        'beforestaterestore',
        'beforestatesave',
        'blur',
        'boxready',
        'containerclick',
        'containercontextmenu',
        'containerdblclick',
        'containerkeydown',
        'containerkeypress',
        'containerkeyup',
        'containermousedown',
        'containermouseout',
        'containermouseover',
        'containermouseup',
        'deactivate',
        'deselect',
        'destroy',
        'disable',
        'enable',
        'focus',
        'focuschange',
        'focusenter',
        'focusleave',
        'hide',
        'highlightitem',
        'itemadd',
        'itemclick',
        'itemcontextmenu',
        'itemdblclick',
        'itemkeydown',
        'itemkeypress',
        'itemkeyup',
        'itemlongpress',
        'itemmousedown',
        'itemmouseenter',
        'itemmouseleave',
        'itemmouseup',
        'itemremove',
        'itemupdate',
        'move',
        'refresh',
        'removed',
        'render',
        'resize',
        'select',
        'selectionchange',
        'show',
        'staterestore',
        'statesave',
        'unhighlightitem',
        'viewready',
        'ready'
    ];
    return dataviewMetaData;
}());
export { dataviewMetaData };
if (false) {
    /** @type {?} */
    dataviewMetaData.XTYPE;
    /** @type {?} */
    dataviewMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    dataviewMetaData.PROPERTIES;
    /** @type {?} */
    dataviewMetaData.EVENTS;
    /** @type {?} */
    dataviewMetaData.EVENTNAMES;
}
var ExtDataviewComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ExtDataviewComponent, _super);
    function ExtDataviewComponent(eRef) {
        return _super.call(this, eRef, dataviewMetaData) || this;
    }
    /**
     * @return {?}
     */
    ExtDataviewComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { this.baseOnInit(dataviewMetaData); };
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ExtDataviewComponent.prototype.ngAfterContentInit = 
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    function () {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    };
    ExtDataviewComponent.decorators = [
        { type: Component, args: [{
                    selector: 'dataview',
                    inputs: dataviewMetaData.PROPERTIES,
                    outputs: dataviewMetaData.EVENTNAMES,
                    providers: [{ provide: base, useExisting: forwardRef(function () { return ExtDataviewComponent; }) }],
                    template: '<ng-template #dynamic></ng-template>'
                }] }
    ];
    /** @nocollapse */
    ExtDataviewComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return ExtDataviewComponent;
}(base));
export { ExtDataviewComponent };
//# sourceMappingURL=data:application/json;base64,