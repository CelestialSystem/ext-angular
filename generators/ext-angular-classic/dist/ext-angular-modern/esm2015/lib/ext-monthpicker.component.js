/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
export class monthpickerMetaData {
}
monthpickerMetaData.XTYPE = 'monthpicker';
monthpickerMetaData.PROPERTIESOBJECT = {
    "activeCounter": "Number",
    "alignOnScroll": "Boolean",
    "alignTarget": "String",
    "alwaysOnTop": "Boolean/Number",
    "anchor": "String",
    "animateShadow": "Boolean",
    "ariaAttributes": "Object",
    "ariaDescribedBy": "String",
    "ariaLabel": "String",
    "ariaLabelledBy": "String",
    "autoEl": "String/Object",
    "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
    "autoScroll": "Boolean",
    "autoShow": "Boolean",
    "baseCls": "String",
    "bind": "Object/String",
    "border": "Number/String/Boolean",
    "cancelText": "String",
    "childEls": "Object/String[]/Object[]",
    "cls": "String/String[]",
    "columnWidth": "Number",
    "componentCls": "String",
    "componentLayout": "String/Object",
    "constrain": "Boolean",
    "constraintInsets": "Object/String",
    "constrainTo": "Ext.util.Region/Ext.dom.Element",
    "contentEl": "String",
    "controller": "String/Object/Ext.app.ViewController",
    "data": "Object",
    "defaultAlign": "String",
    "defaultListenerScope": "Boolean",
    "disabled": "Boolean",
    "disabledCls": "String",
    "dock": "'top'/'bottom'/'left'/'right'",
    "draggable": "Boolean/Object",
    "fixed": "Boolean",
    "flex": "Number",
    "floating": "Boolean",
    "focusCls": "String",
    "focusOnToFront": "Boolean",
    "footerButtonUI": "String",
    "formBind": "Boolean",
    "frame": "Boolean",
    "height": "Number|String",
    "hidden": "Boolean",
    "hideMode": "String",
    "html": "String/Object",
    "id": "String",
    "itemId": "String",
    "keyMap": "Object",
    "keyMapEnabled": "Boolean",
    "keyMapTarget": "String",
    "liquidLayout": "Boolean",
    "listeners": "Object",
    "liveDrag": "Boolean",
    "loader": "Ext.ComponentLoader/Object",
    "margin": "Number/String",
    "maskDefaults": "Object",
    "maskElement": "String",
    "maxHeight": "Number",
    "maxWidth": "Number",
    "minHeight": "Number",
    "minWidth": "Number",
    "modal": "Boolean",
    "modelValidation": "Boolean",
    "nameable": "Boolean",
    "okText": "String",
    "overCls": "String",
    "overflowX": "String",
    "overflowY": "String",
    "padding": "Number/String",
    "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
    "publishes": "String/String[]/Object",
    "reference": "String",
    "region": "'north'/'south'/'east'/'west'/'center'",
    "renderConfig": "Object",
    "renderData": "Object",
    "renderSelectors": "Object",
    "renderTo": "String/HTMLElement/Ext.dom.Element",
    "renderTpl": "Ext.XTemplate/String/String[]",
    "resizable": "Boolean/Object",
    "resizeHandles": "String",
    "saveDelay": "Number",
    "scrollable": "Boolean/String/Object",
    "session": "Boolean/Object/Ext.data.Session",
    "shadow": "String/Boolean",
    "shadowOffset": "Number",
    "shareableName": "Boolean",
    "shim": "Boolean",
    "showButtons": "Boolean",
    "shrinkWrap": "Boolean/Number",
    "stateEvents": "String[]",
    "stateful": "Boolean/Object",
    "stateId": "String",
    "style": "String/Object",
    "tabIndex": "Number",
    "toFrontOnShow": "Boolean",
    "touchAction": "Object",
    "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
    "tplWriteMode": "String",
    "twoWayBindable": "String/String[]/Object",
    "ui": "String",
    "uiCls": "String[]",
    "userCls": "String/String[]",
    "value": "Date/Number[]",
    "viewModel": "String/Object/Ext.app.ViewModel",
    "weight": "Number",
    "width": "Number|String",
    "xtype": "Ext.enums.Widget",
    "platformConfig": "Object",
    "fitToParent": "Boolean",
    "config": "Object",
};
monthpickerMetaData.PROPERTIES = [
    'activeCounter',
    'alignOnScroll',
    'alignTarget',
    'alwaysOnTop',
    'anchor',
    'animateShadow',
    'ariaAttributes',
    'ariaDescribedBy',
    'ariaLabel',
    'ariaLabelledBy',
    'autoEl',
    'autoRender',
    'autoScroll',
    'autoShow',
    'baseCls',
    'bind',
    'border',
    'cancelText',
    'childEls',
    'cls',
    'columnWidth',
    'componentCls',
    'componentLayout',
    'constrain',
    'constraintInsets',
    'constrainTo',
    'contentEl',
    'controller',
    'data',
    'defaultAlign',
    'defaultListenerScope',
    'disabled',
    'disabledCls',
    'dock',
    'draggable',
    'fixed',
    'flex',
    'floating',
    'focusCls',
    'focusOnToFront',
    'footerButtonUI',
    'formBind',
    'frame',
    'height',
    'hidden',
    'hideMode',
    'html',
    'id',
    'itemId',
    'keyMap',
    'keyMapEnabled',
    'keyMapTarget',
    'liquidLayout',
    'listeners',
    'liveDrag',
    'loader',
    'margin',
    'maskDefaults',
    'maskElement',
    'maxHeight',
    'maxWidth',
    'minHeight',
    'minWidth',
    'modal',
    'modelValidation',
    'nameable',
    'okText',
    'overCls',
    'overflowX',
    'overflowY',
    'padding',
    'plugins',
    'publishes',
    'reference',
    'region',
    'renderConfig',
    'renderData',
    'renderSelectors',
    'renderTo',
    'renderTpl',
    'resizable',
    'resizeHandles',
    'saveDelay',
    'scrollable',
    'session',
    'shadow',
    'shadowOffset',
    'shareableName',
    'shim',
    'showButtons',
    'shrinkWrap',
    'stateEvents',
    'stateful',
    'stateId',
    'style',
    'tabIndex',
    'toFrontOnShow',
    'touchAction',
    'tpl',
    'tplWriteMode',
    'twoWayBindable',
    'ui',
    'uiCls',
    'userCls',
    'value',
    'viewModel',
    'weight',
    'width',
    'xtype',
    'platformConfig',
    'fitToParent',
    'config'
];
monthpickerMetaData.EVENTS = [
    { name: 'activate', parameters: 'monthpicker' },
    { name: 'added', parameters: 'monthpicker,container,pos' },
    { name: 'afterlayoutanimation', parameters: 'monthpicker' },
    { name: 'afterrender', parameters: 'monthpicker' },
    { name: 'beforeactivate', parameters: 'monthpicker' },
    { name: 'beforedeactivate', parameters: 'monthpicker' },
    { name: 'beforedestroy', parameters: 'monthpicker' },
    { name: 'beforehide', parameters: 'monthpicker' },
    { name: 'beforerender', parameters: 'monthpicker' },
    { name: 'beforeshow', parameters: 'monthpicker' },
    { name: 'beforestaterestore', parameters: 'monthpicker,state' },
    { name: 'beforestatesave', parameters: 'monthpicker,state' },
    { name: 'blur', parameters: 'monthpicker,event' },
    { name: 'boxready', parameters: 'monthpicker,width,height' },
    { name: 'cancelclick', parameters: 'monthpicker' },
    { name: 'deactivate', parameters: 'monthpicker' },
    { name: 'destroy', parameters: 'monthpicker' },
    { name: 'disable', parameters: 'monthpicker' },
    { name: 'enable', parameters: 'monthpicker' },
    { name: 'focus', parameters: 'monthpicker,event' },
    { name: 'focusenter', parameters: 'monthpicker,event' },
    { name: 'focusleave', parameters: 'monthpicker,event' },
    { name: 'hide', parameters: 'monthpicker' },
    { name: 'monthclick', parameters: 'monthpicker,value' },
    { name: 'monthdblclick', parameters: 'monthpicker,value' },
    { name: 'move', parameters: 'monthpicker,x,y' },
    { name: 'okclick', parameters: 'monthpicker,value' },
    { name: 'removed', parameters: 'monthpicker,ownerCt' },
    { name: 'render', parameters: 'monthpicker' },
    { name: 'resize', parameters: 'monthpicker,width,height,oldWidth,oldHeight' },
    { name: 'select', parameters: 'monthpicker,value' },
    { name: 'show', parameters: 'monthpicker' },
    { name: 'staterestore', parameters: 'monthpicker,state' },
    { name: 'statesave', parameters: 'monthpicker,state' },
    { name: 'yearclick', parameters: 'monthpicker,value' },
    { name: 'yeardblclick', parameters: 'monthpicker,value' },
    { name: 'ready', parameters: '' }
];
monthpickerMetaData.EVENTNAMES = [
    'activate',
    'added',
    'afterlayoutanimation',
    'afterrender',
    'beforeactivate',
    'beforedeactivate',
    'beforedestroy',
    'beforehide',
    'beforerender',
    'beforeshow',
    'beforestaterestore',
    'beforestatesave',
    'blur',
    'boxready',
    'cancelclick',
    'deactivate',
    'destroy',
    'disable',
    'enable',
    'focus',
    'focusenter',
    'focusleave',
    'hide',
    'monthclick',
    'monthdblclick',
    'move',
    'okclick',
    'removed',
    'render',
    'resize',
    'select',
    'show',
    'staterestore',
    'statesave',
    'yearclick',
    'yeardblclick',
    'ready'
];
if (false) {
    /** @type {?} */
    monthpickerMetaData.XTYPE;
    /** @type {?} */
    monthpickerMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    monthpickerMetaData.PROPERTIES;
    /** @type {?} */
    monthpickerMetaData.EVENTS;
    /** @type {?} */
    monthpickerMetaData.EVENTNAMES;
}
export class ExtMonthpickerComponent extends base {
    /**
     * @param {?} eRef
     */
    constructor(eRef) { super(eRef, monthpickerMetaData); }
    /**
     * @return {?}
     */
    ngOnInit() { this.baseOnInit(monthpickerMetaData); }
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    }
}
ExtMonthpickerComponent.decorators = [
    { type: Component, args: [{
                selector: 'monthpicker',
                inputs: monthpickerMetaData.PROPERTIES,
                outputs: monthpickerMetaData.EVENTNAMES,
                providers: [{ provide: base, useExisting: forwardRef(() => ExtMonthpickerComponent) }],
                template: '<ng-template #dynamic></ng-template>'
            }] }
];
/** @nocollapse */
ExtMonthpickerComponent.ctorParameters = () => [
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,