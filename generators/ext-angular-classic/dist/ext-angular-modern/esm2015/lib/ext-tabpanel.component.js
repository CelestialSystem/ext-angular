/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
export class tabpanelMetaData {
}
tabpanelMetaData.XTYPE = 'tabpanel';
tabpanelMetaData.PROPERTIESOBJECT = {
    "actions": "Object",
    "activeChildTabIndex": "Number",
    "activeCounter": "Number",
    "activeItem": "String/Number",
    "activeTab": "String/Number/Ext.Component",
    "alignOnScroll": "Boolean",
    "alignTarget": "String",
    "allowFocusingDisabledChildren": "Boolean",
    "alwaysOnTop": "Boolean/Number",
    "anchor": "String",
    "anchorSize": "Number/Object",
    "animateShadow": "Boolean",
    "animCollapse": "Boolean/Number",
    "ariaAttributes": "Object",
    "ariaDescribedBy": "String",
    "ariaLabel": "String",
    "ariaLabelledBy": "String",
    "autoDestroy": "Boolean",
    "autoEl": "String/Object",
    "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
    "autoScroll": "Boolean",
    "autoShow": "Boolean",
    "baseCls": "String",
    "bbar": "Object/Object[]",
    "bind": "Object/String",
    "bodyBorder": "Boolean",
    "bodyCls": "String/String[]",
    "bodyPadding": "Number/String",
    "bodyStyle": "String/Object/Function",
    "border": "Boolean",
    "bubbleEvents": "String[]",
    "buttonAlign": "String",
    "buttons": "Object[]",
    "childEls": "Object/String[]/Object[]",
    "closable": "Boolean",
    "closeAction": "String",
    "closeToolText": "String",
    "cls": "String/String[]",
    "collapsed": "Boolean",
    "collapsedCls": "String",
    "collapseDirection": "String",
    "collapseFirst": "Boolean",
    "collapseMode": "String",
    "collapseToolText": "String",
    "collapsible": "Boolean",
    "columnWidth": "Number",
    "componentCls": "String",
    "componentLayout": "String/Object",
    "constrain": "Boolean",
    "constrainHeader": "Boolean",
    "constraintInsets": "Object/String",
    "constrainTo": "Ext.util.Region/Ext.dom.Element",
    "contentEl": "String",
    "controller": "String/Object/Ext.app.ViewController",
    "data": "Object",
    "defaultAlign": "String",
    "defaultButton": "String",
    "defaultButtonTarget": "String",
    "defaultDockWeights": "Object",
    "defaultFocus": "String",
    "defaultListenerScope": "Boolean",
    "defaults": "Object/Function",
    "defaultType": "String",
    "deferredRender": "Boolean",
    "detachOnRemove": "Boolean",
    "disabled": "Boolean",
    "disabledCls": "String",
    "dock": "'top'/'bottom'/'left'/'right'",
    "dockedItems": "Object/Object[]",
    "draggable": "Boolean/Object",
    "expandToolText": "String",
    "fbar": "Object/Object[]",
    "fixed": "Boolean",
    "flex": "Number",
    "floatable": "Boolean",
    "floating": "Boolean",
    "focusableContainer": "Boolean",
    "focusCls": "String",
    "focusOnToFront": "Boolean",
    "formBind": "Boolean",
    "frame": "Boolean",
    "frameHeader": "Boolean",
    "glyph": "Number/String",
    "header": "Boolean/Object",
    "headerOverCls": "String",
    "headerPosition": "'top'/'bottom'/'left'/'right'",
    "height": "Number|String",
    "hidden": "Boolean",
    "hideCollapseTool": "Boolean",
    "hideMode": "String",
    "html": "String/Object",
    "icon": "String",
    "iconAlign": "'top'/'right'/'bottom'/'left'",
    "iconCls": "String",
    "id": "String",
    "inactiveChildTabIndex": "Number",
    "itemCls": "String",
    "itemId": "String",
    "items": "Object/Object[]",
    "keyMap": "Object",
    "keyMapEnabled": "Boolean",
    "keyMapTarget": "String",
    "layout": "Ext.enums.Layout/Object",
    "lbar": "Object/Object[]",
    "liquidLayout": "Boolean",
    "listeners": "Object",
    "liveDrag": "Boolean",
    "loader": "Ext.ComponentLoader/Object",
    "maintainTitlePosition": "Boolean",
    "manageHeight": "Boolean",
    "margin": "Number/String",
    "maskDefaults": "Object",
    "maskElement": "String",
    "maxHeight": "Number",
    "maxTabWidth": "Number",
    "maxWidth": "Number",
    "minButtonWidth": "Number",
    "minHeight": "Number",
    "minTabWidth": "Number",
    "minWidth": "Number",
    "modal": "Boolean",
    "modelValidation": "Boolean",
    "nameable": "Boolean",
    "nameHolder": "Boolean",
    "overCls": "String",
    "overflowX": "String",
    "overflowY": "String",
    "overlapHeader": "Boolean",
    "padding": "Number/String",
    "placeholder": "Ext.Component/Object",
    "placeholderCollapseHideMode": "Number",
    "plain": "Boolean",
    "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
    "preventHeader": "Boolean",
    "publishes": "String/String[]/Object",
    "rbar": "Object/Object[]",
    "reference": "String",
    "referenceHolder": "Boolean",
    "region": "'north'/'south'/'east'/'west'/'center'",
    "removePanelHeader": "Boolean",
    "renderConfig": "Object",
    "renderData": "Object",
    "renderSelectors": "Object",
    "renderTo": "String/HTMLElement/Ext.dom.Element",
    "renderTpl": "Ext.XTemplate/String/String[]",
    "resetFocusPosition": "Boolean",
    "resizable": "Boolean/Object",
    "resizeHandles": "String",
    "saveDelay": "Number",
    "scrollable": "Boolean/String/Object",
    "session": "Boolean/Object/Ext.data.Session",
    "shadow": "String/Boolean",
    "shadowOffset": "Number",
    "shareableName": "Boolean",
    "shim": "Boolean",
    "shrinkWrap": "Boolean/Number",
    "shrinkWrapDock": "Boolean/Number",
    "simpleDrag": "Boolean",
    "stateEvents": "String[]",
    "stateful": "Boolean/Object",
    "stateId": "String",
    "style": "String/Object",
    "suspendLayout": "Boolean",
    "tabBar": "Object",
    "tabBarHeaderPosition": "Number",
    "tabGuard": "Boolean",
    "tabIndex": "Number",
    "tabPosition": "'top'/'bottom'/'left'/'right'",
    "tabRotation": "'default'/0/1/2",
    "tabStretchMax": "Boolean",
    "tbar": "Object/Object[]",
    "title": "String/Ext.panel.Title",
    "titleAlign": "'left'/'center'/'right'",
    "titleCollapse": "Boolean",
    "titlePosition": "Number",
    "titleRotation": "'default'/0/1/2",
    "toFrontOnShow": "Boolean",
    "tools": "Object[]/Ext.panel.Tool[]",
    "touchAction": "Object",
    "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
    "tplWriteMode": "String",
    "twoWayBindable": "String/String[]/Object",
    "ui": "String",
    "uiCls": "String[]",
    "userCls": "String/String[]",
    "viewModel": "String/Object/Ext.app.ViewModel",
    "weight": "Number",
    "width": "Number|String",
    "xtype": "Ext.enums.Widget",
    "platformConfig": "Object",
    "fitToParent": "Boolean",
    "config": "Object",
};
tabpanelMetaData.PROPERTIES = [
    'actions',
    'activeChildTabIndex',
    'activeCounter',
    'activeItem',
    'activeTab',
    'alignOnScroll',
    'alignTarget',
    'allowFocusingDisabledChildren',
    'alwaysOnTop',
    'anchor',
    'anchorSize',
    'animateShadow',
    'animCollapse',
    'ariaAttributes',
    'ariaDescribedBy',
    'ariaLabel',
    'ariaLabelledBy',
    'autoDestroy',
    'autoEl',
    'autoRender',
    'autoScroll',
    'autoShow',
    'baseCls',
    'bbar',
    'bind',
    'bodyBorder',
    'bodyCls',
    'bodyPadding',
    'bodyStyle',
    'border',
    'bubbleEvents',
    'buttonAlign',
    'buttons',
    'childEls',
    'closable',
    'closeAction',
    'closeToolText',
    'cls',
    'collapsed',
    'collapsedCls',
    'collapseDirection',
    'collapseFirst',
    'collapseMode',
    'collapseToolText',
    'collapsible',
    'columnWidth',
    'componentCls',
    'componentLayout',
    'constrain',
    'constrainHeader',
    'constraintInsets',
    'constrainTo',
    'contentEl',
    'controller',
    'data',
    'defaultAlign',
    'defaultButton',
    'defaultButtonTarget',
    'defaultDockWeights',
    'defaultFocus',
    'defaultListenerScope',
    'defaults',
    'defaultType',
    'deferredRender',
    'detachOnRemove',
    'disabled',
    'disabledCls',
    'dock',
    'dockedItems',
    'draggable',
    'expandToolText',
    'fbar',
    'fixed',
    'flex',
    'floatable',
    'floating',
    'focusableContainer',
    'focusCls',
    'focusOnToFront',
    'formBind',
    'frame',
    'frameHeader',
    'glyph',
    'header',
    'headerOverCls',
    'headerPosition',
    'height',
    'hidden',
    'hideCollapseTool',
    'hideMode',
    'html',
    'icon',
    'iconAlign',
    'iconCls',
    'id',
    'inactiveChildTabIndex',
    'itemCls',
    'itemId',
    'items',
    'keyMap',
    'keyMapEnabled',
    'keyMapTarget',
    'layout',
    'lbar',
    'liquidLayout',
    'listeners',
    'liveDrag',
    'loader',
    'maintainTitlePosition',
    'manageHeight',
    'margin',
    'maskDefaults',
    'maskElement',
    'maxHeight',
    'maxTabWidth',
    'maxWidth',
    'minButtonWidth',
    'minHeight',
    'minTabWidth',
    'minWidth',
    'modal',
    'modelValidation',
    'nameable',
    'nameHolder',
    'overCls',
    'overflowX',
    'overflowY',
    'overlapHeader',
    'padding',
    'placeholder',
    'placeholderCollapseHideMode',
    'plain',
    'plugins',
    'preventHeader',
    'publishes',
    'rbar',
    'reference',
    'referenceHolder',
    'region',
    'removePanelHeader',
    'renderConfig',
    'renderData',
    'renderSelectors',
    'renderTo',
    'renderTpl',
    'resetFocusPosition',
    'resizable',
    'resizeHandles',
    'saveDelay',
    'scrollable',
    'session',
    'shadow',
    'shadowOffset',
    'shareableName',
    'shim',
    'shrinkWrap',
    'shrinkWrapDock',
    'simpleDrag',
    'stateEvents',
    'stateful',
    'stateId',
    'style',
    'suspendLayout',
    'tabBar',
    'tabBarHeaderPosition',
    'tabGuard',
    'tabIndex',
    'tabPosition',
    'tabRotation',
    'tabStretchMax',
    'tbar',
    'title',
    'titleAlign',
    'titleCollapse',
    'titlePosition',
    'titleRotation',
    'toFrontOnShow',
    'tools',
    'touchAction',
    'tpl',
    'tplWriteMode',
    'twoWayBindable',
    'ui',
    'uiCls',
    'userCls',
    'viewModel',
    'weight',
    'width',
    'xtype',
    'platformConfig',
    'fitToParent',
    'config'
];
tabpanelMetaData.EVENTS = [
    { name: 'activate', parameters: 'tabpanel' },
    { name: 'add', parameters: 'tabpanel,component,index' },
    { name: 'added', parameters: 'tabpanel,container,pos' },
    { name: 'afterlayout', parameters: 'tabpanel,layout' },
    { name: 'afterlayoutanimation', parameters: 'tabpanel' },
    { name: 'afterrender', parameters: 'tabpanel' },
    { name: 'beforeactivate', parameters: 'tabpanel' },
    { name: 'beforeadd', parameters: 'tabpanel,component,index' },
    { name: 'beforeclose', parameters: 'panel' },
    { name: 'beforecollapse', parameters: 'p,direction,animate' },
    { name: 'beforedeactivate', parameters: 'tabpanel' },
    { name: 'beforedestroy', parameters: 'tabpanel' },
    { name: 'beforeexpand', parameters: 'p,animate' },
    { name: 'beforehide', parameters: 'tabpanel' },
    { name: 'beforeremove', parameters: 'tabpanel,component' },
    { name: 'beforerender', parameters: 'tabpanel' },
    { name: 'beforeshow', parameters: 'tabpanel' },
    { name: 'beforestaterestore', parameters: 'tabpanel,state' },
    { name: 'beforestatesave', parameters: 'tabpanel,state' },
    { name: 'beforetabchange', parameters: 'tabPanel,newCard,oldCard' },
    { name: 'blur', parameters: 'tabpanel,event' },
    { name: 'boxready', parameters: 'tabpanel,width,height' },
    { name: 'childmove', parameters: 'tabpanel,component,prevIndex,newIndex' },
    { name: 'close', parameters: 'panel' },
    { name: 'collapse', parameters: 'p' },
    { name: 'deactivate', parameters: 'tabpanel' },
    { name: 'destroy', parameters: 'tabpanel' },
    { name: 'disable', parameters: 'tabpanel' },
    { name: 'dockedadd', parameters: 'tabpanel,component,index' },
    { name: 'dockedremove', parameters: 'tabpanel,component' },
    { name: 'enable', parameters: 'tabpanel' },
    { name: 'expand', parameters: 'p' },
    { name: 'float', parameters: '' },
    { name: 'focus', parameters: 'tabpanel,event' },
    { name: 'focusenter', parameters: 'tabpanel,event' },
    { name: 'focusleave', parameters: 'tabpanel,event' },
    { name: 'glyphchange', parameters: 'tabpanel,newGlyph,oldGlyph' },
    { name: 'hide', parameters: 'tabpanel' },
    { name: 'iconalignchange', parameters: 'tabpanel,newIconAlign,oldIconAlign' },
    { name: 'iconchange', parameters: 'tabpanel,newIcon,oldIcon' },
    { name: 'iconclschange', parameters: 'tabpanel,newIconCls,oldIconCls' },
    { name: 'move', parameters: 'tabpanel,x,y' },
    { name: 'remove', parameters: 'tabpanel,component' },
    { name: 'removed', parameters: 'tabpanel,ownerCt' },
    { name: 'render', parameters: 'tabpanel' },
    { name: 'resize', parameters: 'tabpanel,width,height,oldWidth,oldHeight' },
    { name: 'show', parameters: 'tabpanel' },
    { name: 'staterestore', parameters: 'tabpanel,state' },
    { name: 'statesave', parameters: 'tabpanel,state' },
    { name: 'tabchange', parameters: 'tabPanel,newCard,oldCard' },
    { name: 'titlealignchange', parameters: 'tabpanel,newTitleAlign,oldTitleAlign' },
    { name: 'titlechange', parameters: 'tabpanel,newTitle,oldTitle' },
    { name: 'titlepositionchange', parameters: 'tabpanel,newTitlePosition,oldTitlePosition' },
    { name: 'titlerotationchange', parameters: 'tabpanel,newTitleRotation,oldTitleRotation' },
    { name: 'unfloat', parameters: '' },
    { name: 'ready', parameters: '' }
];
tabpanelMetaData.EVENTNAMES = [
    'activate',
    'add',
    'added',
    'afterlayout',
    'afterlayoutanimation',
    'afterrender',
    'beforeactivate',
    'beforeadd',
    'beforeclose',
    'beforecollapse',
    'beforedeactivate',
    'beforedestroy',
    'beforeexpand',
    'beforehide',
    'beforeremove',
    'beforerender',
    'beforeshow',
    'beforestaterestore',
    'beforestatesave',
    'beforetabchange',
    'blur',
    'boxready',
    'childmove',
    'close',
    'collapse',
    'deactivate',
    'destroy',
    'disable',
    'dockedadd',
    'dockedremove',
    'enable',
    'expand',
    'float',
    'focus',
    'focusenter',
    'focusleave',
    'glyphchange',
    'hide',
    'iconalignchange',
    'iconchange',
    'iconclschange',
    'move',
    'remove',
    'removed',
    'render',
    'resize',
    'show',
    'staterestore',
    'statesave',
    'tabchange',
    'titlealignchange',
    'titlechange',
    'titlepositionchange',
    'titlerotationchange',
    'unfloat',
    'ready'
];
if (false) {
    /** @type {?} */
    tabpanelMetaData.XTYPE;
    /** @type {?} */
    tabpanelMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    tabpanelMetaData.PROPERTIES;
    /** @type {?} */
    tabpanelMetaData.EVENTS;
    /** @type {?} */
    tabpanelMetaData.EVENTNAMES;
}
export class ExtTabpanelComponent extends base {
    /**
     * @param {?} eRef
     */
    constructor(eRef) { super(eRef, tabpanelMetaData); }
    /**
     * @return {?}
     */
    ngOnInit() { this.baseOnInit(tabpanelMetaData); }
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    }
}
ExtTabpanelComponent.decorators = [
    { type: Component, args: [{
                selector: 'tabpanel',
                inputs: tabpanelMetaData.PROPERTIES,
                outputs: tabpanelMetaData.EVENTNAMES,
                providers: [{ provide: base, useExisting: forwardRef(() => ExtTabpanelComponent) }],
                template: '<ng-template #dynamic></ng-template>'
            }] }
];
/** @nocollapse */
ExtTabpanelComponent.ctorParameters = () => [
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0LXRhYnBhbmVsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BzZW5jaGEvZXh0LWFuZ3VsYXItbW9kZXJuLyIsInNvdXJjZXMiOlsibGliL2V4dC10YWJwYW5lbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFLTCxTQUFTLEVBQ1QsVUFBVSxFQUNWLFVBQVUsRUFDWCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQzlCLE1BQU0sT0FBTyxnQkFBZ0I7O0FBQ2Isc0JBQUssR0FBVyxVQUFVLENBQUM7QUFDM0IsaUNBQWdCLEdBQVE7SUFDcEMsU0FBUyxFQUFFLFFBQVE7SUFDbkIscUJBQXFCLEVBQUUsUUFBUTtJQUMvQixlQUFlLEVBQUUsUUFBUTtJQUN6QixZQUFZLEVBQUUsZUFBZTtJQUM3QixXQUFXLEVBQUUsNkJBQTZCO0lBQzFDLGVBQWUsRUFBRSxTQUFTO0lBQzFCLGFBQWEsRUFBRSxRQUFRO0lBQ3ZCLCtCQUErQixFQUFFLFNBQVM7SUFDMUMsYUFBYSxFQUFFLGdCQUFnQjtJQUMvQixRQUFRLEVBQUUsUUFBUTtJQUNsQixZQUFZLEVBQUUsZUFBZTtJQUM3QixlQUFlLEVBQUUsU0FBUztJQUMxQixjQUFjLEVBQUUsZ0JBQWdCO0lBQ2hDLGdCQUFnQixFQUFFLFFBQVE7SUFDMUIsaUJBQWlCLEVBQUUsUUFBUTtJQUMzQixXQUFXLEVBQUUsUUFBUTtJQUNyQixnQkFBZ0IsRUFBRSxRQUFRO0lBQzFCLGFBQWEsRUFBRSxTQUFTO0lBQ3hCLFFBQVEsRUFBRSxlQUFlO0lBQ3pCLFlBQVksRUFBRSw0Q0FBNEM7SUFDMUQsWUFBWSxFQUFFLFNBQVM7SUFDdkIsVUFBVSxFQUFFLFNBQVM7SUFDckIsU0FBUyxFQUFFLFFBQVE7SUFDbkIsTUFBTSxFQUFFLGlCQUFpQjtJQUN6QixNQUFNLEVBQUUsZUFBZTtJQUN2QixZQUFZLEVBQUUsU0FB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IjpbImltcG9ydCB7XG4gIE91dHB1dCxcbiAgT25Jbml0LFxuICBBZnRlckNvbnRlbnRJbml0LFxuICBPbkNoYW5nZXMsXG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgZm9yd2FyZFJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGJhc2UgfSBmcm9tICcuL2Jhc2UnO1xuZXhwb3J0IGNsYXNzIHRhYnBhbmVsTWV0YURhdGEge1xuICBwdWJsaWMgc3RhdGljIFhUWVBFOiBzdHJpbmcgPSAndGFicGFuZWwnO1xuICBwdWJsaWMgc3RhdGljIFBST1BFUlRJRVNPQkpFQ1Q6IGFueSA9IHtcbiAgICBcImFjdGlvbnNcIjogXCJPYmplY3RcIixcbiAgICBcImFjdGl2ZUNoaWxkVGFiSW5kZXhcIjogXCJOdW1iZXJcIixcbiAgICBcImFjdGl2ZUNvdW50ZXJcIjogXCJOdW1iZXJcIixcbiAgICBcImFjdGl2ZUl0ZW1cIjogXCJTdHJpbmcvTnVtYmVyXCIsXG4gICAgXCJhY3RpdmVUYWJcIjogXCJTdHJpbmcvTnVtYmVyL0V4dC5Db21wb25lbnRcIixcbiAgICBcImFsaWduT25TY3JvbGxcIjogXCJCb29sZWFuXCIsXG4gICAgXCJhbGlnblRhcmdldFwiOiBcIlN0cmluZ1wiLFxuICAgIFwiYWxsb3dGb2N1c2luZ0Rpc2FibGVkQ2hpbGRyZW5cIjogXCJCb29sZWFuXCIsXG4gICAgXCJhbHdheXNPblRvcFwiOiBcIkJvb2xlYW4vTnVtYmVyXCIsXG4gICAgXCJhbmNob3JcIjogXCJTdHJpbmdcIixcbiAgICBcImFuY2hvclNpemVcIjogXCJOdW1iZXIvT2JqZWN0XCIsXG4gICAgXCJhbmltYXRlU2hhZG93XCI6IFwiQm9vbGVhblwiLFxuICAgIFwiYW5pbUNvbGxhcHNlXCI6IFwiQm9vbGVhbi9OdW1iZXJcIixcbiAgICBcImFyaWFBdHRyaWJ1dGVzXCI6IFwiT2JqZWN0XCIsXG4gICAgXCJhcmlhRGVzY3JpYmVkQnlcIjogXCJTdHJpbmdcIixcbiAgICBcImFyaWFMYWJlbFwiOiBcIlN0cmluZ1wiLFxuICAgIFwiYXJpYUxhYmVsbGVkQnlcIjogXCJTdHJpbmdcIixcbiAgICBcImF1dG9EZXN0cm95XCI6IFwiQm9vbGVhblwiLFxuICAgIFwiYXV0b0VsXCI6IFwiU3RyaW5nL09iamVjdFwiLFxuICAgIFwiYXV0b1JlbmRlclwiOiBcIkJvb2xlYW4vU3RyaW5nL0hUTUxFbGVtZW50L0V4dC5kb20uRWxlbWVudFwiLFxuICAgIFwiYXV0b1Njcm9sbFwiOiBcIkJvb2xlYW5cIixcbiAgICBcImF1dG9TaG93XCI6IFwiQm9vbGVhblwiLFxuICAgIFwiYmFzZUNsc1wiOiBcIlN0cmluZ1wiLFxuICAgIFwiYmJhclwiOiBcIk9iamVjdC9PYmplY3RbXVwiLFxuICAgIFwiYmluZFwiOiBcIk9iamVjdC9TdHJpbmdcIixcbiAgICBcImJvZHlCb3JkZXJcIjogXCJCb29sZWFuXCIsXG4gICAgXCJib2R5Q2xzXCI6IFwiU3RyaW5nL1N0cmluZ1tdXCIsXG4gICAgXCJib2R5UGFkZGluZ1wiOiBcIk51bWJlci9TdHJpbmdcIixcbiAgICBcImJvZHlTdHlsZVwiOiBcIlN0cmluZy9PYmplY3QvRnVuY3Rpb25cIixcbiAgICBcImJvcmRlclwiOiBcIkJvb2xlYW5cIixcbiAgICBcImJ1YmJsZUV2ZW50c1wiOiBcIlN0cmluZ1tdXCIsXG4gICAgXCJidXR0b25BbGlnblwiOiBcIlN0cmluZ1wiLFxuICAgIFwiYnV0dG9uc1wiOiBcIk9iamVjdFtdXCIsXG4gICAgXCJjaGlsZEVsc1wiOiBcIk9iamVjdC9TdHJpbmdbXS9PYmplY3RbXVwiLFxuICAgIFwiY2xvc2FibGVcIjogXCJCb29sZWFuXCIsXG4gICAgXCJjbG9zZUFjdGlvblwiOiBcIlN0cmluZ1wiLFxuICAgIFwiY2xvc2VUb29sVGV4dFwiOiBcIlN0cmluZ1wiLFxuICAgIFwiY2xzXCI6IFwiU3RyaW5nL1N0cmluZ1tdXCIsXG4gICAgXCJjb2xsYXBzZWRcIjogXCJCb29sZWFuXCIsXG4gICAgXCJjb2xsYXBzZWRDbHNcIjogXCJTdHJpbmdcIixcbiAgICBcImNvbGxhcHNlRGlyZWN0aW9uXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJjb2xsYXBzZUZpcnN0XCI6IFwiQm9vbGVhblwiLFxuICAgIFwiY29sbGFwc2VNb2RlXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJjb2xsYXBzZVRvb2xUZXh0XCI6IFwiU3RyaW5nXCIsXG4gICAgXCJjb2xsYXBzaWJsZVwiOiBcIkJvb2xlYW5cIixcbiAgICBcImNvbHVtbldpZHRoXCI6IFwiTnVtYmVyXCIsXG4gICAgXCJjb21wb25lbnRDbHNcIjogXCJTdHJpbmdcIixcbiAgICBcImNvbXBvbmVudExheW91dFwiOiBcIlN0cmluZy9PYmplY3RcIixcbiAgICBcImNvbnN0cmFpblwiOiBcIkJvb2xlYW5cIixcbiAgICBcImNvbnN0cmFpbkhlYWRlclwiOiBcIkJvb2xlYW5cIixcbiAgICBcImNvbnN0cmFpbnRJbnNldHNcIjogXCJPYmplY3QvU3RyaW5nXCIsXG4gICAgXCJjb25zdHJhaW5Ub1wiOiBcIkV4dC51dGlsLlJlZ2lvbi9FeHQuZG9tLkVsZW1lbnRcIixcbiAgICBcImNvbnRlbnRFbFwiOiBcIlN0cmluZ1wiLFxuICAgIFwiY29udHJvbGxlclwiOiBcIlN0cmluZy9PYmplY3QvRXh0LmFwcC5WaWV3Q29udHJvbGxlclwiLFxuICAgIFwiZGF0YVwiOiBcIk9iamVjdFwiLFxuICAgIFwiZGVmYXVsdEFsaWduXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJkZWZhdWx0QnV0dG9uXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJkZWZhdWx0QnV0dG9uVGFyZ2V0XCI6IFwiU3RyaW5nXCIsXG4gICAgXCJkZWZhdWx0RG9ja1dlaWdodHNcIjogXCJPYmplY3RcIixcbiAgICBcImRlZmF1bHRGb2N1c1wiOiBcIlN0cmluZ1wiLFxuICAgIFwiZGVmYXVsdExpc3RlbmVyU2NvcGVcIjogXCJCb29sZWFuXCIsXG4gICAgXCJkZWZhdWx0c1wiOiBcIk9iamVjdC9GdW5jdGlvblwiLFxuICAgIFwiZGVmYXVsdFR5cGVcIjogXCJTdHJpbmdcIixcbiAgICBcImRlZmVycmVkUmVuZGVyXCI6IFwiQm9vbGVhblwiLFxuICAgIFwiZGV0YWNoT25SZW1vdmVcIjogXCJCb29sZWFuXCIsXG4gICAgXCJkaXNhYmxlZFwiOiBcIkJvb2xlYW5cIixcbiAgICBcImRpc2FibGVkQ2xzXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJkb2NrXCI6IFwiJ3RvcCcvJ2JvdHRvbScvJ2xlZnQnLydyaWdodCdcIixcbiAgICBcImRvY2tlZEl0ZW1zXCI6IFwiT2JqZWN0L09iamVjdFtdXCIsXG4gICAgXCJkcmFnZ2FibGVcIjogXCJCb29sZWFuL09iamVjdFwiLFxuICAgIFwiZXhwYW5kVG9vbFRleHRcIjogXCJTdHJpbmdcIixcbiAgICBcImZiYXJcIjogXCJPYmplY3QvT2JqZWN0W11cIixcbiAgICBcImZpeGVkXCI6IFwiQm9vbGVhblwiLFxuICAgIFwiZmxleFwiOiBcIk51bWJlclwiLFxuICAgIFwiZmxvYXRhYmxlXCI6IFwiQm9vbGVhblwiLFxuICAgIFwiZmxvYXRpbmdcIjogXCJCb29sZWFuXCIsXG4gICAgXCJmb2N1c2FibGVDb250YWluZXJcIjogXCJCb29sZWFuXCIsXG4gICAgXCJmb2N1c0Nsc1wiOiBcIlN0cmluZ1wiLFxuICAgIFwiZm9jdXNPblRvRnJvbnRcIjogXCJCb29sZWFuXCIsXG4gICAgXCJmb3JtQmluZFwiOiBcIkJvb2xlYW5cIixcbiAgICBcImZyYW1lXCI6IFwiQm9vbGVhblwiLFxuICAgIFwiZnJhbWVIZWFkZXJcIjogXCJCb29sZWFuXCIsXG4gICAgXCJnbHlwaFwiOiBcIk51bWJlci9TdHJpbmdcIixcbiAgICBcImhlYWRlclwiOiBcIkJvb2xlYW4vT2JqZWN0XCIsXG4gICAgXCJoZWFkZXJPdmVyQ2xzXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJoZWFkZXJQb3NpdGlvblwiOiBcIid0b3AnLydib3R0b20nLydsZWZ0Jy8ncmlnaHQnXCIsXG4gICAgXCJoZWlnaHRcIjogXCJOdW1iZXJ8U3RyaW5nXCIsXG4gICAgXCJoaWRkZW5cIjogXCJCb29sZWFuXCIsXG4gICAgXCJoaWRlQ29sbGFwc2VUb29sXCI6IFwiQm9vbGVhblwiLFxuICAgIFwiaGlkZU1vZGVcIjogXCJTdHJpbmdcIixcbiAgICBcImh0bWxcIjogXCJTdHJpbmcvT2JqZWN0XCIsXG4gICAgXCJpY29uXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJpY29uQWxpZ25cIjogXCIndG9wJy8ncmlnaHQnLydib3R0b20nLydsZWZ0J1wiLFxuICAgIFwiaWNvbkNsc1wiOiBcIlN0cmluZ1wiLFxuICAgIFwiaWRcIjogXCJTdHJpbmdcIixcbiAgICBcImluYWN0aXZlQ2hpbGRUYWJJbmRleFwiOiBcIk51bWJlclwiLFxuICAgIFwiaXRlbUNsc1wiOiBcIlN0cmluZ1wiLFxuICAgIFwiaXRlbUlkXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJpdGVtc1wiOiBcIk9iamVjdC9PYmplY3RbXVwiLFxuICAgIFwia2V5TWFwXCI6IFwiT2JqZWN0XCIsXG4gICAgXCJrZXlNYXBFbmFibGVkXCI6IFwiQm9vbGVhblwiLFxuICAgIFwia2V5TWFwVGFyZ2V0XCI6IFwiU3RyaW5nXCIsXG4gICAgXCJsYXlvdXRcIjogXCJFeHQuZW51bXMuTGF5b3V0L09iamVjdFwiLFxuICAgIFwibGJhclwiOiBcIk9iamVjdC9PYmplY3RbXVwiLFxuICAgIFwibGlxdWlkTGF5b3V0XCI6IFwiQm9vbGVhblwiLFxuICAgIFwibGlzdGVuZXJzXCI6IFwiT2JqZWN0XCIsXG4gICAgXCJsaXZlRHJhZ1wiOiBcIkJvb2xlYW5cIixcbiAgICBcImxvYWRlclwiOiBcIkV4dC5Db21wb25lbnRMb2FkZXIvT2JqZWN0XCIsXG4gICAgXCJtYWludGFpblRpdGxlUG9zaXRpb25cIjogXCJCb29sZWFuXCIsXG4gICAgXCJtYW5hZ2VIZWlnaHRcIjogXCJCb29sZWFuXCIsXG4gICAgXCJtYXJnaW5cIjogXCJOdW1iZXIvU3RyaW5nXCIsXG4gICAgXCJtYXNrRGVmYXVsdHNcIjogXCJPYmplY3RcIixcbiAgICBcIm1hc2tFbGVtZW50XCI6IFwiU3RyaW5nXCIsXG4gICAgXCJtYXhIZWlnaHRcIjogXCJOdW1iZXJcIixcbiAgICBcIm1heFRhYldpZHRoXCI6IFwiTnVtYmVyXCIsXG4gICAgXCJtYXhXaWR0aFwiOiBcIk51bWJlclwiLFxuICAgIFwibWluQnV0dG9uV2lkdGhcIjogXCJOdW1iZXJcIixcbiAgICBcIm1pbkhlaWdodFwiOiBcIk51bWJlclwiLFxuICAgIFwibWluVGFiV2lkdGhcIjogXCJOdW1iZXJcIixcbiAgICBcIm1pbldpZHRoXCI6IFwiTnVtYmVyXCIsXG4gICAgXCJtb2RhbFwiOiBcIkJvb2xlYW5cIixcbiAgICBcIm1vZGVsVmFsaWRhdGlvblwiOiBcIkJvb2xlYW5cIixcbiAgICBcIm5hbWVhYmxlXCI6IFwiQm9vbGVhblwiLFxuICAgIFwibmFtZUhvbGRlclwiOiBcIkJvb2xlYW5cIixcbiAgICBcIm92ZXJDbHNcIjogXCJTdHJpbmdcIixcbiAgICBcIm92ZXJmbG93WFwiOiBcIlN0cmluZ1wiLFxuICAgIFwib3ZlcmZsb3dZXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJvdmVybGFwSGVhZGVyXCI6IFwiQm9vbGVhblwiLFxuICAgIFwicGFkZGluZ1wiOiBcIk51bWJlci9TdHJpbmdcIixcbiAgICBcInBsYWNlaG9sZGVyXCI6IFwiRXh0LkNvbXBvbmVudC9PYmplY3RcIixcbiAgICBcInBsYWNlaG9sZGVyQ29sbGFwc2VIaWRlTW9kZVwiOiBcIk51bWJlclwiLFxuICAgIFwicGxhaW5cIjogXCJCb29sZWFuXCIsXG4gICAgXCJwbHVnaW5zXCI6IFwiQXJyYXkvRXh0LmVudW1zLlBsdWdpbi9PYmplY3QvRXh0LnBsdWdpbi5BYnN0cmFjdFwiLFxuICAgIFwicHJldmVudEhlYWRlclwiOiBcIkJvb2xlYW5cIixcbiAgICBcInB1Ymxpc2hlc1wiOiBcIlN0cmluZy9TdHJpbmdbXS9PYmplY3RcIixcbiAgICBcInJiYXJcIjogXCJPYmplY3QvT2JqZWN0W11cIixcbiAgICBcInJlZmVyZW5jZVwiOiBcIlN0cmluZ1wiLFxuICAgIFwicmVmZXJlbmNlSG9sZGVyXCI6IFwiQm9vbGVhblwiLFxuICAgIFwicmVnaW9uXCI6IFwiJ25vcnRoJy8nc291dGgnLydlYXN0Jy8nd2VzdCcvJ2NlbnRlcidcIixcbiAgICBcInJlbW92ZVBhbmVsSGVhZGVyXCI6IFwiQm9vbGVhblwiLFxuICAgIFwicmVuZGVyQ29uZmlnXCI6IFwiT2JqZWN0XCIsXG4gICAgXCJyZW5kZXJEYXRhXCI6IFwiT2JqZWN0XCIsXG4gICAgXCJyZW5kZXJTZWxlY3RvcnNcIjogXCJPYmplY3RcIixcbiAgICBcInJlbmRlclRvXCI6IFwiU3RyaW5nL0hUTUxFbGVtZW50L0V4dC5kb20uRWxlbWVudFwiLFxuICAgIFwicmVuZGVyVHBsXCI6IFwiRXh0LlhUZW1wbGF0ZS9TdHJpbmcvU3RyaW5nW11cIixcbiAgICBcInJlc2V0Rm9jdXNQb3NpdGlvblwiOiBcIkJvb2xlYW5cIixcbiAgICBcInJlc2l6YWJsZVwiOiBcIkJvb2xlYW4vT2JqZWN0XCIsXG4gICAgXCJyZXNpemVIYW5kbGVzXCI6IFwiU3RyaW5nXCIsXG4gICAgXCJzYXZlRGVsYXlcIjogXCJOdW1iZXJcIixcbiAgICBcInNjcm9sbGFibGVcIjogXCJCb29sZWFuL1N0cmluZy9PYmplY3RcIixcbiAgICBcInNlc3Npb25cIjogXCJCb29sZWFuL09iamVjdC9FeHQuZGF0YS5TZXNzaW9uXCIsXG4gICAgXCJzaGFkb3dcIjogXCJTdHJpbmcvQm9vbGVhblwiLFxuICAgIFwic2hhZG93T2Zmc2V0XCI6IFwiTnVtYmVyXCIsXG4gICAgXCJzaGFyZWFibGVOYW1lXCI6IFwiQm9vbGVhblwiLFxuICAgIFwic2hpbVwiOiBcIkJvb2xlYW5cIixcbiAgICBcInNocmlua1dyYXBcIjogXCJCb29sZWFuL051bWJlclwiLFxuICAgIFwic2hyaW5rV3JhcERvY2tcIjogXCJCb29sZWFuL051bWJlclwiLFxuICAgIFwic2ltcGxlRHJhZ1wiOiBcIkJvb2xlYW5cIixcbiAgICBcInN0YXRlRXZlbnRzXCI6IFwiU3RyaW5nW11cIixcbiAgICBcInN0YXRlZnVsXCI6IFwiQm9vbGVhbi9PYmplY3RcIixcbiAgICBcInN0YXRlSWRcIjogXCJTdHJpbmdcIixcbiAgICBcInN0eWxlXCI6IFwiU3RyaW5nL09iamVjdFwiLFxuICAgIFwic3VzcGVuZExheW91dFwiOiBcIkJvb2xlYW5cIixcbiAgICBcInRhYkJhclwiOiBcIk9iamVjdFwiLFxuICAgIFwidGFiQmFySGVhZGVyUG9zaXRpb25cIjogXCJOdW1iZXJcIixcbiAgICBcInRhYkd1YXJkXCI6IFwiQm9vbGVhblwiLFxuICAgIFwidGFiSW5kZXhcIjogXCJOdW1iZXJcIixcbiAgICBcInRhYlBvc2l0aW9uXCI6IFwiJ3RvcCcvJ2JvdHRvbScvJ2xlZnQnLydyaWdodCdcIixcbiAgICBcInRhYlJvdGF0aW9uXCI6IFwiJ2RlZmF1bHQnLzAvMS8yXCIsXG4gICAgXCJ0YWJTdHJldGNoTWF4XCI6IFwiQm9vbGVhblwiLFxuICAgIFwidGJhclwiOiBcIk9iamVjdC9PYmplY3RbXVwiLFxuICAgIFwidGl0bGVcIjogXCJTdHJpbmcvRXh0LnBhbmVsLlRpdGxlXCIsXG4gICAgXCJ0aXRsZUFsaWduXCI6IFwiJ2xlZnQnLydjZW50ZXInLydyaWdodCdcIixcbiAgICBcInRpdGxlQ29sbGFwc2VcIjogXCJCb29sZWFuXCIsXG4gICAgXCJ0aXRsZVBvc2l0aW9uXCI6IFwiTnVtYmVyXCIsXG4gICAgXCJ0aXRsZVJvdGF0aW9uXCI6IFwiJ2RlZmF1bHQnLzAvMS8yXCIsXG4gICAgXCJ0b0Zyb250T25TaG93XCI6IFwiQm9vbGVhblwiLFxuICAgIFwidG9vbHNcIjogXCJPYmplY3RbXS9FeHQucGFuZWwuVG9vbFtdXCIsXG4gICAgXCJ0b3VjaEFjdGlvblwiOiBcIk9iamVjdFwiLFxuICAgIFwidHBsXCI6IFwiRXh0LlhUZW1wbGF0ZS9FeHQuVGVtcGxhdGUvU3RyaW5nL1N0cmluZ1tdXCIsXG4gICAgXCJ0cGxXcml0ZU1vZGVcIjogXCJTdHJpbmdcIixcbiAgICBcInR3b1dheUJpbmRhYmxlXCI6IFwiU3RyaW5nL1N0cmluZ1tdL09iamVjdFwiLFxuICAgIFwidWlcIjogXCJTdHJpbmdcIixcbiAgICBcInVpQ2xzXCI6IFwiU3RyaW5nW11cIixcbiAgICBcInVzZXJDbHNcIjogXCJTdHJpbmcvU3RyaW5nW11cIixcbiAgICBcInZpZXdNb2RlbFwiOiBcIlN0cmluZy9PYmplY3QvRXh0LmFwcC5WaWV3TW9kZWxcIixcbiAgICBcIndlaWdodFwiOiBcIk51bWJlclwiLFxuICAgIFwid2lkdGhcIjogXCJOdW1iZXJ8U3RyaW5nXCIsXG4gICAgXCJ4dHlwZVwiOiBcIkV4dC5lbnVtcy5XaWRnZXRcIixcbiAgICBcInBsYXRmb3JtQ29uZmlnXCI6IFwiT2JqZWN0XCIsXG4gICAgXCJmaXRUb1BhcmVudFwiOiBcIkJvb2xlYW5cIixcbiAgICBcImNvbmZpZ1wiOiBcIk9iamVjdFwiLFxufTtcbiAgcHVibGljIHN0YXRpYyBQUk9QRVJUSUVTOiBzdHJpbmdbXSA9IFtcbiAgICAnYWN0aW9ucycsXG4gICAgJ2FjdGl2ZUNoaWxkVGFiSW5kZXgnLFxuICAgICdhY3RpdmVDb3VudGVyJyxcbiAgICAnYWN0aXZlSXRlbScsXG4gICAgJ2FjdGl2ZVRhYicsXG4gICAgJ2FsaWduT25TY3JvbGwnLFxuICAgICdhbGlnblRhcmdldCcsXG4gICAgJ2FsbG93Rm9jdXNpbmdEaXNhYmxlZENoaWxkcmVuJyxcbiAgICAnYWx3YXlzT25Ub3AnLFxuICAgICdhbmNob3InLFxuICAgICdhbmNob3JTaXplJyxcbiAgICAnYW5pbWF0ZVNoYWRvdycsXG4gICAgJ2FuaW1Db2xsYXBzZScsXG4gICAgJ2FyaWFBdHRyaWJ1dGVzJyxcbiAgICAnYXJpYURlc2NyaWJlZEJ5JyxcbiAgICAnYXJpYUxhYmVsJyxcbiAgICAnYXJpYUxhYmVsbGVkQnknLFxuICAgICdhdXRvRGVzdHJveScsXG4gICAgJ2F1dG9FbCcsXG4gICAgJ2F1dG9SZW5kZXInLFxuICAgICdhdXRvU2Nyb2xsJyxcbiAgICAnYXV0b1Nob3cnLFxuICAgICdiYXNlQ2xzJyxcbiAgICAnYmJhcicsXG4gICAgJ2JpbmQnLFxuICAgICdib2R5Qm9yZGVyJyxcbiAgICAnYm9keUNscycsXG4gICAgJ2JvZHlQYWRkaW5nJyxcbiAgICAnYm9keVN0eWxlJyxcbiAgICAnYm9yZGVyJyxcbiAgICAnYnViYmxlRXZlbnRzJyxcbiAgICAnYnV0dG9uQWxpZ24nLFxuICAgICdidXR0b25zJyxcbiAgICAnY2hpbGRFbHMnLFxuICAgICdjbG9zYWJsZScsXG4gICAgJ2Nsb3NlQWN0aW9uJyxcbiAgICAnY2xvc2VUb29sVGV4dCcsXG4gICAgJ2NscycsXG4gICAgJ2NvbGxhcHNlZCcsXG4gICAgJ2NvbGxhcHNlZENscycsXG4gICAgJ2NvbGxhcHNlRGlyZWN0aW9uJyxcbiAgICAnY29sbGFwc2VGaXJzdCcsXG4gICAgJ2NvbGxhcHNlTW9kZScsXG4gICAgJ2NvbGxhcHNlVG9vbFRleHQnLFxuICAgICdjb2xsYXBzaWJsZScsXG4gICAgJ2NvbHVtbldpZHRoJyxcbiAgICAnY29tcG9uZW50Q2xzJyxcbiAgICAnY29tcG9uZW50TGF5b3V0JyxcbiAgICAnY29uc3RyYWluJyxcbiAgICAnY29uc3RyYWluSGVhZGVyJyxcbiAgICAnY29uc3RyYWludEluc2V0cycsXG4gICAgJ2NvbnN0cmFpblRvJyxcbiAgICAnY29udGVudEVsJyxcbiAgICAnY29udHJvbGxlcicsXG4gICAgJ2RhdGEnLFxuICAgICdkZWZhdWx0QWxpZ24nLFxuICAgICdkZWZhdWx0QnV0dG9uJyxcbiAgICAnZGVmYXVsdEJ1dHRvblRhcmdldCcsXG4gICAgJ2RlZmF1bHREb2NrV2VpZ2h0cycsXG4gICAgJ2RlZmF1bHRGb2N1cycsXG4gICAgJ2RlZmF1bHRMaXN0ZW5lclNjb3BlJyxcbiAgICAnZGVmYXVsdHMnLFxuICAgICdkZWZhdWx0VHlwZScsXG4gICAgJ2RlZmVycmVkUmVuZGVyJyxcbiAgICAnZGV0YWNoT25SZW1vdmUnLFxuICAgICdkaXNhYmxlZCcsXG4gICAgJ2Rpc2FibGVkQ2xzJyxcbiAgICAnZG9jaycsXG4gICAgJ2RvY2tlZEl0ZW1zJyxcbiAgICAnZHJhZ2dhYmxlJyxcbiAgICAnZXhwYW5kVG9vbFRleHQnLFxuICAgICdmYmFyJyxcbiAgICAnZml4ZWQnLFxuICAgICdmbGV4JyxcbiAgICAnZmxvYXRhYmxlJyxcbiAgICAnZmxvYXRpbmcnLFxuICAgICdmb2N1c2FibGVDb250YWluZXInLFxuICAgICdmb2N1c0NscycsXG4gICAgJ2ZvY3VzT25Ub0Zyb250JyxcbiAgICAnZm9ybUJpbmQnLFxuICAgICdmcmFtZScsXG4gICAgJ2ZyYW1lSGVhZGVyJyxcbiAgICAnZ2x5cGgnLFxuICAgICdoZWFkZXInLFxuICAgICdoZWFkZXJPdmVyQ2xzJyxcbiAgICAnaGVhZGVyUG9zaXRpb24nLFxuICAgICdoZWlnaHQnLFxuICAgICdoaWRkZW4nLFxuICAgICdoaWRlQ29sbGFwc2VUb29sJyxcbiAgICAnaGlkZU1vZGUnLFxuICAgICdodG1sJyxcbiAgICAnaWNvbicsXG4gICAgJ2ljb25BbGlnbicsXG4gICAgJ2ljb25DbHMnLFxuICAgICdpZCcsXG4gICAgJ2luYWN0aXZlQ2hpbGRUYWJJbmRleCcsXG4gICAgJ2l0ZW1DbHMnLFxuICAgICdpdGVtSWQnLFxuICAgICdpdGVtcycsXG4gICAgJ2tleU1hcCcsXG4gICAgJ2tleU1hcEVuYWJsZWQnLFxuICAgICdrZXlNYXBUYXJnZXQnLFxuICAgICdsYXlvdXQnLFxuICAgICdsYmFyJyxcbiAgICAnbGlxdWlkTGF5b3V0JyxcbiAgICAnbGlzdGVuZXJzJyxcbiAgICAnbGl2ZURyYWcnLFxuICAgICdsb2FkZXInLFxuICAgICdtYWludGFpblRpdGxlUG9zaXRpb24nLFxuICAgICdtYW5hZ2VIZWlnaHQnLFxuICAgICdtYXJnaW4nLFxuICAgICdtYXNrRGVmYXVsdHMnLFxuICAgICdtYXNrRWxlbWVudCcsXG4gICAgJ21heEhlaWdodCcsXG4gICAgJ21heFRhYldpZHRoJyxcbiAgICAnbWF4V2lkdGgnLFxuICAgICdtaW5CdXR0b25XaWR0aCcsXG4gICAgJ21pbkhlaWdodCcsXG4gICAgJ21pblRhYldpZHRoJyxcbiAgICAnbWluV2lkdGgnLFxuICAgICdtb2RhbCcsXG4gICAgJ21vZGVsVmFsaWRhdGlvbicsXG4gICAgJ25hbWVhYmxlJyxcbiAgICAnbmFtZUhvbGRlcicsXG4gICAgJ292ZXJDbHMnLFxuICAgICdvdmVyZmxvd1gnLFxuICAgICdvdmVyZmxvd1knLFxuICAgICdvdmVybGFwSGVhZGVyJyxcbiAgICAncGFkZGluZycsXG4gICAgJ3BsYWNlaG9sZGVyJyxcbiAgICAncGxhY2Vob2xkZXJDb2xsYXBzZUhpZGVNb2RlJyxcbiAgICAncGxhaW4nLFxuICAgICdwbHVnaW5zJyxcbiAgICAncHJldmVudEhlYWRlcicsXG4gICAgJ3B1Ymxpc2hlcycsXG4gICAgJ3JiYXInLFxuICAgICdyZWZlcmVuY2UnLFxuICAgICdyZWZlcmVuY2VIb2xkZXInLFxuICAgICdyZWdpb24nLFxuICAgICdyZW1vdmVQYW5lbEhlYWRlcicsXG4gICAgJ3JlbmRlckNvbmZpZycsXG4gICAgJ3JlbmRlckRhdGEnLFxuICAgICdyZW5kZXJTZWxlY3RvcnMnLFxuICAgICdyZW5kZXJUbycsXG4gICAgJ3JlbmRlclRwbCcsXG4gICAgJ3Jlc2V0Rm9jdXNQb3NpdGlvbicsXG4gICAgJ3Jlc2l6YWJsZScsXG4gICAgJ3Jlc2l6ZUhhbmRsZXMnLFxuICAgICdzYXZlRGVsYXknLFxuICAgICdzY3JvbGxhYmxlJyxcbiAgICAnc2Vzc2lvbicsXG4gICAgJ3NoYWRvdycsXG4gICAgJ3NoYWRvd09mZnNldCcsXG4gICAgJ3NoYXJlYWJsZU5hbWUnLFxuICAgICdzaGltJyxcbiAgICAnc2hyaW5rV3JhcCcsXG4gICAgJ3Nocmlua1dyYXBEb2NrJyxcbiAgICAnc2ltcGxlRHJhZycsXG4gICAgJ3N0YXRlRXZlbnRzJyxcbiAgICAnc3RhdGVmdWwnLFxuICAgICdzdGF0ZUlkJyxcbiAgICAnc3R5bGUnLFxuICAgICdzdXNwZW5kTGF5b3V0JyxcbiAgICAndGFiQmFyJyxcbiAgICAndGFiQmFySGVhZGVyUG9zaXRpb24nLFxuICAgICd0YWJHdWFyZCcsXG4gICAgJ3RhYkluZGV4JyxcbiAgICAndGFiUG9zaXRpb24nLFxuICAgICd0YWJSb3RhdGlvbicsXG4gICAgJ3RhYlN0cmV0Y2hNYXgnLFxuICAgICd0YmFyJyxcbiAgICAndGl0bGUnLFxuICAgICd0aXRsZUFsaWduJyxcbiAgICAndGl0bGVDb2xsYXBzZScsXG4gICAgJ3RpdGxlUG9zaXRpb24nLFxuICAgICd0aXRsZVJvdGF0aW9uJyxcbiAgICAndG9Gcm9udE9uU2hvdycsXG4gICAgJ3Rvb2xzJyxcbiAgICAndG91Y2hBY3Rpb24nLFxuICAgICd0cGwnLFxuICAgICd0cGxXcml0ZU1vZGUnLFxuICAgICd0d29XYXlCaW5kYWJsZScsXG4gICAgJ3VpJyxcbiAgICAndWlDbHMnLFxuICAgICd1c2VyQ2xzJyxcbiAgICAndmlld01vZGVsJyxcbiAgICAnd2VpZ2h0JyxcbiAgICAnd2lkdGgnLFxuICAgICd4dHlwZScsXG4gICAgJ3BsYXRmb3JtQ29uZmlnJyxcbiAgICAnZml0VG9QYXJlbnQnLFxuICAgICdjb25maWcnXG5dO1xuICBwdWJsaWMgc3RhdGljIEVWRU5UUzogYW55W10gPSBbXG5cdFx0e25hbWU6J2FjdGl2YXRlJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCd9LFxuXHRcdHtuYW1lOidhZGQnLHBhcmFtZXRlcnM6J3RhYnBhbmVsLGNvbXBvbmVudCxpbmRleCd9LFxuXHRcdHtuYW1lOidhZGRlZCcscGFyYW1ldGVyczondGFicGFuZWwsY29udGFpbmVyLHBvcyd9LFxuXHRcdHtuYW1lOidhZnRlcmxheW91dCcscGFyYW1ldGVyczondGFicGFuZWwsbGF5b3V0J30sXG5cdFx0e25hbWU6J2FmdGVybGF5b3V0YW5pbWF0aW9uJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCd9LFxuXHRcdHtuYW1lOidhZnRlcnJlbmRlcicscGFyYW1ldGVyczondGFicGFuZWwnfSxcblx0XHR7bmFtZTonYmVmb3JlYWN0aXZhdGUnLHBhcmFtZXRlcnM6J3RhYnBhbmVsJ30sXG5cdFx0e25hbWU6J2JlZm9yZWFkZCcscGFyYW1ldGVyczondGFicGFuZWwsY29tcG9uZW50LGluZGV4J30sXG5cdFx0e25hbWU6J2JlZm9yZWNsb3NlJyxwYXJhbWV0ZXJzOidwYW5lbCd9LFxuXHRcdHtuYW1lOidiZWZvcmVjb2xsYXBzZScscGFyYW1ldGVyczoncCxkaXJlY3Rpb24sYW5pbWF0ZSd9LFxuXHRcdHtuYW1lOidiZWZvcmVkZWFjdGl2YXRlJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCd9LFxuXHRcdHtuYW1lOidiZWZvcmVkZXN0cm95JyxwYXJhbWV0ZXJzOid0YWJwYW5lbCd9LFxuXHRcdHtuYW1lOidiZWZvcmVleHBhbmQnLHBhcmFtZXRlcnM6J3AsYW5pbWF0ZSd9LFxuXHRcdHtuYW1lOidiZWZvcmVoaWRlJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCd9LFxuXHRcdHtuYW1lOidiZWZvcmVyZW1vdmUnLHBhcmFtZXRlcnM6J3RhYnBhbmVsLGNvbXBvbmVudCd9LFxuXHRcdHtuYW1lOidiZWZvcmVyZW5kZXInLHBhcmFtZXRlcnM6J3RhYnBhbmVsJ30sXG5cdFx0e25hbWU6J2JlZm9yZXNob3cnLHBhcmFtZXRlcnM6J3RhYnBhbmVsJ30sXG5cdFx0e25hbWU6J2JlZm9yZXN0YXRlcmVzdG9yZScscGFyYW1ldGVyczondGFicGFuZWwsc3RhdGUnfSxcblx0XHR7bmFtZTonYmVmb3Jlc3RhdGVzYXZlJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCxzdGF0ZSd9LFxuXHRcdHtuYW1lOidiZWZvcmV0YWJjaGFuZ2UnLHBhcmFtZXRlcnM6J3RhYlBhbmVsLG5ld0NhcmQsb2xkQ2FyZCd9LFxuXHRcdHtuYW1lOidibHVyJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCxldmVudCd9LFxuXHRcdHtuYW1lOidib3hyZWFkeScscGFyYW1ldGVyczondGFicGFuZWwsd2lkdGgsaGVpZ2h0J30sXG5cdFx0e25hbWU6J2NoaWxkbW92ZScscGFyYW1ldGVyczondGFicGFuZWwsY29tcG9uZW50LHByZXZJbmRleCxuZXdJbmRleCd9LFxuXHRcdHtuYW1lOidjbG9zZScscGFyYW1ldGVyczoncGFuZWwnfSxcblx0XHR7bmFtZTonY29sbGFwc2UnLHBhcmFtZXRlcnM6J3AnfSxcblx0XHR7bmFtZTonZGVhY3RpdmF0ZScscGFyYW1ldGVyczondGFicGFuZWwnfSxcblx0XHR7bmFtZTonZGVzdHJveScscGFyYW1ldGVyczondGFicGFuZWwnfSxcblx0XHR7bmFtZTonZGlzYWJsZScscGFyYW1ldGVyczondGFicGFuZWwnfSxcblx0XHR7bmFtZTonZG9ja2VkYWRkJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCxjb21wb25lbnQsaW5kZXgnfSxcblx0XHR7bmFtZTonZG9ja2VkcmVtb3ZlJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCxjb21wb25lbnQnfSxcblx0XHR7bmFtZTonZW5hYmxlJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCd9LFxuXHRcdHtuYW1lOidleHBhbmQnLHBhcmFtZXRlcnM6J3AnfSxcblx0XHR7bmFtZTonZmxvYXQnLHBhcmFtZXRlcnM6Jyd9LFxuXHRcdHtuYW1lOidmb2N1cycscGFyYW1ldGVyczondGFicGFuZWwsZXZlbnQnfSxcblx0XHR7bmFtZTonZm9jdXNlbnRlcicscGFyYW1ldGVyczondGFicGFuZWwsZXZlbnQnfSxcblx0XHR7bmFtZTonZm9jdXNsZWF2ZScscGFyYW1ldGVyczondGFicGFuZWwsZXZlbnQnfSxcblx0XHR7bmFtZTonZ2x5cGhjaGFuZ2UnLHBhcmFtZXRlcnM6J3RhYnBhbmVsLG5ld0dseXBoLG9sZEdseXBoJ30sXG5cdFx0e25hbWU6J2hpZGUnLHBhcmFtZXRlcnM6J3RhYnBhbmVsJ30sXG5cdFx0e25hbWU6J2ljb25hbGlnbmNoYW5nZScscGFyYW1ldGVyczondGFicGFuZWwsbmV3SWNvbkFsaWduLG9sZEljb25BbGlnbid9LFxuXHRcdHtuYW1lOidpY29uY2hhbmdlJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCxuZXdJY29uLG9sZEljb24nfSxcblx0XHR7bmFtZTonaWNvbmNsc2NoYW5nZScscGFyYW1ldGVyczondGFicGFuZWwsbmV3SWNvbkNscyxvbGRJY29uQ2xzJ30sXG5cdFx0e25hbWU6J21vdmUnLHBhcmFtZXRlcnM6J3RhYnBhbmVsLHgseSd9LFxuXHRcdHtuYW1lOidyZW1vdmUnLHBhcmFtZXRlcnM6J3RhYnBhbmVsLGNvbXBvbmVudCd9LFxuXHRcdHtuYW1lOidyZW1vdmVkJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCxvd25lckN0J30sXG5cdFx0e25hbWU6J3JlbmRlcicscGFyYW1ldGVyczondGFicGFuZWwnfSxcblx0XHR7bmFtZToncmVzaXplJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCx3aWR0aCxoZWlnaHQsb2xkV2lkdGgsb2xkSGVpZ2h0J30sXG5cdFx0e25hbWU6J3Nob3cnLHBhcmFtZXRlcnM6J3RhYnBhbmVsJ30sXG5cdFx0e25hbWU6J3N0YXRlcmVzdG9yZScscGFyYW1ldGVyczondGFicGFuZWwsc3RhdGUnfSxcblx0XHR7bmFtZTonc3RhdGVzYXZlJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCxzdGF0ZSd9LFxuXHRcdHtuYW1lOid0YWJjaGFuZ2UnLHBhcmFtZXRlcnM6J3RhYlBhbmVsLG5ld0NhcmQsb2xkQ2FyZCd9LFxuXHRcdHtuYW1lOid0aXRsZWFsaWduY2hhbmdlJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCxuZXdUaXRsZUFsaWduLG9sZFRpdGxlQWxpZ24nfSxcblx0XHR7bmFtZTondGl0bGVjaGFuZ2UnLHBhcmFtZXRlcnM6J3RhYnBhbmVsLG5ld1RpdGxlLG9sZFRpdGxlJ30sXG5cdFx0e25hbWU6J3RpdGxlcG9zaXRpb25jaGFuZ2UnLHBhcmFtZXRlcnM6J3RhYnBhbmVsLG5ld1RpdGxlUG9zaXRpb24sb2xkVGl0bGVQb3NpdGlvbid9LFxuXHRcdHtuYW1lOid0aXRsZXJvdGF0aW9uY2hhbmdlJyxwYXJhbWV0ZXJzOid0YWJwYW5lbCxuZXdUaXRsZVJvdGF0aW9uLG9sZFRpdGxlUm90YXRpb24nfSxcblx0XHR7bmFtZTondW5mbG9hdCcscGFyYW1ldGVyczonJ30sXG5cdFx0e25hbWU6J3JlYWR5JyxwYXJhbWV0ZXJzOicnfVxuXTtcbiAgcHVibGljIHN0YXRpYyBFVkVOVE5BTUVTOiBzdHJpbmdbXSA9IFtcblx0XHQnYWN0aXZhdGUnLFxuXHRcdCdhZGQnLFxuXHRcdCdhZGRlZCcsXG5cdFx0J2FmdGVybGF5b3V0Jyxcblx0XHQnYWZ0ZXJsYXlvdXRhbmltYXRpb24nLFxuXHRcdCdhZnRlcnJlbmRlcicsXG5cdFx0J2JlZm9yZWFjdGl2YXRlJyxcblx0XHQnYmVmb3JlYWRkJyxcblx0XHQnYmVmb3JlY2xvc2UnLFxuXHRcdCdiZWZvcmVjb2xsYXBzZScsXG5cdFx0J2JlZm9yZWRlYWN0aXZhdGUnLFxuXHRcdCdiZWZvcmVkZXN0cm95Jyxcblx0XHQnYmVmb3JlZXhwYW5kJyxcblx0XHQnYmVmb3JlaGlkZScsXG5cdFx0J2JlZm9yZXJlbW92ZScsXG5cdFx0J2JlZm9yZXJlbmRlcicsXG5cdFx0J2JlZm9yZXNob3cnLFxuXHRcdCdiZWZvcmVzdGF0ZXJlc3RvcmUnLFxuXHRcdCdiZWZvcmVzdGF0ZXNhdmUnLFxuXHRcdCdiZWZvcmV0YWJjaGFuZ2UnLFxuXHRcdCdibHVyJyxcblx0XHQnYm94cmVhZHknLFxuXHRcdCdjaGlsZG1vdmUnLFxuXHRcdCdjbG9zZScsXG5cdFx0J2NvbGxhcHNlJyxcblx0XHQnZGVhY3RpdmF0ZScsXG5cdFx0J2Rlc3Ryb3knLFxuXHRcdCdkaXNhYmxlJyxcblx0XHQnZG9ja2VkYWRkJyxcblx0XHQnZG9ja2VkcmVtb3ZlJyxcblx0XHQnZW5hYmxlJyxcblx0XHQnZXhwYW5kJyxcblx0XHQnZmxvYXQnLFxuXHRcdCdmb2N1cycsXG5cdFx0J2ZvY3VzZW50ZXInLFxuXHRcdCdmb2N1c2xlYXZlJyxcblx0XHQnZ2x5cGhjaGFuZ2UnLFxuXHRcdCdoaWRlJyxcblx0XHQnaWNvbmFsaWduY2hhbmdlJyxcblx0XHQnaWNvbmNoYW5nZScsXG5cdFx0J2ljb25jbHNjaGFuZ2UnLFxuXHRcdCdtb3ZlJyxcblx0XHQncmVtb3ZlJyxcblx0XHQncmVtb3ZlZCcsXG5cdFx0J3JlbmRlcicsXG5cdFx0J3Jlc2l6ZScsXG5cdFx0J3Nob3cnLFxuXHRcdCdzdGF0ZXJlc3RvcmUnLFxuXHRcdCdzdGF0ZXNhdmUnLFxuXHRcdCd0YWJjaGFuZ2UnLFxuXHRcdCd0aXRsZWFsaWduY2hhbmdlJyxcblx0XHQndGl0bGVjaGFuZ2UnLFxuXHRcdCd0aXRsZXBvc2l0aW9uY2hhbmdlJyxcblx0XHQndGl0bGVyb3RhdGlvbmNoYW5nZScsXG5cdFx0J3VuZmxvYXQnLFxuXHRcdCdyZWFkeSdcbl07XG59XG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICd0YWJwYW5lbCcsIFxuICBpbnB1dHM6IHRhYnBhbmVsTWV0YURhdGEuUFJPUEVSVElFUyxcbiAgb3V0cHV0czogdGFicGFuZWxNZXRhRGF0YS5FVkVOVE5BTUVTLFxuICBwcm92aWRlcnM6IFt7cHJvdmlkZTogYmFzZSwgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRXh0VGFicGFuZWxDb21wb25lbnQpfV0sXG4gIHRlbXBsYXRlOiAnPG5nLXRlbXBsYXRlICNkeW5hbWljPjwvbmctdGVtcGxhdGU+J1xufSlcbmV4cG9ydCBjbGFzcyBFeHRUYWJwYW5lbENvbXBvbmVudCBleHRlbmRzIGJhc2UgaW1wbGVtZW50cyBPbkluaXQsQWZ0ZXJDb250ZW50SW5pdCxPbkNoYW5nZXMge1xuICBjb25zdHJ1Y3RvcihlUmVmOkVsZW1lbnRSZWYpIHtzdXBlcihlUmVmLHRhYnBhbmVsTWV0YURhdGEpfVxuICBwdWJsaWMgbmdPbkluaXQoKSB7dGhpcy5iYXNlT25Jbml0KHRhYnBhbmVsTWV0YURhdGEpfVxuICAvL3B1YmxpYyBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7dGhpcy5iYXNlT25DaGFuZ2VzKGNoYW5nZXMpfVxuICBwdWJsaWMgbmdBZnRlckNvbnRlbnRJbml0KCkge1xuICAgIHRoaXMuYmFzZUFmdGVyQ29udGVudEluaXQoKVxuICAgIHRoaXNbJ3JlYWR5J10uZW1pdCh0aGlzKVxuICAgIH1cbn0iXX0=