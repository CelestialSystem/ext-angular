/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
export class fieldcontainerMetaData {
}
fieldcontainerMetaData.XTYPE = 'fieldcontainer';
fieldcontainerMetaData.PROPERTIESOBJECT = {
    "actions": "Object",
    "activeChildTabIndex": "Number",
    "activeCounter": "Number",
    "activeError": "String",
    "activeErrorsTpl": "String/String[]/Ext.XTemplate",
    "activeItem": "String/Number",
    "afterBodyEl": "String/Array/Ext.XTemplate",
    "afterLabelTextTpl": "String/Array/Ext.XTemplate",
    "afterLabelTpl": "String/Array/Ext.XTemplate",
    "afterSubTpl": "String/Array/Ext.XTemplate",
    "alignOnScroll": "Boolean",
    "alignTarget": "String",
    "allowFocusingDisabledChildren": "Boolean",
    "alwaysOnTop": "Boolean/Number",
    "anchor": "String",
    "anchorSize": "Number/Object",
    "animateShadow": "Boolean",
    "ariaAttributes": "Object",
    "ariaDescribedBy": "String",
    "ariaErrorText": "String",
    "ariaHelp": "String",
    "ariaLabel": "String",
    "ariaLabelledBy": "String",
    "autoDestroy": "Boolean",
    "autoEl": "String/Object",
    "autoFitErrors": "Boolean",
    "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
    "autoScroll": "Boolean",
    "autoShow": "Boolean",
    "baseBodyCls": "String",
    "baseCls": "String",
    "beforeBodyEl": "String/Array/Ext.XTemplate",
    "beforeLabelTextTpl": "String/Array/Ext.XTemplate",
    "beforeLabelTpl": "String/Array/Ext.XTemplate",
    "beforeSubTpl": "String/Array/Ext.XTemplate",
    "bind": "Object/String",
    "border": "Number/String/Boolean",
    "bubbleEvents": "String[]",
    "childEls": "Object/String[]/Object[]",
    "cls": "String/String[]",
    "columnWidth": "Number",
    "combineErrors": "Boolean",
    "combineLabels": "Boolean",
    "componentCls": "String",
    "componentLayout": "String/Object",
    "constrain": "Boolean",
    "constraintInsets": "Object/String",
    "constrainTo": "Ext.util.Region/Ext.dom.Element",
    "contentEl": "String",
    "controller": "String/Object/Ext.app.ViewController",
    "data": "Object",
    "defaultAlign": "String",
    "defaultFocus": "String",
    "defaultListenerScope": "Boolean",
    "defaults": "Object/Function",
    "defaultType": "String",
    "detachOnRemove": "Boolean",
    "disabled": "Boolean",
    "disabledCls": "String",
    "dock": "'top'/'bottom'/'left'/'right'",
    "draggable": "Boolean/Object",
    "errorMsgCls": "String",
    "fieldBodyCls": "String",
    "fieldDefaults": "Object",
    "fieldLabel": "String",
    "fixed": "Boolean",
    "flex": "Number",
    "floating": "Boolean",
    "focusableContainer": "Boolean",
    "focusCls": "String",
    "focusOnToFront": "Boolean",
    "formBind": "Boolean",
    "formItemCls": "String",
    "frame": "Boolean",
    "height": "Number|String",
    "hidden": "Boolean",
    "hideEmptyLabel": "Boolean",
    "hideLabel": "Boolean",
    "hideMode": "String",
    "html": "String/Object",
    "id": "String",
    "inactiveChildTabIndex": "Number",
    "invalidCls": "String",
    "itemId": "String",
    "items": "Object/Object[]",
    "keyMap": "Object",
    "keyMapEnabled": "Boolean",
    "keyMapTarget": "String",
    "labelableRenderTpl": "String/String[]/Ext.XTemplate",
    "labelAlign": "String",
    "labelAttrTpl": "String/Array/Ext.XTemplate",
    "labelCls": "String",
    "labelClsExtra": "String",
    "labelConnector": "String",
    "labelPad": "Number",
    "labelSeparator": "String",
    "labelStyle": "String",
    "labelWidth": "Number",
    "layout": "Ext.enums.Layout/Object",
    "liquidLayout": "Boolean",
    "listeners": "Object",
    "liveDrag": "Boolean",
    "loader": "Ext.ComponentLoader/Object",
    "margin": "Number/String",
    "maskDefaults": "Object",
    "maskElement": "String",
    "maxHeight": "Number",
    "maxWidth": "Number",
    "minHeight": "Number",
    "minWidth": "Number",
    "modal": "Boolean",
    "modelValidation": "Boolean",
    "msgTarget": "String",
    "nameable": "Boolean",
    "nameHolder": "Boolean",
    "overCls": "String",
    "overflowX": "String",
    "overflowY": "String",
    "padding": "Number/String",
    "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
    "preventMark": "Boolean",
    "publishes": "String/String[]/Object",
    "reference": "String",
    "referenceHolder": "Boolean",
    "region": "'north'/'south'/'east'/'west'/'center'",
    "renderConfig": "Object",
    "renderData": "Object",
    "renderSelectors": "Object",
    "renderTo": "String/HTMLElement/Ext.dom.Element",
    "renderTpl": "Ext.XTemplate/String/String[]",
    "resetFocusPosition": "Boolean",
    "resizable": "Boolean/Object",
    "resizeHandles": "String",
    "saveDelay": "Number",
    "scrollable": "Boolean/String/Object",
    "session": "Boolean/Object/Ext.data.Session",
    "shadow": "String/Boolean",
    "shadowOffset": "Number",
    "shareableName": "Boolean",
    "shim": "Boolean",
    "shrinkWrap": "Boolean/Number",
    "stateEvents": "String[]",
    "stateful": "Boolean/Object",
    "stateId": "String",
    "style": "String/Object",
    "suspendLayout": "Boolean",
    "tabGuard": "Boolean",
    "tabIndex": "Number",
    "toFrontOnShow": "Boolean",
    "touchAction": "Object",
    "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
    "tplWriteMode": "String",
    "twoWayBindable": "String/String[]/Object",
    "ui": "String",
    "uiCls": "String[]",
    "userCls": "String/String[]",
    "viewModel": "String/Object/Ext.app.ViewModel",
    "weight": "Number",
    "width": "Number|String",
    "xtype": "Ext.enums.Widget",
    "platformConfig": "Object",
    "fitToParent": "Boolean",
    "config": "Object",
};
fieldcontainerMetaData.PROPERTIES = [
    'actions',
    'activeChildTabIndex',
    'activeCounter',
    'activeError',
    'activeErrorsTpl',
    'activeItem',
    'afterBodyEl',
    'afterLabelTextTpl',
    'afterLabelTpl',
    'afterSubTpl',
    'alignOnScroll',
    'alignTarget',
    'allowFocusingDisabledChildren',
    'alwaysOnTop',
    'anchor',
    'anchorSize',
    'animateShadow',
    'ariaAttributes',
    'ariaDescribedBy',
    'ariaErrorText',
    'ariaHelp',
    'ariaLabel',
    'ariaLabelledBy',
    'autoDestroy',
    'autoEl',
    'autoFitErrors',
    'autoRender',
    'autoScroll',
    'autoShow',
    'baseBodyCls',
    'baseCls',
    'beforeBodyEl',
    'beforeLabelTextTpl',
    'beforeLabelTpl',
    'beforeSubTpl',
    'bind',
    'border',
    'bubbleEvents',
    'childEls',
    'cls',
    'columnWidth',
    'combineErrors',
    'combineLabels',
    'componentCls',
    'componentLayout',
    'constrain',
    'constraintInsets',
    'constrainTo',
    'contentEl',
    'controller',
    'data',
    'defaultAlign',
    'defaultFocus',
    'defaultListenerScope',
    'defaults',
    'defaultType',
    'detachOnRemove',
    'disabled',
    'disabledCls',
    'dock',
    'draggable',
    'errorMsgCls',
    'fieldBodyCls',
    'fieldDefaults',
    'fieldLabel',
    'fixed',
    'flex',
    'floating',
    'focusableContainer',
    'focusCls',
    'focusOnToFront',
    'formBind',
    'formItemCls',
    'frame',
    'height',
    'hidden',
    'hideEmptyLabel',
    'hideLabel',
    'hideMode',
    'html',
    'id',
    'inactiveChildTabIndex',
    'invalidCls',
    'itemId',
    'items',
    'keyMap',
    'keyMapEnabled',
    'keyMapTarget',
    'labelableRenderTpl',
    'labelAlign',
    'labelAttrTpl',
    'labelCls',
    'labelClsExtra',
    'labelConnector',
    'labelPad',
    'labelSeparator',
    'labelStyle',
    'labelWidth',
    'layout',
    'liquidLayout',
    'listeners',
    'liveDrag',
    'loader',
    'margin',
    'maskDefaults',
    'maskElement',
    'maxHeight',
    'maxWidth',
    'minHeight',
    'minWidth',
    'modal',
    'modelValidation',
    'msgTarget',
    'nameable',
    'nameHolder',
    'overCls',
    'overflowX',
    'overflowY',
    'padding',
    'plugins',
    'preventMark',
    'publishes',
    'reference',
    'referenceHolder',
    'region',
    'renderConfig',
    'renderData',
    'renderSelectors',
    'renderTo',
    'renderTpl',
    'resetFocusPosition',
    'resizable',
    'resizeHandles',
    'saveDelay',
    'scrollable',
    'session',
    'shadow',
    'shadowOffset',
    'shareableName',
    'shim',
    'shrinkWrap',
    'stateEvents',
    'stateful',
    'stateId',
    'style',
    'suspendLayout',
    'tabGuard',
    'tabIndex',
    'toFrontOnShow',
    'touchAction',
    'tpl',
    'tplWriteMode',
    'twoWayBindable',
    'ui',
    'uiCls',
    'userCls',
    'viewModel',
    'weight',
    'width',
    'xtype',
    'platformConfig',
    'fitToParent',
    'config'
];
fieldcontainerMetaData.EVENTS = [
    { name: 'activate', parameters: 'fieldcontainer' },
    { name: 'add', parameters: 'fieldcontainer,component,index' },
    { name: 'added', parameters: 'fieldcontainer,container,pos' },
    { name: 'afterlayout', parameters: 'fieldcontainer,layout' },
    { name: 'afterlayoutanimation', parameters: 'fieldcontainer' },
    { name: 'afterrender', parameters: 'fieldcontainer' },
    { name: 'beforeactivate', parameters: 'fieldcontainer' },
    { name: 'beforeadd', parameters: 'fieldcontainer,component,index' },
    { name: 'beforedeactivate', parameters: 'fieldcontainer' },
    { name: 'beforedestroy', parameters: 'fieldcontainer' },
    { name: 'beforehide', parameters: 'fieldcontainer' },
    { name: 'beforeremove', parameters: 'fieldcontainer,component' },
    { name: 'beforerender', parameters: 'fieldcontainer' },
    { name: 'beforeshow', parameters: 'fieldcontainer' },
    { name: 'beforestaterestore', parameters: 'fieldcontainer,state' },
    { name: 'beforestatesave', parameters: 'fieldcontainer,state' },
    { name: 'blur', parameters: 'fieldcontainer,event' },
    { name: 'boxready', parameters: 'fieldcontainer,width,height' },
    { name: 'childmove', parameters: 'fieldcontainer,component,prevIndex,newIndex' },
    { name: 'deactivate', parameters: 'fieldcontainer' },
    { name: 'destroy', parameters: 'fieldcontainer' },
    { name: 'disable', parameters: 'fieldcontainer' },
    { name: 'enable', parameters: 'fieldcontainer' },
    { name: 'errorchange', parameters: 'fieldcontainer,error' },
    { name: 'fielderrorchange', parameters: 'fieldcontainer,field,error' },
    { name: 'fieldvaliditychange', parameters: 'fieldcontainer,field,isValid' },
    { name: 'focus', parameters: 'fieldcontainer,event' },
    { name: 'focusenter', parameters: 'fieldcontainer,event' },
    { name: 'focusleave', parameters: 'fieldcontainer,event' },
    { name: 'hide', parameters: 'fieldcontainer' },
    { name: 'move', parameters: 'fieldcontainer,x,y' },
    { name: 'remove', parameters: 'fieldcontainer,component' },
    { name: 'removed', parameters: 'fieldcontainer,ownerCt' },
    { name: 'render', parameters: 'fieldcontainer' },
    { name: 'resize', parameters: 'fieldcontainer,width,height,oldWidth,oldHeight' },
    { name: 'show', parameters: 'fieldcontainer' },
    { name: 'staterestore', parameters: 'fieldcontainer,state' },
    { name: 'statesave', parameters: 'fieldcontainer,state' },
    { name: 'ready', parameters: '' }
];
fieldcontainerMetaData.EVENTNAMES = [
    'activate',
    'add',
    'added',
    'afterlayout',
    'afterlayoutanimation',
    'afterrender',
    'beforeactivate',
    'beforeadd',
    'beforedeactivate',
    'beforedestroy',
    'beforehide',
    'beforeremove',
    'beforerender',
    'beforeshow',
    'beforestaterestore',
    'beforestatesave',
    'blur',
    'boxready',
    'childmove',
    'deactivate',
    'destroy',
    'disable',
    'enable',
    'errorchange',
    'fielderrorchange',
    'fieldvaliditychange',
    'focus',
    'focusenter',
    'focusleave',
    'hide',
    'move',
    'remove',
    'removed',
    'render',
    'resize',
    'show',
    'staterestore',
    'statesave',
    'ready'
];
if (false) {
    /** @type {?} */
    fieldcontainerMetaData.XTYPE;
    /** @type {?} */
    fieldcontainerMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    fieldcontainerMetaData.PROPERTIES;
    /** @type {?} */
    fieldcontainerMetaData.EVENTS;
    /** @type {?} */
    fieldcontainerMetaData.EVENTNAMES;
}
export class ExtFieldcontainerComponent extends base {
    /**
     * @param {?} eRef
     */
    constructor(eRef) { super(eRef, fieldcontainerMetaData); }
    /**
     * @return {?}
     */
    ngOnInit() { this.baseOnInit(fieldcontainerMetaData); }
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    }
}
ExtFieldcontainerComponent.decorators = [
    { type: Component, args: [{
                selector: 'fieldcontainer',
                inputs: fieldcontainerMetaData.PROPERTIES,
                outputs: fieldcontainerMetaData.EVENTNAMES,
                providers: [{ provide: base, useExisting: forwardRef(() => ExtFieldcontainerComponent) }],
                template: '<ng-template #dynamic></ng-template>'
            }] }
];
/** @nocollapse */
ExtFieldcontainerComponent.ctorParameters = () => [
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,