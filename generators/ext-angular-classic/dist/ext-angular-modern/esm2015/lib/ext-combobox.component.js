/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
export class comboboxMetaData {
}
comboboxMetaData.XTYPE = 'combobox';
comboboxMetaData.PROPERTIESOBJECT = {
    "activeCounter": "Number",
    "activeError": "String",
    "activeErrorsTpl": "String/String[]/Ext.XTemplate",
    "afterBodyEl": "String/Array/Ext.XTemplate",
    "afterLabelTextTpl": "String/Array/Ext.XTemplate",
    "afterLabelTpl": "String/Array/Ext.XTemplate",
    "afterSubTpl": "String/Array/Ext.XTemplate",
    "alignOnScroll": "Boolean",
    "alignTarget": "String",
    "allowBlank": "Boolean",
    "allowOnlyWhitespace": "Boolean",
    "allQuery": "String",
    "alwaysOnTop": "Boolean/Number",
    "anchor": "String",
    "animateShadow": "Boolean",
    "anyMatch": "Boolean",
    "ariaAttributes": "Object",
    "ariaDescribedBy": "String",
    "ariaErrorText": "String",
    "ariaHelp": "String",
    "ariaLabel": "String",
    "ariaLabelledBy": "String",
    "autoEl": "String/Object",
    "autoFitErrors": "Boolean",
    "autoHideInputMask": "Boolean",
    "autoLoadOnValue": "Boolean",
    "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
    "autoScroll": "Boolean",
    "autoSelect": "Boolean",
    "autoSelectLast": "Boolean",
    "autoShow": "Boolean",
    "baseBodyCls": "String",
    "baseCls": "String",
    "beforeBodyEl": "String/Array/Ext.XTemplate",
    "beforeLabelTextTpl": "String/Array/Ext.XTemplate",
    "beforeLabelTpl": "String/Array/Ext.XTemplate",
    "beforeSubTpl": "String/Array/Ext.XTemplate",
    "bind": "Object/String",
    "blankText": "String",
    "border": "Number/String/Boolean",
    "caseSensitive": "Boolean",
    "checkChangeBuffer": "Number",
    "checkChangeEvents": "String[]",
    "childEls": "Object/String[]/Object[]",
    "clearFilterOnBlur": "Boolean",
    "cls": "String/String[]",
    "collapseOnSelect": "Boolean",
    "columnWidth": "Number",
    "componentCls": "String",
    "componentLayout": "String/Object",
    "constrain": "Boolean",
    "constraintInsets": "Object/String",
    "constrainTo": "Ext.util.Region/Ext.dom.Element",
    "contentEl": "String",
    "controller": "String/Object/Ext.app.ViewController",
    "data": "Object",
    "defaultAlign": "String",
    "defaultListConfig": "Object",
    "defaultListenerScope": "Boolean",
    "delimiter": "String",
    "dirtyCls": "String",
    "disabled": "Boolean",
    "disabledCls": "String",
    "disableKeyFilter": "Boolean",
    "displayField": "String",
    "displayTpl": "String/String[]/Ext.XTemplate",
    "dock": "'top'/'bottom'/'left'/'right'",
    "draggable": "Boolean/Object",
    "editable": "Boolean",
    "emptyCls": "String",
    "emptyText": "String",
    "enableKeyEvents": "Boolean",
    "enableRegEx": "Boolean",
    "enforceMaxLength": "Boolean",
    "errorMsgCls": "String",
    "fieldBodyCls": "String",
    "fieldCls": "String",
    "fieldLabel": "String",
    "fieldStyle": "String",
    "fieldSubTpl": "Ext.XTemplate",
    "fixed": "Boolean",
    "flex": "Number",
    "floating": "Boolean",
    "focusCls": "String",
    "focusOnToFront": "Boolean",
    "forceSelection": "Boolean",
    "formatText": "String",
    "formBind": "Boolean",
    "formItemCls": "String",
    "frame": "Boolean",
    "grow": "Boolean",
    "growMax": "Number",
    "growMin": "Number",
    "growToLongestValue": "Boolean",
    "height": "Number|String",
    "hidden": "Boolean",
    "hiddenDataCls": "String",
    "hiddenName": "String",
    "hideEmptyLabel": "Boolean",
    "hideLabel": "Boolean",
    "hideMode": "String",
    "hideTrigger": "Boolean",
    "html": "String/Object",
    "id": "String",
    "inputAttrTpl": "String/Array/Ext.XTemplate",
    "inputId": "String",
    "inputMask": "String/Ext.field.InputMask",
    "inputType": "String",
    "inputWrapCls": "String",
    "invalidCls": "String",
    "invalidText": "String",
    "isTextInput": "Boolean",
    "itemId": "String",
    "keyMap": "Object",
    "keyMapEnabled": "Boolean",
    "keyMapTarget": "String",
    "labelableRenderTpl": "String/String[]/Ext.XTemplate",
    "labelAlign": "String",
    "labelAttrTpl": "String/Array/Ext.XTemplate",
    "labelCls": "String",
    "labelClsExtra": "String",
    "labelPad": "Number",
    "labelSeparator": "String",
    "labelStyle": "String",
    "labelWidth": "Number",
    "liquidLayout": "Boolean",
    "listConfig": "Object",
    "listeners": "Object",
    "liveDrag": "Boolean",
    "loader": "Ext.ComponentLoader/Object",
    "margin": "Number/String",
    "maskDefaults": "Object",
    "maskElement": "String",
    "maskRe": "RegExp",
    "matchFieldWidth": "Boolean",
    "maxHeight": "Number",
    "maxLength": "Number",
    "maxLengthText": "String",
    "maxWidth": "Number",
    "minChars": "Number",
    "minHeight": "Number",
    "minLength": "Number",
    "minLengthText": "String",
    "minWidth": "Number",
    "modal": "Boolean",
    "modelValidation": "Boolean",
    "msgTarget": "String",
    "multiSelect": "Boolean",
    "name": "String",
    "nameable": "Boolean",
    "openCls": "String",
    "overCls": "String",
    "overflowX": "String",
    "overflowY": "String",
    "padding": "Number/String",
    "pageSize": "Number",
    "pickerAlign": "String",
    "pickerOffset": "Number[]",
    "pinList": "Boolean",
    "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
    "preventMark": "Boolean",
    "publishes": "String/String[]/Object",
    "queryCaching": "Boolean",
    "queryDelay": "Number",
    "queryMode": "String",
    "queryParam": "String",
    "readOnly": "Boolean",
    "readOnlyCls": "String",
    "reference": "String",
    "regex": "RegExp",
    "regexText": "String",
    "region": "'north'/'south'/'east'/'west'/'center'",
    "renderConfig": "Object",
    "renderData": "Object",
    "renderSelectors": "Object",
    "renderTo": "String/HTMLElement/Ext.dom.Element",
    "renderTpl": "Ext.XTemplate/String/String[]",
    "repeatTriggerClick": "Boolean",
    "requiredCls": "String",
    "resizable": "Boolean/Object",
    "resizeHandles": "String",
    "saveDelay": "Number",
    "scrollable": "Boolean/String/Object",
    "selection": "Ext.data.Model",
    "selectOnFocus": "Boolean",
    "selectOnTab": "Boolean",
    "session": "Boolean/Object/Ext.data.Session",
    "shadow": "String/Boolean",
    "shadowOffset": "Number",
    "shareableName": "Boolean",
    "shim": "Boolean",
    "shrinkWrap": "Boolean/Number",
    "size": "Number",
    "stateEvents": "String[]",
    "stateful": "Boolean/Object",
    "stateId": "String",
    "store": "Ext.data.Store/String/Array/Object",
    "stripCharsRe": "RegExp",
    "style": "String/Object",
    "submitValue": "Boolean",
    "tabIndex": "Number",
    "toFrontOnShow": "Boolean",
    "touchAction": "Object",
    "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
    "tplWriteMode": "String",
    "transform": "String/HTMLElement/Ext.dom.Element",
    "transformInPlace": "Boolean",
    "triggerAction": "String",
    "triggerCls": "String",
    "triggers": "Object",
    "triggerWrapCls": "String",
    "twoWayBindable": "String/String[]/Object",
    "typeAhead": "Boolean",
    "typeAheadDelay": "Number",
    "ui": "String",
    "uiCls": "String[]",
    "userCls": "String/String[]",
    "validateBlank": "Boolean",
    "validateOnBlur": "Boolean",
    "validateOnChange": "Boolean",
    "validateOnFocusLeave": "Boolean",
    "validation": "Boolean/String",
    "validationField": "Ext.data.Field",
    "validator": "Function",
    "value": "Object",
    "valueField": "String",
    "valueNotFoundText": "String",
    "valuePublishEvent": "String[]/String",
    "viewModel": "String/Object/Ext.app.ViewModel",
    "vtype": "String",
    "vtypeText": "String",
    "weight": "Number",
    "width": "Number|String",
    "xtype": "Ext.enums.Widget",
    "platformConfig": "Object",
    "fitToParent": "Boolean",
    "config": "Object",
};
comboboxMetaData.PROPERTIES = [
    'activeCounter',
    'activeError',
    'activeErrorsTpl',
    'afterBodyEl',
    'afterLabelTextTpl',
    'afterLabelTpl',
    'afterSubTpl',
    'alignOnScroll',
    'alignTarget',
    'allowBlank',
    'allowOnlyWhitespace',
    'allQuery',
    'alwaysOnTop',
    'anchor',
    'animateShadow',
    'anyMatch',
    'ariaAttributes',
    'ariaDescribedBy',
    'ariaErrorText',
    'ariaHelp',
    'ariaLabel',
    'ariaLabelledBy',
    'autoEl',
    'autoFitErrors',
    'autoHideInputMask',
    'autoLoadOnValue',
    'autoRender',
    'autoScroll',
    'autoSelect',
    'autoSelectLast',
    'autoShow',
    'baseBodyCls',
    'baseCls',
    'beforeBodyEl',
    'beforeLabelTextTpl',
    'beforeLabelTpl',
    'beforeSubTpl',
    'bind',
    'blankText',
    'border',
    'caseSensitive',
    'checkChangeBuffer',
    'checkChangeEvents',
    'childEls',
    'clearFilterOnBlur',
    'cls',
    'collapseOnSelect',
    'columnWidth',
    'componentCls',
    'componentLayout',
    'constrain',
    'constraintInsets',
    'constrainTo',
    'contentEl',
    'controller',
    'data',
    'defaultAlign',
    'defaultListConfig',
    'defaultListenerScope',
    'delimiter',
    'dirtyCls',
    'disabled',
    'disabledCls',
    'disableKeyFilter',
    'displayField',
    'displayTpl',
    'dock',
    'draggable',
    'editable',
    'emptyCls',
    'emptyText',
    'enableKeyEvents',
    'enableRegEx',
    'enforceMaxLength',
    'errorMsgCls',
    'fieldBodyCls',
    'fieldCls',
    'fieldLabel',
    'fieldStyle',
    'fieldSubTpl',
    'fixed',
    'flex',
    'floating',
    'focusCls',
    'focusOnToFront',
    'forceSelection',
    'formatText',
    'formBind',
    'formItemCls',
    'frame',
    'grow',
    'growMax',
    'growMin',
    'growToLongestValue',
    'height',
    'hidden',
    'hiddenDataCls',
    'hiddenName',
    'hideEmptyLabel',
    'hideLabel',
    'hideMode',
    'hideTrigger',
    'html',
    'id',
    'inputAttrTpl',
    'inputId',
    'inputMask',
    'inputType',
    'inputWrapCls',
    'invalidCls',
    'invalidText',
    'isTextInput',
    'itemId',
    'keyMap',
    'keyMapEnabled',
    'keyMapTarget',
    'labelableRenderTpl',
    'labelAlign',
    'labelAttrTpl',
    'labelCls',
    'labelClsExtra',
    'labelPad',
    'labelSeparator',
    'labelStyle',
    'labelWidth',
    'liquidLayout',
    'listConfig',
    'listeners',
    'liveDrag',
    'loader',
    'margin',
    'maskDefaults',
    'maskElement',
    'maskRe',
    'matchFieldWidth',
    'maxHeight',
    'maxLength',
    'maxLengthText',
    'maxWidth',
    'minChars',
    'minHeight',
    'minLength',
    'minLengthText',
    'minWidth',
    'modal',
    'modelValidation',
    'msgTarget',
    'multiSelect',
    'name',
    'nameable',
    'openCls',
    'overCls',
    'overflowX',
    'overflowY',
    'padding',
    'pageSize',
    'pickerAlign',
    'pickerOffset',
    'pinList',
    'plugins',
    'preventMark',
    'publishes',
    'queryCaching',
    'queryDelay',
    'queryMode',
    'queryParam',
    'readOnly',
    'readOnlyCls',
    'reference',
    'regex',
    'regexText',
    'region',
    'renderConfig',
    'renderData',
    'renderSelectors',
    'renderTo',
    'renderTpl',
    'repeatTriggerClick',
    'requiredCls',
    'resizable',
    'resizeHandles',
    'saveDelay',
    'scrollable',
    'selection',
    'selectOnFocus',
    'selectOnTab',
    'session',
    'shadow',
    'shadowOffset',
    'shareableName',
    'shim',
    'shrinkWrap',
    'size',
    'stateEvents',
    'stateful',
    'stateId',
    'store',
    'stripCharsRe',
    'style',
    'submitValue',
    'tabIndex',
    'toFrontOnShow',
    'touchAction',
    'tpl',
    'tplWriteMode',
    'transform',
    'transformInPlace',
    'triggerAction',
    'triggerCls',
    'triggers',
    'triggerWrapCls',
    'twoWayBindable',
    'typeAhead',
    'typeAheadDelay',
    'ui',
    'uiCls',
    'userCls',
    'validateBlank',
    'validateOnBlur',
    'validateOnChange',
    'validateOnFocusLeave',
    'validation',
    'validationField',
    'validator',
    'value',
    'valueField',
    'valueNotFoundText',
    'valuePublishEvent',
    'viewModel',
    'vtype',
    'vtypeText',
    'weight',
    'width',
    'xtype',
    'platformConfig',
    'fitToParent',
    'config'
];
comboboxMetaData.EVENTS = [
    { name: 'activate', parameters: 'combobox' },
    { name: 'added', parameters: 'combobox,container,pos' },
    { name: 'afterlayoutanimation', parameters: 'combobox' },
    { name: 'afterrender', parameters: 'combobox' },
    { name: 'autosize', parameters: 'combobox,width' },
    { name: 'beforeactivate', parameters: 'combobox' },
    { name: 'beforedeactivate', parameters: 'combobox' },
    { name: 'beforedeselect', parameters: 'combo,record,index' },
    { name: 'beforedestroy', parameters: 'combobox' },
    { name: 'beforehide', parameters: 'combobox' },
    { name: 'beforequery', parameters: 'queryPlan' },
    { name: 'beforerender', parameters: 'combobox' },
    { name: 'beforeselect', parameters: 'combo,record,index' },
    { name: 'beforeshow', parameters: 'combobox' },
    { name: 'beforestaterestore', parameters: 'combobox,state' },
    { name: 'beforestatesave', parameters: 'combobox,state' },
    { name: 'blur', parameters: 'combobox,event' },
    { name: 'boxready', parameters: 'combobox,width,height' },
    { name: 'change', parameters: 'combobox,newValue,oldValue' },
    { name: 'collapse', parameters: 'field' },
    { name: 'deactivate', parameters: 'combobox' },
    { name: 'destroy', parameters: 'combobox' },
    { name: 'dirtychange', parameters: 'combobox,isDirty' },
    { name: 'disable', parameters: 'combobox' },
    { name: 'enable', parameters: 'combobox' },
    { name: 'errorchange', parameters: 'combobox,error' },
    { name: 'expand', parameters: 'field' },
    { name: 'focus', parameters: 'combobox,event' },
    { name: 'focusenter', parameters: 'combobox,event' },
    { name: 'focusleave', parameters: 'combobox,event' },
    { name: 'hide', parameters: 'combobox' },
    { name: 'keydown', parameters: 'combobox,e' },
    { name: 'keypress', parameters: 'combobox,e' },
    { name: 'keyup', parameters: 'combobox,e' },
    { name: 'move', parameters: 'combobox,x,y' },
    { name: 'paste', parameters: 'combobox,e' },
    { name: 'removed', parameters: 'combobox,ownerCt' },
    { name: 'render', parameters: 'combobox' },
    { name: 'resize', parameters: 'combobox,width,height,oldWidth,oldHeight' },
    { name: 'select', parameters: 'combo,record' },
    { name: 'show', parameters: 'combobox' },
    { name: 'specialkey', parameters: 'combobox,e' },
    { name: 'staterestore', parameters: 'combobox,state' },
    { name: 'statesave', parameters: 'combobox,state' },
    { name: 'validitychange', parameters: 'combobox,isValid' },
    { name: 'writeablechange', parameters: 'combobox,Read' },
    { name: 'ready', parameters: '' }
];
comboboxMetaData.EVENTNAMES = [
    'activate',
    'added',
    'afterlayoutanimation',
    'afterrender',
    'autosize',
    'beforeactivate',
    'beforedeactivate',
    'beforedeselect',
    'beforedestroy',
    'beforehide',
    'beforequery',
    'beforerender',
    'beforeselect',
    'beforeshow',
    'beforestaterestore',
    'beforestatesave',
    'blur',
    'boxready',
    'change',
    'collapse',
    'deactivate',
    'destroy',
    'dirtychange',
    'disable',
    'enable',
    'errorchange',
    'expand',
    'focus',
    'focusenter',
    'focusleave',
    'hide',
    'keydown',
    'keypress',
    'keyup',
    'move',
    'paste',
    'removed',
    'render',
    'resize',
    'select',
    'show',
    'specialkey',
    'staterestore',
    'statesave',
    'validitychange',
    'writeablechange',
    'ready'
];
if (false) {
    /** @type {?} */
    comboboxMetaData.XTYPE;
    /** @type {?} */
    comboboxMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    comboboxMetaData.PROPERTIES;
    /** @type {?} */
    comboboxMetaData.EVENTS;
    /** @type {?} */
    comboboxMetaData.EVENTNAMES;
}
export class ExtComboboxComponent extends base {
    /**
     * @param {?} eRef
     */
    constructor(eRef) { super(eRef, comboboxMetaData); }
    /**
     * @return {?}
     */
    ngOnInit() { this.baseOnInit(comboboxMetaData); }
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    }
}
ExtComboboxComponent.decorators = [
    { type: Component, args: [{
                selector: 'combobox',
                inputs: comboboxMetaData.PROPERTIES,
                outputs: comboboxMetaData.EVENTNAMES,
                providers: [{ provide: base, useExisting: forwardRef(() => ExtComboboxComponent) }],
                template: '<ng-template #dynamic></ng-template>'
            }] }
];
/** @nocollapse */
ExtComboboxComponent.ctorParameters = () => [
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,