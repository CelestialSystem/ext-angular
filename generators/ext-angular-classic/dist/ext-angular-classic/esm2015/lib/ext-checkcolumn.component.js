/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
export class checkcolumnMetaData {
}
checkcolumnMetaData.XTYPE = 'checkcolumn';
checkcolumnMetaData.PROPERTIESOBJECT = {
    "actions": "Object",
    "activeChildTabIndex": "Number",
    "activeCounter": "Number",
    "activeItem": "String/Number",
    "align": "any",
    "alignOnScroll": "Boolean",
    "alignTarget": "String",
    "allowFocusingDisabledChildren": "Boolean",
    "alwaysOnTop": "Boolean/Number",
    "anchor": "String",
    "anchorSize": "Number/Object",
    "animateShadow": "Boolean",
    "ariaAttributes": "Object",
    "ariaDescribedBy": "String",
    "ariaLabel": "String",
    "ariaLabelledBy": "String",
    "autoDestroy": "Boolean",
    "autoEl": "String/Object",
    "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
    "autoScroll": "Boolean",
    "autoShow": "Boolean",
    "baseCls": "String",
    "bind": "Object/String",
    "border": "Number/String/Boolean",
    "bubbleEvents": "String[]",
    "cellFocusable": "Boolean",
    "cellWrap": "Boolean",
    "checkedTooltip": "String",
    "childEls": "Object/String[]/Object[]",
    "cls": "String/String[]",
    "columns": "Object[]",
    "columnsText": "String",
    "columnWidth": "Number",
    "componentCls": "String",
    "componentLayout": "String/Object",
    "constrain": "Boolean",
    "constraintInsets": "Object/String",
    "constrainTo": "Ext.util.Region/Ext.dom.Element",
    "contentEl": "String",
    "controller": "String/Object/Ext.app.ViewController",
    "data": "Object",
    "dataIndex": "String",
    "defaultAlign": "String",
    "defaultFocus": "String",
    "defaultListenerScope": "Boolean",
    "defaults": "Object/Function",
    "defaultType": "String",
    "defaultWidth": "Number",
    "detachOnRemove": "Boolean",
    "dirtyText": "String",
    "disabled": "Boolean",
    "disabledCls": "String",
    "dock": "'top'/'bottom'/'left'/'right'",
    "draggable": "Boolean",
    "editor": "Object/String",
    "editRenderer": "Function/String",
    "emptyCellText": "String",
    "enableColumnHide": "Boolean",
    "enableTextSelection": "Boolean",
    "exportRenderer": "Boolean/Function/String",
    "exportStyle": "Ext.exporter.file.Style/Ext.exporter.file.Style[]",
    "exportSummaryRenderer": "Boolean/Function/String",
    "field": "Object/String",
    "fixed": "Boolean",
    "flex": "Number",
    "floating": "Boolean",
    "focusableContainer": "Boolean",
    "focusCls": "String",
    "focusOnToFront": "Boolean",
    "formatter": "String",
    "formBind": "Boolean",
    "frame": "Boolean",
    "groupable": "Boolean",
    "header": "String",
    "headerCheckbox": "Boolean",
    "headerWrap": "Boolean",
    "height": "Number|String",
    "hidden": "Boolean",
    "hideable": "Boolean",
    "hideMode": "String",
    "html": "String/Object",
    "id": "String",
    "ignoreExport": "Boolean",
    "inactiveChildTabIndex": "Number",
    "invert": "Boolean",
    "itemId": "String",
    "items": "Object/Object[]",
    "keyMap": "Object",
    "keyMapEnabled": "Boolean",
    "keyMapTarget": "String",
    "layout": "Ext.enums.Layout/Object",
    "liquidLayout": "Boolean",
    "listeners": "Object",
    "liveDrag": "Boolean",
    "loader": "Ext.ComponentLoader/Object",
    "lockable": "Boolean",
    "locked": "Boolean",
    "margin": "Number/String",
    "maskDefaults": "Object",
    "maskElement": "String",
    "maxHeight": "Number",
    "maxWidth": "Number",
    "menuDisabled": "Boolean",
    "menuText": "String",
    "minHeight": "Number",
    "minWidth": "Number",
    "modal": "Boolean",
    "modelValidation": "Boolean",
    "nameable": "Boolean",
    "nameHolder": "Boolean",
    "overCls": "String",
    "overflowX": "String",
    "overflowY": "String",
    "padding": "Number/String",
    "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
    "producesHTML": "Boolean",
    "publishes": "String/String[]/Object",
    "reference": "String",
    "referenceHolder": "Boolean",
    "region": "'north'/'south'/'east'/'west'/'center'",
    "renderConfig": "Object",
    "renderData": "Object",
    "renderer": "Function/String",
    "renderSelectors": "Object",
    "renderTo": "String/HTMLElement/Ext.dom.Element",
    "renderTpl": "Ext.XTemplate/String/String[]",
    "resetFocusPosition": "Boolean",
    "resizable": "Boolean",
    "resizeHandles": "String",
    "saveDelay": "Number",
    "scope": "Object",
    "scrollable": "Boolean/String/Object",
    "sealed": "Boolean",
    "session": "Boolean/Object/Ext.data.Session",
    "shadow": "String/Boolean",
    "shadowOffset": "Number",
    "shareableName": "Boolean",
    "shim": "Boolean",
    "shrinkWrap": "Boolean/Number",
    "sortable": "Boolean",
    "sortAscText": "String",
    "sortClearText": "String",
    "sortDescText": "String",
    "sorter": "Function/String/Object/Ext.util.Sorter",
    "stateEvents": "String[]",
    "stateful": "Boolean/Object",
    "stateId": "String",
    "stopSelection": "Boolean",
    "style": "String/Object",
    "summaryRenderer": "Function/String",
    "suspendLayout": "Boolean",
    "tabGuard": "Boolean",
    "tabIndex": "Number",
    "tdCls": "String",
    "text": "String",
    "toFrontOnShow": "Boolean",
    "tooltip": "String",
    "tooltipType": "String",
    "touchAction": "Object",
    "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
    "tplWriteMode": "String",
    "triggerEvent": "String",
    "twoWayBindable": "String/String[]/Object",
    "ui": "String",
    "uiCls": "String[]",
    "updater": "Function/String",
    "userCls": "String/String[]",
    "variableRowHeight": "Boolean",
    "viewModel": "String/Object/Ext.app.ViewModel",
    "weight": "Number",
    "width": "Number|String",
    "xtype": "Ext.enums.Widget",
    "platformConfig": "Object",
    "responsiveConfig": "Object",
    "fitToParent": "Boolean",
    "config": "Object",
};
checkcolumnMetaData.PROPERTIES = [
    'actions',
    'activeChildTabIndex',
    'activeCounter',
    'activeItem',
    'align',
    'alignOnScroll',
    'alignTarget',
    'allowFocusingDisabledChildren',
    'alwaysOnTop',
    'anchor',
    'anchorSize',
    'animateShadow',
    'ariaAttributes',
    'ariaDescribedBy',
    'ariaLabel',
    'ariaLabelledBy',
    'autoDestroy',
    'autoEl',
    'autoRender',
    'autoScroll',
    'autoShow',
    'baseCls',
    'bind',
    'border',
    'bubbleEvents',
    'cellFocusable',
    'cellWrap',
    'checkedTooltip',
    'childEls',
    'cls',
    'columns',
    'columnsText',
    'columnWidth',
    'componentCls',
    'componentLayout',
    'constrain',
    'constraintInsets',
    'constrainTo',
    'contentEl',
    'controller',
    'data',
    'dataIndex',
    'defaultAlign',
    'defaultFocus',
    'defaultListenerScope',
    'defaults',
    'defaultType',
    'defaultWidth',
    'detachOnRemove',
    'dirtyText',
    'disabled',
    'disabledCls',
    'dock',
    'draggable',
    'editor',
    'editRenderer',
    'emptyCellText',
    'enableColumnHide',
    'enableTextSelection',
    'exportRenderer',
    'exportStyle',
    'exportSummaryRenderer',
    'field',
    'fixed',
    'flex',
    'floating',
    'focusableContainer',
    'focusCls',
    'focusOnToFront',
    'formatter',
    'formBind',
    'frame',
    'groupable',
    'header',
    'headerCheckbox',
    'headerWrap',
    'height',
    'hidden',
    'hideable',
    'hideMode',
    'html',
    'id',
    'ignoreExport',
    'inactiveChildTabIndex',
    'invert',
    'itemId',
    'items',
    'keyMap',
    'keyMapEnabled',
    'keyMapTarget',
    'layout',
    'liquidLayout',
    'listeners',
    'liveDrag',
    'loader',
    'lockable',
    'locked',
    'margin',
    'maskDefaults',
    'maskElement',
    'maxHeight',
    'maxWidth',
    'menuDisabled',
    'menuText',
    'minHeight',
    'minWidth',
    'modal',
    'modelValidation',
    'nameable',
    'nameHolder',
    'overCls',
    'overflowX',
    'overflowY',
    'padding',
    'plugins',
    'producesHTML',
    'publishes',
    'reference',
    'referenceHolder',
    'region',
    'renderConfig',
    'renderData',
    'renderer',
    'renderSelectors',
    'renderTo',
    'renderTpl',
    'resetFocusPosition',
    'resizable',
    'resizeHandles',
    'saveDelay',
    'scope',
    'scrollable',
    'sealed',
    'session',
    'shadow',
    'shadowOffset',
    'shareableName',
    'shim',
    'shrinkWrap',
    'sortable',
    'sortAscText',
    'sortClearText',
    'sortDescText',
    'sorter',
    'stateEvents',
    'stateful',
    'stateId',
    'stopSelection',
    'style',
    'summaryRenderer',
    'suspendLayout',
    'tabGuard',
    'tabIndex',
    'tdCls',
    'text',
    'toFrontOnShow',
    'tooltip',
    'tooltipType',
    'touchAction',
    'tpl',
    'tplWriteMode',
    'triggerEvent',
    'twoWayBindable',
    'ui',
    'uiCls',
    'updater',
    'userCls',
    'variableRowHeight',
    'viewModel',
    'weight',
    'width',
    'xtype',
    'platformConfig',
    'responsiveConfig',
    'fitToParent',
    'config'
];
checkcolumnMetaData.EVENTS = [
    { name: 'activate', parameters: 'checkcolumn' },
    { name: 'add', parameters: 'checkcolumn,component,index' },
    { name: 'added', parameters: 'checkcolumn,container,pos' },
    { name: 'afterlayout', parameters: 'checkcolumn,layout' },
    { name: 'afterlayoutanimation', parameters: 'checkcolumn' },
    { name: 'afterrender', parameters: 'checkcolumn' },
    { name: 'beforeactivate', parameters: 'checkcolumn' },
    { name: 'beforeadd', parameters: 'checkcolumn,component,index' },
    { name: 'beforecheckchange', parameters: 'checkcolumn,rowIndex,checked,record,e' },
    { name: 'beforedeactivate', parameters: 'checkcolumn' },
    { name: 'beforedestroy', parameters: 'checkcolumn' },
    { name: 'beforeheadercheckchange', parameters: 'checkcolumn,checked,e' },
    { name: 'beforehide', parameters: 'checkcolumn' },
    { name: 'beforeremove', parameters: 'checkcolumn,component' },
    { name: 'beforerender', parameters: 'checkcolumn' },
    { name: 'beforeshow', parameters: 'checkcolumn' },
    { name: 'beforestaterestore', parameters: 'checkcolumn,state' },
    { name: 'beforestatesave', parameters: 'checkcolumn,state' },
    { name: 'blur', parameters: 'checkcolumn,event' },
    { name: 'boxready', parameters: 'checkcolumn,width,height' },
    { name: 'checkchange', parameters: 'checkcolumn,rowIndex,checked,record,e' },
    { name: 'childmove', parameters: 'checkcolumn,component,prevIndex,newIndex' },
    { name: 'columnhide', parameters: 'ct,column' },
    { name: 'columnmove', parameters: 'ct,column,fromIdx,toIdx' },
    { name: 'columnresize', parameters: 'ct,column,width' },
    { name: 'columnschanged', parameters: 'ct' },
    { name: 'columnshow', parameters: 'ct,column' },
    { name: 'deactivate', parameters: 'checkcolumn' },
    { name: 'destroy', parameters: 'checkcolumn' },
    { name: 'disable', parameters: 'checkcolumn' },
    { name: 'enable', parameters: 'checkcolumn' },
    { name: 'focus', parameters: 'checkcolumn,event' },
    { name: 'focusenter', parameters: 'checkcolumn,event' },
    { name: 'focusleave', parameters: 'checkcolumn,event' },
    { name: 'headercheckchange', parameters: 'checkcolumn,checked,e' },
    { name: 'headerclick', parameters: 'ct,column,e,t' },
    { name: 'headercontextmenu', parameters: 'ct,column,e,t' },
    { name: 'headertriggerclick', parameters: 'ct,column,e,t' },
    { name: 'hide', parameters: 'checkcolumn' },
    { name: 'menucreate', parameters: 'ct,menu' },
    { name: 'move', parameters: 'checkcolumn,x,y' },
    { name: 'remove', parameters: 'checkcolumn,component' },
    { name: 'removed', parameters: 'checkcolumn,ownerCt' },
    { name: 'render', parameters: 'checkcolumn' },
    { name: 'resize', parameters: 'checkcolumn,width,height,oldWidth,oldHeight' },
    { name: 'show', parameters: 'checkcolumn' },
    { name: 'sortchange', parameters: 'ct,column,direction' },
    { name: 'staterestore', parameters: 'checkcolumn,state' },
    { name: 'statesave', parameters: 'checkcolumn,state' },
    { name: 'ready', parameters: '' }
];
checkcolumnMetaData.EVENTNAMES = [
    'activate',
    'add',
    'added',
    'afterlayout',
    'afterlayoutanimation',
    'afterrender',
    'beforeactivate',
    'beforeadd',
    'beforecheckchange',
    'beforedeactivate',
    'beforedestroy',
    'beforeheadercheckchange',
    'beforehide',
    'beforeremove',
    'beforerender',
    'beforeshow',
    'beforestaterestore',
    'beforestatesave',
    'blur',
    'boxready',
    'checkchange',
    'childmove',
    'columnhide',
    'columnmove',
    'columnresize',
    'columnschanged',
    'columnshow',
    'deactivate',
    'destroy',
    'disable',
    'enable',
    'focus',
    'focusenter',
    'focusleave',
    'headercheckchange',
    'headerclick',
    'headercontextmenu',
    'headertriggerclick',
    'hide',
    'menucreate',
    'move',
    'remove',
    'removed',
    'render',
    'resize',
    'show',
    'sortchange',
    'staterestore',
    'statesave',
    'ready'
];
if (false) {
    /** @type {?} */
    checkcolumnMetaData.XTYPE;
    /** @type {?} */
    checkcolumnMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    checkcolumnMetaData.PROPERTIES;
    /** @type {?} */
    checkcolumnMetaData.EVENTS;
    /** @type {?} */
    checkcolumnMetaData.EVENTNAMES;
}
export class ExtCheckcolumnComponent extends base {
    /**
     * @param {?} eRef
     */
    constructor(eRef) { super(eRef, checkcolumnMetaData); }
    /**
     * @return {?}
     */
    ngOnInit() { this.baseOnInit(checkcolumnMetaData); }
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    }
}
ExtCheckcolumnComponent.decorators = [
    { type: Component, args: [{
                selector: 'checkcolumn',
                inputs: checkcolumnMetaData.PROPERTIES,
                outputs: checkcolumnMetaData.EVENTNAMES,
                providers: [{ provide: base, useExisting: forwardRef(() => ExtCheckcolumnComponent) }],
                template: '<ng-template #dynamic></ng-template>'
            }] }
];
/** @nocollapse */
ExtCheckcolumnComponent.ctorParameters = () => [
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,