/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
export class tabMetaData {
}
tabMetaData.XTYPE = 'tab';
tabMetaData.PROPERTIESOBJECT = {
    "activeCounter": "Number",
    "alignOnScroll": "Boolean",
    "alignTarget": "String",
    "allowDepress": "Boolean",
    "alwaysOnTop": "Boolean/Number",
    "anchor": "String",
    "animateShadow": "Boolean",
    "ariaAttributes": "Object",
    "ariaDescribedBy": "String",
    "ariaLabel": "String",
    "ariaLabelledBy": "String",
    "arrowAlign": "String",
    "arrowCls": "String",
    "arrowVisible": "Boolean",
    "autoEl": "String/Object",
    "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
    "autoScroll": "Boolean",
    "autoShow": "Boolean",
    "baseCls": "String",
    "baseParams": "Object",
    "bind": "Object/String",
    "border": "Number/String/Boolean",
    "childEls": "Object/String[]/Object[]",
    "clickEvent": "String",
    "closable": "Boolean",
    "closeText": "String",
    "cls": "String",
    "columnWidth": "Number",
    "componentCls": "String",
    "componentLayout": "String/Object",
    "constrain": "Boolean",
    "constraintInsets": "Object/String",
    "constrainTo": "Ext.util.Region/Ext.dom.Element",
    "contentEl": "String",
    "controller": "String/Object/Ext.app.ViewController",
    "data": "Object",
    "defaultAlign": "String",
    "defaultListenerScope": "Boolean",
    "destroyMenu": "Boolean",
    "disabled": "Boolean",
    "disabledCls": "String",
    "dock": "'top'/'bottom'/'left'/'right'",
    "draggable": "Boolean/Object",
    "enableToggle": "Boolean",
    "fixed": "Boolean",
    "flex": "Number",
    "floating": "Boolean",
    "focusCls": "String",
    "focusOnToFront": "Boolean",
    "formBind": "Boolean",
    "frame": "Boolean",
    "glyph": "Number/String",
    "handleMouseEvents": "Boolean",
    "handler": "Function/String",
    "height": "Number|String",
    "hidden": "Boolean",
    "hideMode": "String",
    "href": "String",
    "hrefTarget": "String",
    "html": "String/Object",
    "icon": "String",
    "iconAlign": "String",
    "iconCls": "String",
    "id": "String",
    "itemId": "String",
    "keyMap": "Object",
    "keyMapEnabled": "Boolean",
    "keyMapTarget": "String",
    "liquidLayout": "Boolean",
    "listeners": "Object",
    "liveDrag": "Boolean",
    "loader": "Ext.ComponentLoader/Object",
    "margin": "Number/String",
    "maskDefaults": "Object",
    "maskElement": "String",
    "maxHeight": "Number",
    "maxWidth": "Number",
    "menu": "Ext.menu.Menu/String/Object",
    "menuAlign": "String",
    "minHeight": "Number",
    "minWidth": "Number",
    "modal": "Boolean",
    "modelValidation": "Boolean",
    "nameable": "Boolean",
    "overCls": "String",
    "overflowText": "String",
    "overflowX": "String",
    "overflowY": "String",
    "padding": "Number/String",
    "params": "Object",
    "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
    "pressed": "Boolean",
    "preventDefault": "Boolean",
    "publishes": "String/String[]/Object",
    "reference": "String",
    "region": "'north'/'south'/'east'/'west'/'center'",
    "renderConfig": "Object",
    "renderData": "Object",
    "renderSelectors": "Object",
    "renderTo": "String/HTMLElement/Ext.dom.Element",
    "renderTpl": "Ext.XTemplate/String/String[]",
    "repeat": "Boolean/Object",
    "resizable": "Boolean/Object",
    "resizeHandles": "String",
    "rotation": "'default'/0/1/2",
    "saveDelay": "Number",
    "scale": "'small'/'medium'/'large'",
    "scope": "Object",
    "scrollable": "Boolean/String/Object",
    "session": "Boolean/Object/Ext.data.Session",
    "shadow": "String/Boolean",
    "shadowOffset": "Number",
    "shareableName": "Boolean",
    "shim": "Boolean",
    "showEmptyMenu": "Boolean",
    "shrinkWrap": "Boolean/Number",
    "stateEvents": "String[]",
    "stateful": "Boolean/Object",
    "stateId": "String",
    "style": "String/Object",
    "tabIndex": "Number",
    "tabPosition": "'top'/'right'/'bottom'/'left'",
    "text": "String",
    "textAlign": "String",
    "toFrontOnShow": "Boolean",
    "toggleGroup": "String",
    "toggleHandler": "Function/String",
    "tooltip": "String/Object",
    "tooltipType": "String",
    "touchAction": "Object",
    "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
    "tplWriteMode": "String",
    "twoWayBindable": "String/String[]/Object",
    "ui": "String",
    "uiCls": "String[]",
    "userCls": "String/String[]",
    "value": "String/Number",
    "viewModel": "String/Object/Ext.app.ViewModel",
    "weight": "Number",
    "width": "Number|String",
    "xtype": "Ext.enums.Widget",
    "platformConfig": "Object",
    "responsiveConfig": "Object",
    "fitToParent": "Boolean",
    "config": "Object",
};
tabMetaData.PROPERTIES = [
    'activeCounter',
    'alignOnScroll',
    'alignTarget',
    'allowDepress',
    'alwaysOnTop',
    'anchor',
    'animateShadow',
    'ariaAttributes',
    'ariaDescribedBy',
    'ariaLabel',
    'ariaLabelledBy',
    'arrowAlign',
    'arrowCls',
    'arrowVisible',
    'autoEl',
    'autoRender',
    'autoScroll',
    'autoShow',
    'baseCls',
    'baseParams',
    'bind',
    'border',
    'childEls',
    'clickEvent',
    'closable',
    'closeText',
    'cls',
    'columnWidth',
    'componentCls',
    'componentLayout',
    'constrain',
    'constraintInsets',
    'constrainTo',
    'contentEl',
    'controller',
    'data',
    'defaultAlign',
    'defaultListenerScope',
    'destroyMenu',
    'disabled',
    'disabledCls',
    'dock',
    'draggable',
    'enableToggle',
    'fixed',
    'flex',
    'floating',
    'focusCls',
    'focusOnToFront',
    'formBind',
    'frame',
    'glyph',
    'handleMouseEvents',
    'handler',
    'height',
    'hidden',
    'hideMode',
    'href',
    'hrefTarget',
    'html',
    'icon',
    'iconAlign',
    'iconCls',
    'id',
    'itemId',
    'keyMap',
    'keyMapEnabled',
    'keyMapTarget',
    'liquidLayout',
    'listeners',
    'liveDrag',
    'loader',
    'margin',
    'maskDefaults',
    'maskElement',
    'maxHeight',
    'maxWidth',
    'menu',
    'menuAlign',
    'minHeight',
    'minWidth',
    'modal',
    'modelValidation',
    'nameable',
    'overCls',
    'overflowText',
    'overflowX',
    'overflowY',
    'padding',
    'params',
    'plugins',
    'pressed',
    'preventDefault',
    'publishes',
    'reference',
    'region',
    'renderConfig',
    'renderData',
    'renderSelectors',
    'renderTo',
    'renderTpl',
    'repeat',
    'resizable',
    'resizeHandles',
    'rotation',
    'saveDelay',
    'scale',
    'scope',
    'scrollable',
    'session',
    'shadow',
    'shadowOffset',
    'shareableName',
    'shim',
    'showEmptyMenu',
    'shrinkWrap',
    'stateEvents',
    'stateful',
    'stateId',
    'style',
    'tabIndex',
    'tabPosition',
    'text',
    'textAlign',
    'toFrontOnShow',
    'toggleGroup',
    'toggleHandler',
    'tooltip',
    'tooltipType',
    'touchAction',
    'tpl',
    'tplWriteMode',
    'twoWayBindable',
    'ui',
    'uiCls',
    'userCls',
    'value',
    'viewModel',
    'weight',
    'width',
    'xtype',
    'platformConfig',
    'responsiveConfig',
    'fitToParent',
    'config'
];
tabMetaData.EVENTS = [
    { name: 'activate', parameters: 'tab' },
    { name: 'added', parameters: 'tab,container,pos' },
    { name: 'afterlayoutanimation', parameters: 'tab' },
    { name: 'afterrender', parameters: 'tab' },
    { name: 'beforeactivate', parameters: 'tab' },
    { name: 'beforeclose', parameters: 'tab' },
    { name: 'beforedeactivate', parameters: 'tab' },
    { name: 'beforedestroy', parameters: 'tab' },
    { name: 'beforehide', parameters: 'tab' },
    { name: 'beforerender', parameters: 'tab' },
    { name: 'beforeshow', parameters: 'tab' },
    { name: 'beforestaterestore', parameters: 'tab,state' },
    { name: 'beforestatesave', parameters: 'tab,state' },
    { name: 'beforetoggle', parameters: 'tab,pressed' },
    { name: 'blur', parameters: 'tab,event' },
    { name: 'boxready', parameters: 'tab,width,height' },
    { name: 'click', parameters: 'tab,e' },
    { name: 'close', parameters: 'tab' },
    { name: 'deactivate', parameters: 'tab' },
    { name: 'destroy', parameters: 'tab' },
    { name: 'disable', parameters: 'tab' },
    { name: 'enable', parameters: 'tab' },
    { name: 'focus', parameters: 'tab,event' },
    { name: 'focusenter', parameters: 'tab,event' },
    { name: 'focusleave', parameters: 'tab,event' },
    { name: 'glyphchange', parameters: 'tab,newGlyph,oldGlyph' },
    { name: 'hide', parameters: 'tab' },
    { name: 'iconchange', parameters: 'tab,oldIcon,newIcon' },
    { name: 'menuhide', parameters: 'tab,menu' },
    { name: 'menushow', parameters: 'tab,menu' },
    { name: 'menutriggerout', parameters: 'tab,menu,e' },
    { name: 'menutriggerover', parameters: 'tab,menu,e' },
    { name: 'mouseout', parameters: 'tab,e' },
    { name: 'mouseover', parameters: 'tab,e' },
    { name: 'move', parameters: 'tab,x,y' },
    { name: 'removed', parameters: 'tab,ownerCt' },
    { name: 'render', parameters: 'tab' },
    { name: 'resize', parameters: 'tab,width,height,oldWidth,oldHeight' },
    { name: 'show', parameters: 'tab' },
    { name: 'staterestore', parameters: 'tab,state' },
    { name: 'statesave', parameters: 'tab,state' },
    { name: 'textchange', parameters: 'tab,oldText,newText' },
    { name: 'toggle', parameters: 'tab,pressed' },
    { name: 'ready', parameters: '' }
];
tabMetaData.EVENTNAMES = [
    'activate',
    'added',
    'afterlayoutanimation',
    'afterrender',
    'beforeactivate',
    'beforeclose',
    'beforedeactivate',
    'beforedestroy',
    'beforehide',
    'beforerender',
    'beforeshow',
    'beforestaterestore',
    'beforestatesave',
    'beforetoggle',
    'blur',
    'boxready',
    'click',
    'close',
    'deactivate',
    'destroy',
    'disable',
    'enable',
    'focus',
    'focusenter',
    'focusleave',
    'glyphchange',
    'hide',
    'iconchange',
    'menuhide',
    'menushow',
    'menutriggerout',
    'menutriggerover',
    'mouseout',
    'mouseover',
    'move',
    'removed',
    'render',
    'resize',
    'show',
    'staterestore',
    'statesave',
    'textchange',
    'toggle',
    'ready'
];
if (false) {
    /** @type {?} */
    tabMetaData.XTYPE;
    /** @type {?} */
    tabMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    tabMetaData.PROPERTIES;
    /** @type {?} */
    tabMetaData.EVENTS;
    /** @type {?} */
    tabMetaData.EVENTNAMES;
}
export class ExtTabComponent extends base {
    /**
     * @param {?} eRef
     */
    constructor(eRef) { super(eRef, tabMetaData); }
    /**
     * @return {?}
     */
    ngOnInit() { this.baseOnInit(tabMetaData); }
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    }
}
ExtTabComponent.decorators = [
    { type: Component, args: [{
                selector: 'tab',
                inputs: tabMetaData.PROPERTIES,
                outputs: tabMetaData.EVENTNAMES,
                providers: [{ provide: base, useExisting: forwardRef(() => ExtTabComponent) }],
                template: '<ng-template #dynamic></ng-template>'
            }] }
];
/** @nocollapse */
ExtTabComponent.ctorParameters = () => [
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,