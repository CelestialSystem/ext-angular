import {
  Output,
  OnInit,
  AfterContentInit,
  OnChanges,
  Component,
  ElementRef,
  forwardRef
} from '@angular/core';
import { base } from './base';
export class menucheckitemMetaData {
  public static XTYPE: string = 'menucheckitem';
  public static PROPERTIESOBJECT: any = {
    "activeCls": "String",
    "activeCounter": "Number",
    "alignOnScroll": "Boolean",
    "alignTarget": "String",
    "alwaysOnTop": "Boolean/Number",
    "anchor": "String",
    "animateShadow": "Boolean",
    "ariaAttributes": "Object",
    "ariaDescribedBy": "String",
    "ariaLabel": "String",
    "ariaLabelledBy": "String",
    "autoEl": "String/Object",
    "autoRender": "Boolean/String/HTMLElement/Ext.dom.Element",
    "autoScroll": "Boolean",
    "autoShow": "Boolean",
    "baseCls": "String",
    "bind": "Object/String",
    "border": "Number/String/Boolean",
    "canActivate": "Boolean",
    "checkChangeDisabled": "Boolean",
    "checked": "Boolean",
    "checkedCls": "String",
    "checkHandler": "Function/String",
    "childEls": "Object/String[]/Object[]",
    "clickHideDelay": "Number",
    "cls": "String/String[]",
    "columnWidth": "Number",
    "componentCls": "String",
    "componentLayout": "String/Object",
    "constrain": "Boolean",
    "constraintInsets": "Object/String",
    "constrainTo": "Ext.util.Region/Ext.dom.Element",
    "contentEl": "String",
    "controller": "String/Object/Ext.app.ViewController",
    "data": "Object",
    "defaultAlign": "String",
    "defaultListenerScope": "Boolean",
    "destroyMenu": "Boolean",
    "disabled": "Boolean",
    "disabledCls": "String",
    "dock": "'top'/'bottom'/'left'/'right'",
    "draggable": "Boolean/Object",
    "fixed": "Boolean",
    "flex": "Number",
    "floating": "Boolean",
    "focusCls": "String",
    "focusOnToFront": "Boolean",
    "formBind": "Boolean",
    "frame": "Boolean",
    "glyph": "Number/String",
    "group": "String",
    "groupCls": "String",
    "handler": "Function/String",
    "height": "Number|String",
    "hidden": "Boolean",
    "hideMode": "String",
    "hideOnClick": "Boolean",
    "href": "String",
    "hrefTarget": "String",
    "html": "String/Object",
    "icon": "String",
    "iconCls": "String",
    "id": "String",
    "itemId": "String",
    "keyMap": "Object",
    "keyMapEnabled": "Boolean",
    "keyMapTarget": "String",
    "liquidLayout": "Boolean",
    "listeners": "Object",
    "liveDrag": "Boolean",
    "loader": "Ext.ComponentLoader/Object",
    "margin": "Number/String",
    "maskDefaults": "Object",
    "maskElement": "String",
    "maxHeight": "Number",
    "maxWidth": "Number",
    "menu": "Ext.menu.Menu/Object",
    "menuAlign": "String",
    "menuExpandDelay": "Number",
    "menuHideDelay": "Number",
    "minHeight": "Number",
    "minWidth": "Number",
    "modal": "Boolean",
    "modelValidation": "Boolean",
    "nameable": "Boolean",
    "overCls": "String",
    "overflowX": "String",
    "overflowY": "String",
    "padding": "Number/String",
    "plain": "Boolean",
    "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
    "publishes": "String/String[]/Object",
    "reference": "String",
    "region": "'north'/'south'/'east'/'west'/'center'",
    "renderConfig": "Object",
    "renderData": "Object",
    "renderSelectors": "Object",
    "renderTo": "String/HTMLElement/Ext.dom.Element",
    "renderTpl": "Ext.XTemplate/String/String[]",
    "resizable": "Boolean/Object",
    "resizeHandles": "String",
    "saveDelay": "Number",
    "scope": "Object",
    "scrollable": "Boolean/String/Object",
    "session": "Boolean/Object/Ext.data.Session",
    "shadow": "String/Boolean",
    "shadowOffset": "Number",
    "shareableName": "Boolean",
    "shim": "Boolean",
    "shrinkWrap": "Boolean/Number",
    "stateEvents": "String[]",
    "stateful": "Boolean/Object",
    "stateId": "String",
    "style": "String/Object",
    "submenuText": "String",
    "tabIndex": "Number",
    "text": "String",
    "toFrontOnShow": "Boolean",
    "tooltip": "String/Object",
    "tooltipType": "String",
    "touchAction": "Object",
    "tpl": "Ext.XTemplate/Ext.Template/String/String[]",
    "tplWriteMode": "String",
    "twoWayBindable": "String/String[]/Object",
    "ui": "String",
    "uiCls": "String[]",
    "uncheckedCls": "String",
    "userCls": "String/String[]",
    "viewModel": "String/Object/Ext.app.ViewModel",
    "weight": "Number",
    "width": "Number|String",
    "xtype": "Ext.enums.Widget",
    "platformConfig": "Object",
    "responsiveConfig": "Object",
    "fitToParent": "Boolean",
    "config": "Object",
};
  public static PROPERTIES: string[] = [
    'activeCls',
    'activeCounter',
    'alignOnScroll',
    'alignTarget',
    'alwaysOnTop',
    'anchor',
    'animateShadow',
    'ariaAttributes',
    'ariaDescribedBy',
    'ariaLabel',
    'ariaLabelledBy',
    'autoEl',
    'autoRender',
    'autoScroll',
    'autoShow',
    'baseCls',
    'bind',
    'border',
    'canActivate',
    'checkChangeDisabled',
    'checked',
    'checkedCls',
    'checkHandler',
    'childEls',
    'clickHideDelay',
    'cls',
    'columnWidth',
    'componentCls',
    'componentLayout',
    'constrain',
    'constraintInsets',
    'constrainTo',
    'contentEl',
    'controller',
    'data',
    'defaultAlign',
    'defaultListenerScope',
    'destroyMenu',
    'disabled',
    'disabledCls',
    'dock',
    'draggable',
    'fixed',
    'flex',
    'floating',
    'focusCls',
    'focusOnToFront',
    'formBind',
    'frame',
    'glyph',
    'group',
    'groupCls',
    'handler',
    'height',
    'hidden',
    'hideMode',
    'hideOnClick',
    'href',
    'hrefTarget',
    'html',
    'icon',
    'iconCls',
    'id',
    'itemId',
    'keyMap',
    'keyMapEnabled',
    'keyMapTarget',
    'liquidLayout',
    'listeners',
    'liveDrag',
    'loader',
    'margin',
    'maskDefaults',
    'maskElement',
    'maxHeight',
    'maxWidth',
    'menu',
    'menuAlign',
    'menuExpandDelay',
    'menuHideDelay',
    'minHeight',
    'minWidth',
    'modal',
    'modelValidation',
    'nameable',
    'overCls',
    'overflowX',
    'overflowY',
    'padding',
    'plain',
    'plugins',
    'publishes',
    'reference',
    'region',
    'renderConfig',
    'renderData',
    'renderSelectors',
    'renderTo',
    'renderTpl',
    'resizable',
    'resizeHandles',
    'saveDelay',
    'scope',
    'scrollable',
    'session',
    'shadow',
    'shadowOffset',
    'shareableName',
    'shim',
    'shrinkWrap',
    'stateEvents',
    'stateful',
    'stateId',
    'style',
    'submenuText',
    'tabIndex',
    'text',
    'toFrontOnShow',
    'tooltip',
    'tooltipType',
    'touchAction',
    'tpl',
    'tplWriteMode',
    'twoWayBindable',
    'ui',
    'uiCls',
    'uncheckedCls',
    'userCls',
    'viewModel',
    'weight',
    'width',
    'xtype',
    'platformConfig',
    'responsiveConfig',
    'fitToParent',
    'config'
];
  public static EVENTS: any[] = [
		{name:'activate',parameters:'item'},
		{name:'added',parameters:'menucheckitem,container,pos'},
		{name:'afterlayoutanimation',parameters:'menucheckitem'},
		{name:'afterrender',parameters:'menucheckitem'},
		{name:'beforeactivate',parameters:'menucheckitem'},
		{name:'beforecheckchange',parameters:'menucheckitem,checked'},
		{name:'beforedeactivate',parameters:'menucheckitem'},
		{name:'beforedestroy',parameters:'menucheckitem'},
		{name:'beforehide',parameters:'menucheckitem'},
		{name:'beforerender',parameters:'menucheckitem'},
		{name:'beforeshow',parameters:'menucheckitem'},
		{name:'beforestaterestore',parameters:'menucheckitem,state'},
		{name:'beforestatesave',parameters:'menucheckitem,state'},
		{name:'blur',parameters:'menucheckitem,event'},
		{name:'boxready',parameters:'menucheckitem,width,height'},
		{name:'checkchange',parameters:'menucheckitem,checked'},
		{name:'click',parameters:'item,e'},
		{name:'deactivate',parameters:'item'},
		{name:'destroy',parameters:'menucheckitem'},
		{name:'disable',parameters:'menucheckitem'},
		{name:'enable',parameters:'menucheckitem'},
		{name:'focus',parameters:'menucheckitem,event'},
		{name:'focusenter',parameters:'menucheckitem,event'},
		{name:'focusleave',parameters:'menucheckitem,event'},
		{name:'hide',parameters:'menucheckitem'},
		{name:'iconchange',parameters:'menucheckitem,oldIcon,newIcon'},
		{name:'move',parameters:'menucheckitem,x,y'},
		{name:'removed',parameters:'menucheckitem,ownerCt'},
		{name:'render',parameters:'menucheckitem'},
		{name:'resize',parameters:'menucheckitem,width,height,oldWidth,oldHeight'},
		{name:'show',parameters:'menucheckitem'},
		{name:'staterestore',parameters:'menucheckitem,state'},
		{name:'statesave',parameters:'menucheckitem,state'},
		{name:'textchange',parameters:'menucheckitem,oldText,newText'},
		{name:'ready',parameters:''}
];
  public static EVENTNAMES: string[] = [
		'activate',
		'added',
		'afterlayoutanimation',
		'afterrender',
		'beforeactivate',
		'beforecheckchange',
		'beforedeactivate',
		'beforedestroy',
		'beforehide',
		'beforerender',
		'beforeshow',
		'beforestaterestore',
		'beforestatesave',
		'blur',
		'boxready',
		'checkchange',
		'click',
		'deactivate',
		'destroy',
		'disable',
		'enable',
		'focus',
		'focusenter',
		'focusleave',
		'hide',
		'iconchange',
		'move',
		'removed',
		'render',
		'resize',
		'show',
		'staterestore',
		'statesave',
		'textchange',
		'ready'
];
}
@Component({
  selector: 'menucheckitem', 
  inputs: menucheckitemMetaData.PROPERTIES,
  outputs: menucheckitemMetaData.EVENTNAMES,
  providers: [{provide: base, useExisting: forwardRef(() => ExtMenucheckitemComponent)}],
  template: '<ng-template #dynamic></ng-template>'
})
export class ExtMenucheckitemComponent extends base implements OnInit,AfterContentInit,OnChanges {
  constructor(eRef:ElementRef) {super(eRef,menucheckitemMetaData)}
  public ngOnInit() {this.baseOnInit(menucheckitemMetaData)}
  //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
  public ngAfterContentInit() {
    this.baseAfterContentInit()
    this['ready'].emit(this)
    }
}