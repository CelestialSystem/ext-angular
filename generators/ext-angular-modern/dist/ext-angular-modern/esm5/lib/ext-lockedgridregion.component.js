/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, forwardRef } from '@angular/core';
import { base } from './base';
var lockedgridregionMetaData = /** @class */ (function () {
    function lockedgridregionMetaData() {
    }
    lockedgridregionMetaData.XTYPE = 'lockedgridregion';
    lockedgridregionMetaData.PROPERTIESOBJECT = {
        "activeChildTabIndex": "Number",
        "activeItem": "Ext.Component/Object/String/Number",
        "allowFocusingDisabledChildren": "Boolean",
        "alwaysOnTop": "Boolean/Number",
        "anchor": "Boolean",
        "anchorPosition": "String",
        "ariaAttributes": "Object",
        "ariaDescribedBy": "String",
        "ariaLabel": "String",
        "ariaLabelledBy": "String",
        "autoDestroy": "Boolean",
        "autoSize": "Boolean",
        "axisLock": "Boolean",
        "bbar": "Object/Object[]",
        "bind": "Object/String",
        "bodyBorder": "Boolean",
        "bodyPadding": "Number/Boolean/String",
        "bodyStyle": "String/Object",
        "border": "Boolean",
        "bottom": "Number/String",
        "buttonAlign": "String",
        "buttons": "Object/Ext.Button[]",
        "buttonToolbar": "Object/Ext.Toolbar",
        "cardSwitchAnimation": "String/Object/Boolean",
        "centered": "Boolean",
        "closable": "Boolean",
        "closeAction": "String",
        "closeToolText": "String",
        "cls": "String/String[]",
        "collapsed": "Boolean",
        "collapsible": "'top'/'right'/'bottom'/'left'/Boolean/Object",
        "constrainAlign": "String/Ext.util.Region/Ext.dom.Element",
        "contentEl": "Ext.dom.Element/HTMLElement/String",
        "control": "Object",
        "controller": "String/Object/Ext.app.ViewController",
        "data": "Object",
        "defaultFocus": "String",
        "defaultListenerScope": "Boolean",
        "defaults": "Object",
        "defaultToolWeights": "Object",
        "defaultType": "String",
        "disabled": "Boolean",
        "displayed": "Boolean",
        "docked": "String",
        "draggable": "Boolean/Object/Ext.drag.Source",
        "enterAnimation": "String/Mixed",
        "eventHandlers": "Object",
        "exitAnimation": "String/Mixed",
        "flex": "Number/String/Object",
        "floated": "Boolean",
        "focusableContainer": "Boolean",
        "focusCls": "String",
        "fullscreen": "Boolean",
        "grid": "Ext.grid.Grid",
        "header": "Boolean/Object",
        "headerPosition": "'top'/'right'/'bottom'/'left'",
        "height": "Number/String",
        "hidden": "Boolean",
        "hideAnimation": "String/Mixed",
        "hideMode": "'clip'/'display'/'offsets'/'opacity'/'visibility'",
        "hideOnMaskTap": "Boolean",
        "html": "String/Ext.dom.Element/HTMLElement",
        "icon": "String",
        "iconAlign": "'top'/'right'/'bottom'/'left'",
        "iconCls": "String",
        "id": "String",
        "inactiveChildTabIndex": "Number",
        "innerCls": "String",
        "instanceCls": "String/String[]",
        "itemId": "String",
        "items": "Array/Object",
        "keyMap": "Object",
        "keyMapEnabled": "Boolean",
        "keyMapTarget": "String",
        "layout": "Object/String",
        "lbar": "Object/Object[]",
        "left": "Number/String",
        "listeners": "Object",
        "locked": "Boolean/String",
        "manageBorders": "Boolean",
        "margin": "Number/String",
        "masked": "Boolean/String/Object/Ext.Mask/Ext.LoadMask",
        "maxHeight": "Number/String",
        "maxWidth": "Number/String",
        "menuLabel": "String",
        "minButtonWidth": "Number",
        "minHeight": "Number/String",
        "minWidth": "Number/String",
        "modal": "Boolean",
        "modelValidation": "Boolean",
        "name": "String",
        "nameable": "Boolean",
        "nameHolder": "Boolean",
        "padding": "Number/String",
        "plugins": "Array/Ext.enums.Plugin/Object/Ext.plugin.Abstract",
        "publishes": "String/String[]/Object",
        "rbar": "Object/Object[]",
        "record": "Ext.data.Model",
        "reference": "String",
        "referenceHolder": "Boolean",
        "regionKey": "String",
        "relative": "Boolean",
        "renderTo": "Ext.dom.Element",
        "resetFocusPosition": "Boolean",
        "resizable": "Object",
        "right": "Number/String",
        "ripple": "Boolean/Object/String",
        "scrollable": "Boolean/String/Object",
        "selfAlign": "String",
        "session": "Boolean/Object/Ext.data.Session",
        "shadow": "Boolean",
        "shareableName": "Boolean",
        "shim": "Boolean",
        "showAnimation": "String/Mixed",
        "standardButtons": "Object",
        "stateful": "Boolean/Object/String[]",
        "statefulDefaults": "Object/String[]",
        "stateId": "String",
        "style": "String/Object",
        "tabIndex": "Number",
        "tbar": "Object/Object[]",
        "title": "String/Ext.panel.Title",
        "titleAlign": "'left'/'center'/'right'",
        "toFrontOnShow": "Boolean",
        "toolDefaults": "Object",
        "tools": "Ext.Tool[]/Object/Object[]",
        "tooltip": "String/Object",
        "top": "Number/String",
        "touchAction": "Object",
        "tpl": "String/String[]/Ext.Template/Ext.XTemplate[]",
        "tplWriteMode": "String",
        "translatable": "Object",
        "twoWayBindable": "String/String[]/Object",
        "ui": "String/String[]",
        "userCls": "String/String[]",
        "userSelectable": "Boolean/String/Object",
        "viewModel": "String/Object/Ext.app.ViewModel",
        "weight": "Number",
        "weighted": "Boolean",
        "width": "Number/String",
        "x": "Number",
        "xtype": "String",
        "y": "Number",
        "zIndex": "Number",
        "platformConfig": "Object",
        "responsiveConfig": "Object",
        "fitToParent": "Boolean",
        "config": "Object",
    };
    lockedgridregionMetaData.PROPERTIES = [
        'activeChildTabIndex',
        'activeItem',
        'allowFocusingDisabledChildren',
        'alwaysOnTop',
        'anchor',
        'anchorPosition',
        'ariaAttributes',
        'ariaDescribedBy',
        'ariaLabel',
        'ariaLabelledBy',
        'autoDestroy',
        'autoSize',
        'axisLock',
        'bbar',
        'bind',
        'bodyBorder',
        'bodyPadding',
        'bodyStyle',
        'border',
        'bottom',
        'buttonAlign',
        'buttons',
        'buttonToolbar',
        'cardSwitchAnimation',
        'centered',
        'closable',
        'closeAction',
        'closeToolText',
        'cls',
        'collapsed',
        'collapsible',
        'constrainAlign',
        'contentEl',
        'control',
        'controller',
        'data',
        'defaultFocus',
        'defaultListenerScope',
        'defaults',
        'defaultToolWeights',
        'defaultType',
        'disabled',
        'displayed',
        'docked',
        'draggable',
        'enterAnimation',
        'eventHandlers',
        'exitAnimation',
        'flex',
        'floated',
        'focusableContainer',
        'focusCls',
        'fullscreen',
        'grid',
        'header',
        'headerPosition',
        'height',
        'hidden',
        'hideAnimation',
        'hideMode',
        'hideOnMaskTap',
        'html',
        'icon',
        'iconAlign',
        'iconCls',
        'id',
        'inactiveChildTabIndex',
        'innerCls',
        'instanceCls',
        'itemId',
        'items',
        'keyMap',
        'keyMapEnabled',
        'keyMapTarget',
        'layout',
        'lbar',
        'left',
        'listeners',
        'locked',
        'manageBorders',
        'margin',
        'masked',
        'maxHeight',
        'maxWidth',
        'menuLabel',
        'minButtonWidth',
        'minHeight',
        'minWidth',
        'modal',
        'modelValidation',
        'name',
        'nameable',
        'nameHolder',
        'padding',
        'plugins',
        'publishes',
        'rbar',
        'record',
        'reference',
        'referenceHolder',
        'regionKey',
        'relative',
        'renderTo',
        'resetFocusPosition',
        'resizable',
        'right',
        'ripple',
        'scrollable',
        'selfAlign',
        'session',
        'shadow',
        'shareableName',
        'shim',
        'showAnimation',
        'standardButtons',
        'stateful',
        'statefulDefaults',
        'stateId',
        'style',
        'tabIndex',
        'tbar',
        'title',
        'titleAlign',
        'toFrontOnShow',
        'toolDefaults',
        'tools',
        'tooltip',
        'top',
        'touchAction',
        'tpl',
        'tplWriteMode',
        'translatable',
        'twoWayBindable',
        'ui',
        'userCls',
        'userSelectable',
        'viewModel',
        'weight',
        'weighted',
        'width',
        'x',
        'xtype',
        'y',
        'zIndex',
        'platformConfig',
        'responsiveConfig',
        'fitToParent',
        'config'
    ];
    lockedgridregionMetaData.EVENTS = [
        { name: 'activate', parameters: 'newActiveItem,lockedgridregion,oldActiveItem' },
        { name: 'activeItemchange', parameters: 'sender,value,oldValue' },
        { name: 'add', parameters: 'lockedgridregion,item,index' },
        { name: 'added', parameters: 'sender,container,index' },
        { name: 'beforeactiveItemchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforebottomchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforecenteredchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforecollapse', parameters: 'lockedgridregion' },
        { name: 'beforedisabledchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforedockedchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforeexpand', parameters: 'lockedgridregion' },
        { name: 'beforeheightchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforehiddenchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforehide', parameters: 'sender' },
        { name: 'beforeleftchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforemaxHeightchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforemaxWidthchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforeminHeightchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforeminWidthchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforeorientationchange', parameters: '' },
        { name: 'beforeresizedragstart', parameters: 'lockedgridregion,context' },
        { name: 'beforerightchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforescrollablechange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforeshow', parameters: 'sender' },
        { name: 'beforetofront', parameters: 'lockedgridregion' },
        { name: 'beforetopchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'beforewidthchange', parameters: 'sender,value,oldValue,undefined' },
        { name: 'blur', parameters: 'lockedgridregion,event' },
        { name: 'bottomchange', parameters: 'sender,value,oldValue' },
        { name: 'centeredchange', parameters: 'sender,value,oldValue' },
        { name: 'collapse', parameters: 'lockedgridregion' },
        { name: 'deactivate', parameters: 'oldActiveItem,lockedgridregion,newActiveItem' },
        { name: 'destroy', parameters: '' },
        { name: 'disabledchange', parameters: 'sender,value,oldValue' },
        { name: 'dockedchange', parameters: 'sender,value,oldValue' },
        { name: 'drawerhide', parameters: 'lockedgridregion' },
        { name: 'drawershow', parameters: 'lockedgridregion' },
        { name: 'erased', parameters: 'sender' },
        { name: 'expand', parameters: 'lockedgridregion' },
        { name: 'floatingchange', parameters: 'sender,positioned' },
        { name: 'focus', parameters: 'lockedgridregion,event' },
        { name: 'focusenter', parameters: 'lockedgridregion,event' },
        { name: 'focusleave', parameters: 'lockedgridregion,event' },
        { name: 'fullscreen', parameters: 'sender' },
        { name: 'heightchange', parameters: 'sender,value,oldValue' },
        { name: 'hiddenchange', parameters: 'sender,value,oldValue' },
        { name: 'hide', parameters: 'sender' },
        { name: 'initialize', parameters: 'sender' },
        { name: 'leftchange', parameters: 'sender,value,oldValue' },
        { name: 'maxHeightchange', parameters: 'sender,value,oldValue' },
        { name: 'maxWidthchange', parameters: 'sender,value,oldValue' },
        { name: 'minHeightchange', parameters: 'sender,value,oldValue' },
        { name: 'minWidthchange', parameters: 'sender,value,oldValue' },
        { name: 'move', parameters: 'lockedgridregion,item,toIndex,fromIndex' },
        { name: 'moved', parameters: 'sender,container,toIndex,fromIndex' },
        { name: 'orientationchange', parameters: '' },
        { name: 'painted', parameters: 'sender,element' },
        { name: 'positionedchange', parameters: 'sender,positioned' },
        { name: 'remove', parameters: 'lockedgridregion,item,index' },
        { name: 'removed', parameters: 'sender,container,index' },
        { name: 'renderedchange', parameters: 'lockedgridregion,item,rendered' },
        { name: 'resize', parameters: 'element,info' },
        { name: 'resizedrag', parameters: 'lockedgridregion,context' },
        { name: 'resizedragcancel', parameters: 'lockedgridregion,context' },
        { name: 'resizedragend', parameters: 'lockedgridregion,context' },
        { name: 'resizedragstart', parameters: 'lockedgridregion,context' },
        { name: 'rightchange', parameters: 'sender,value,oldValue' },
        { name: 'scrollablechange', parameters: 'sender,value,oldValue' },
        { name: 'show', parameters: 'sender' },
        { name: 'tofront', parameters: 'lockedgridregion' },
        { name: 'topchange', parameters: 'sender,value,oldValue' },
        { name: 'updatedata', parameters: 'sender,newData' },
        { name: 'widthchange', parameters: 'sender,value,oldValue' },
        { name: 'ready', parameters: '' }
    ];
    lockedgridregionMetaData.EVENTNAMES = [
        'activate',
        'activeItemchange',
        'add',
        'added',
        'beforeactiveItemchange',
        'beforebottomchange',
        'beforecenteredchange',
        'beforecollapse',
        'beforedisabledchange',
        'beforedockedchange',
        'beforeexpand',
        'beforeheightchange',
        'beforehiddenchange',
        'beforehide',
        'beforeleftchange',
        'beforemaxHeightchange',
        'beforemaxWidthchange',
        'beforeminHeightchange',
        'beforeminWidthchange',
        'beforeorientationchange',
        'beforeresizedragstart',
        'beforerightchange',
        'beforescrollablechange',
        'beforeshow',
        'beforetofront',
        'beforetopchange',
        'beforewidthchange',
        'blur',
        'bottomchange',
        'centeredchange',
        'collapse',
        'deactivate',
        'destroy',
        'disabledchange',
        'dockedchange',
        'drawerhide',
        'drawershow',
        'erased',
        'expand',
        'floatingchange',
        'focus',
        'focusenter',
        'focusleave',
        'fullscreen',
        'heightchange',
        'hiddenchange',
        'hide',
        'initialize',
        'leftchange',
        'maxHeightchange',
        'maxWidthchange',
        'minHeightchange',
        'minWidthchange',
        'move',
        'moved',
        'orientationchange',
        'painted',
        'positionedchange',
        'remove',
        'removed',
        'renderedchange',
        'resize',
        'resizedrag',
        'resizedragcancel',
        'resizedragend',
        'resizedragstart',
        'rightchange',
        'scrollablechange',
        'show',
        'tofront',
        'topchange',
        'updatedata',
        'widthchange',
        'ready'
    ];
    return lockedgridregionMetaData;
}());
export { lockedgridregionMetaData };
if (false) {
    /** @type {?} */
    lockedgridregionMetaData.XTYPE;
    /** @type {?} */
    lockedgridregionMetaData.PROPERTIESOBJECT;
    /** @type {?} */
    lockedgridregionMetaData.PROPERTIES;
    /** @type {?} */
    lockedgridregionMetaData.EVENTS;
    /** @type {?} */
    lockedgridregionMetaData.EVENTNAMES;
}
var ExtLockedgridregionComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ExtLockedgridregionComponent, _super);
    function ExtLockedgridregionComponent(eRef) {
        return _super.call(this, eRef, lockedgridregionMetaData) || this;
    }
    /**
     * @return {?}
     */
    ExtLockedgridregionComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { this.baseOnInit(lockedgridregionMetaData); };
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    ExtLockedgridregionComponent.prototype.ngAfterContentInit = 
    //public ngOnChanges(changes: SimpleChanges) {this.baseOnChanges(changes)}
    /**
     * @return {?}
     */
    function () {
        this.baseAfterContentInit();
        this['ready'].emit(this);
    };
    ExtLockedgridregionComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lockedgridregion',
                    inputs: lockedgridregionMetaData.PROPERTIES,
                    outputs: lockedgridregionMetaData.EVENTNAMES,
                    providers: [{ provide: base, useExisting: forwardRef(function () { return ExtLockedgridregionComponent; }) }],
                    template: '<ng-template #dynamic></ng-template>'
                }] }
    ];
    /** @nocollapse */
    ExtLockedgridregionComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    return ExtLockedgridregionComponent;
}(base));
export { ExtLockedgridregionComponent };
//# sourceMappingURL=data:application/json;base64,